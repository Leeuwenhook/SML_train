2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:36,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:36,973:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:36,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,018:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,020:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,027:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,074:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,083:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,122:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,171:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,176:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:38,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:41:38,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:41:58,045:INFO:PyCaret RegressionExperiment
2024-03-16 15:41:58,045:INFO:Logging name: reg-default-name
2024-03-16 15:41:58,045:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 15:41:58,045:INFO:version 3.3.0
2024-03-16 15:41:58,047:INFO:Initializing setup()
2024-03-16 15:41:58,047:INFO:self.USI: a07e
2024-03-16 15:41:58,047:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 15:41:58,047:INFO:Checking environment
2024-03-16 15:41:58,047:INFO:python_version: 3.11.5
2024-03-16 15:41:58,047:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 15:41:58,047:INFO:machine: AMD64
2024-03-16 15:41:58,047:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 15:41:58,047:INFO:Memory: svmem(total=34129678336, available=14922956800, percent=56.3, used=19206721536, free=14922956800)
2024-03-16 15:41:58,047:INFO:Physical Core: 6
2024-03-16 15:41:58,047:INFO:Logical Core: 12
2024-03-16 15:41:58,047:INFO:Checking libraries
2024-03-16 15:41:58,047:INFO:System:
2024-03-16 15:41:58,047:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 15:41:58,048:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 15:41:58,048:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 15:41:58,048:INFO:PyCaret required dependencies:
2024-03-16 15:42:00,145:INFO:                 pip: 24.0
2024-03-16 15:42:00,145:INFO:          setuptools: 68.0.0
2024-03-16 15:42:00,146:INFO:             pycaret: 3.3.0
2024-03-16 15:42:00,146:INFO:             IPython: 8.15.0
2024-03-16 15:42:00,146:INFO:          ipywidgets: 8.0.4
2024-03-16 15:42:00,146:INFO:                tqdm: 4.65.0
2024-03-16 15:42:00,146:INFO:               numpy: 1.24.3
2024-03-16 15:42:00,146:INFO:              pandas: 2.0.3
2024-03-16 15:42:00,147:INFO:              jinja2: 3.1.2
2024-03-16 15:42:00,147:INFO:               scipy: 1.11.1
2024-03-16 15:42:00,147:INFO:              joblib: 1.2.0
2024-03-16 15:42:00,147:INFO:             sklearn: 1.3.0
2024-03-16 15:42:00,147:INFO:                pyod: 1.1.3
2024-03-16 15:42:00,147:INFO:            imblearn: 0.10.1
2024-03-16 15:42:00,147:INFO:   category_encoders: 2.6.3
2024-03-16 15:42:00,147:INFO:            lightgbm: 4.3.0
2024-03-16 15:42:00,147:INFO:               numba: 0.57.1
2024-03-16 15:42:00,149:INFO:            requests: 2.31.0
2024-03-16 15:42:00,149:INFO:          matplotlib: 3.7.2
2024-03-16 15:42:00,149:INFO:          scikitplot: 0.3.7
2024-03-16 15:42:00,149:INFO:         yellowbrick: 1.5
2024-03-16 15:42:00,149:INFO:              plotly: 5.9.0
2024-03-16 15:42:00,149:INFO:    plotly-resampler: Not installed
2024-03-16 15:42:00,150:INFO:             kaleido: 0.2.1
2024-03-16 15:42:00,150:INFO:           schemdraw: 0.15
2024-03-16 15:42:00,150:INFO:         statsmodels: 0.14.0
2024-03-16 15:42:00,150:INFO:              sktime: 0.27.0
2024-03-16 15:42:00,151:INFO:               tbats: 1.1.3
2024-03-16 15:42:00,151:INFO:            pmdarima: 2.0.4
2024-03-16 15:42:00,151:INFO:              psutil: 5.9.0
2024-03-16 15:42:00,151:INFO:          markupsafe: 2.1.1
2024-03-16 15:42:00,152:INFO:             pickle5: Not installed
2024-03-16 15:42:00,152:INFO:         cloudpickle: 2.2.1
2024-03-16 15:42:00,152:INFO:         deprecation: 2.1.0
2024-03-16 15:42:00,152:INFO:              xxhash: 2.0.2
2024-03-16 15:42:00,152:INFO:           wurlitzer: Not installed
2024-03-16 15:42:00,152:INFO:PyCaret optional dependencies:
2024-03-16 15:42:00,200:INFO:                shap: Not installed
2024-03-16 15:42:00,200:INFO:           interpret: Not installed
2024-03-16 15:42:00,200:INFO:                umap: Not installed
2024-03-16 15:42:00,201:INFO:     ydata_profiling: Not installed
2024-03-16 15:42:00,201:INFO:  explainerdashboard: Not installed
2024-03-16 15:42:00,201:INFO:             autoviz: Not installed
2024-03-16 15:42:00,201:INFO:           fairlearn: Not installed
2024-03-16 15:42:00,201:INFO:          deepchecks: Not installed
2024-03-16 15:42:00,201:INFO:             xgboost: 2.0.3
2024-03-16 15:42:00,201:INFO:            catboost: Not installed
2024-03-16 15:42:00,202:INFO:              kmodes: Not installed
2024-03-16 15:42:00,202:INFO:             mlxtend: Not installed
2024-03-16 15:42:00,202:INFO:       statsforecast: Not installed
2024-03-16 15:42:00,202:INFO:        tune_sklearn: Not installed
2024-03-16 15:42:00,202:INFO:                 ray: Not installed
2024-03-16 15:42:00,202:INFO:            hyperopt: Not installed
2024-03-16 15:42:00,202:INFO:              optuna: Not installed
2024-03-16 15:42:00,202:INFO:               skopt: Not installed
2024-03-16 15:42:00,202:INFO:              mlflow: 2.11.1
2024-03-16 15:42:00,203:INFO:              gradio: Not installed
2024-03-16 15:42:00,203:INFO:             fastapi: Not installed
2024-03-16 15:42:00,203:INFO:             uvicorn: Not installed
2024-03-16 15:42:00,203:INFO:              m2cgen: Not installed
2024-03-16 15:42:00,203:INFO:           evidently: Not installed
2024-03-16 15:42:00,203:INFO:               fugue: Not installed
2024-03-16 15:42:00,203:INFO:           streamlit: Not installed
2024-03-16 15:42:00,203:INFO:             prophet: Not installed
2024-03-16 15:42:00,203:INFO:None
2024-03-16 15:42:00,204:INFO:Set up data.
2024-03-16 15:42:00,224:INFO:Set up folding strategy.
2024-03-16 15:42:00,225:INFO:Set up train/test split.
2024-03-16 15:42:00,251:INFO:Set up index.
2024-03-16 15:42:00,252:INFO:Assigning column types.
2024-03-16 15:42:00,269:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 15:42:00,270:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,289:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,462:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,466:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,472:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,610:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,613:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 15:42:00,619:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,624:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,754:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,760:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,871:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,875:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 15:42:00,885:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,027:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,287:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,292:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 15:42:01,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,512:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 15:42:01,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,795:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,925:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,928:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 15:42:02,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,186:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,192:INFO:Preparing preprocessing pipeline...
2024-03-16 15:42:02,192:INFO:Set up simple imputation.
2024-03-16 15:42:02,193:INFO:Set up column name cleaning.
2024-03-16 15:42:02,235:INFO:Finished creating preprocessing pipeline.
2024-03-16 15:42:02,244:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:42:02,245:INFO:Creating final display dataframe.
2024-03-16 15:42:02,378:INFO:Setup _display_container:                     Description             Value
0                    Session id              3488
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 23)
4        Transformed data shape        (1859, 23)
5   Transformed train set shape        (1301, 23)
6    Transformed test set shape         (558, 23)
7              Numeric features                22
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              a07e
2024-03-16 15:42:02,587:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,751:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,756:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 15:42:02,756:INFO:Logging experiment in loggers
2024-03-16 15:42:03,294:INFO:SubProcess save_model() called ==================================
2024-03-16 15:42:03,353:INFO:Initializing save_model()
2024-03-16 15:42:03,354:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpv9silkzd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 15:42:03,354:INFO:Adding model into prep_pipe
2024-03-16 15:42:03,354:WARNING:Only Model saved as it was a pipeline.
2024-03-16 15:42:03,368:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpv9silkzd\Transformation Pipeline.pkl saved in current working directory
2024-03-16 15:42:03,393:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:42:03,393:INFO:save_model() successfully completed......................................
2024-03-16 15:42:03,597:INFO:SubProcess save_model() end ==================================
2024-03-16 15:42:03,613:INFO:setup() successfully completed in 4.71s...............
2024-03-16 15:42:03,613:INFO:Initializing compare_models()
2024-03-16 15:42:03,614:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 15:42:03,614:INFO:Checking exceptions
2024-03-16 15:42:03,618:INFO:Preparing display monitor
2024-03-16 15:42:03,667:INFO:Initializing Linear Regression
2024-03-16 15:42:03,667:INFO:Total runtime is 1.0776519775390626e-05 minutes
2024-03-16 15:42:03,673:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:03,674:INFO:Initializing create_model()
2024-03-16 15:42:03,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:03,675:INFO:Checking exceptions
2024-03-16 15:42:03,675:INFO:Importing libraries
2024-03-16 15:42:03,675:INFO:Copying training dataset
2024-03-16 15:42:03,692:INFO:Defining folds
2024-03-16 15:42:03,692:INFO:Declaring metric variables
2024-03-16 15:42:03,699:INFO:Importing untrained model
2024-03-16 15:42:03,705:INFO:Linear Regression Imported successfully
2024-03-16 15:42:03,732:INFO:Starting cross validation
2024-03-16 15:42:03,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:23,667:INFO:Calculating mean and std
2024-03-16 15:42:23,669:INFO:Creating metrics dataframe
2024-03-16 15:42:23,673:INFO:Uploading results into container
2024-03-16 15:42:23,675:INFO:Uploading model into container now
2024-03-16 15:42:23,676:INFO:_master_model_container: 1
2024-03-16 15:42:23,677:INFO:_display_container: 2
2024-03-16 15:42:23,677:INFO:LinearRegression(n_jobs=-1)
2024-03-16 15:42:23,678:INFO:create_model() successfully completed......................................
2024-03-16 15:42:23,856:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:23,857:INFO:Creating metrics dataframe
2024-03-16 15:42:23,876:INFO:Initializing Lasso Regression
2024-03-16 15:42:23,877:INFO:Total runtime is 0.3368278384208679 minutes
2024-03-16 15:42:23,883:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:23,883:INFO:Initializing create_model()
2024-03-16 15:42:23,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:23,884:INFO:Checking exceptions
2024-03-16 15:42:23,884:INFO:Importing libraries
2024-03-16 15:42:23,884:INFO:Copying training dataset
2024-03-16 15:42:23,901:INFO:Defining folds
2024-03-16 15:42:23,901:INFO:Declaring metric variables
2024-03-16 15:42:23,909:INFO:Importing untrained model
2024-03-16 15:42:23,919:INFO:Lasso Regression Imported successfully
2024-03-16 15:42:23,936:INFO:Starting cross validation
2024-03-16 15:42:23,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:29,881:INFO:Calculating mean and std
2024-03-16 15:42:29,882:INFO:Creating metrics dataframe
2024-03-16 15:42:29,885:INFO:Uploading results into container
2024-03-16 15:42:29,885:INFO:Uploading model into container now
2024-03-16 15:42:29,886:INFO:_master_model_container: 2
2024-03-16 15:42:29,886:INFO:_display_container: 2
2024-03-16 15:42:29,886:INFO:Lasso(random_state=3488)
2024-03-16 15:42:29,887:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,067:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,068:INFO:Creating metrics dataframe
2024-03-16 15:42:30,083:INFO:Initializing Ridge Regression
2024-03-16 15:42:30,083:INFO:Total runtime is 0.44026156266530353 minutes
2024-03-16 15:42:30,090:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,090:INFO:Initializing create_model()
2024-03-16 15:42:30,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,091:INFO:Checking exceptions
2024-03-16 15:42:30,091:INFO:Importing libraries
2024-03-16 15:42:30,091:INFO:Copying training dataset
2024-03-16 15:42:30,104:INFO:Defining folds
2024-03-16 15:42:30,104:INFO:Declaring metric variables
2024-03-16 15:42:30,109:INFO:Importing untrained model
2024-03-16 15:42:30,116:INFO:Ridge Regression Imported successfully
2024-03-16 15:42:30,130:INFO:Starting cross validation
2024-03-16 15:42:30,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:30,206:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.32874e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,207:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.38868e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,216:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.90222e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,230:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.77128e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,245:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.24534e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,259:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.82731e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,273:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.42383e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,287:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.80576e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,298:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.30941e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,310:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.48616e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,327:INFO:Calculating mean and std
2024-03-16 15:42:30,329:INFO:Creating metrics dataframe
2024-03-16 15:42:30,332:INFO:Uploading results into container
2024-03-16 15:42:30,333:INFO:Uploading model into container now
2024-03-16 15:42:30,334:INFO:_master_model_container: 3
2024-03-16 15:42:30,334:INFO:_display_container: 2
2024-03-16 15:42:30,335:INFO:Ridge(random_state=3488)
2024-03-16 15:42:30,335:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,512:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,512:INFO:Creating metrics dataframe
2024-03-16 15:42:30,525:INFO:Initializing Elastic Net
2024-03-16 15:42:30,525:INFO:Total runtime is 0.4476303776105245 minutes
2024-03-16 15:42:30,533:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,534:INFO:Initializing create_model()
2024-03-16 15:42:30,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,534:INFO:Checking exceptions
2024-03-16 15:42:30,534:INFO:Importing libraries
2024-03-16 15:42:30,534:INFO:Copying training dataset
2024-03-16 15:42:30,551:INFO:Defining folds
2024-03-16 15:42:30,552:INFO:Declaring metric variables
2024-03-16 15:42:30,560:INFO:Importing untrained model
2024-03-16 15:42:30,566:INFO:Elastic Net Imported successfully
2024-03-16 15:42:30,580:INFO:Starting cross validation
2024-03-16 15:42:30,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:30,780:INFO:Calculating mean and std
2024-03-16 15:42:30,782:INFO:Creating metrics dataframe
2024-03-16 15:42:30,785:INFO:Uploading results into container
2024-03-16 15:42:30,786:INFO:Uploading model into container now
2024-03-16 15:42:30,787:INFO:_master_model_container: 4
2024-03-16 15:42:30,787:INFO:_display_container: 2
2024-03-16 15:42:30,788:INFO:ElasticNet(random_state=3488)
2024-03-16 15:42:30,788:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,937:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,938:INFO:Creating metrics dataframe
2024-03-16 15:42:30,952:INFO:Initializing Least Angle Regression
2024-03-16 15:42:30,952:INFO:Total runtime is 0.45474464893341066 minutes
2024-03-16 15:42:30,958:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,959:INFO:Initializing create_model()
2024-03-16 15:42:30,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,959:INFO:Checking exceptions
2024-03-16 15:42:30,959:INFO:Importing libraries
2024-03-16 15:42:30,959:INFO:Copying training dataset
2024-03-16 15:42:30,969:INFO:Defining folds
2024-03-16 15:42:30,969:INFO:Declaring metric variables
2024-03-16 15:42:30,975:INFO:Importing untrained model
2024-03-16 15:42:30,981:INFO:Least Angle Regression Imported successfully
2024-03-16 15:42:30,993:INFO:Starting cross validation
2024-03-16 15:42:30,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,156:INFO:Calculating mean and std
2024-03-16 15:42:31,158:INFO:Creating metrics dataframe
2024-03-16 15:42:31,161:INFO:Uploading results into container
2024-03-16 15:42:31,161:INFO:Uploading model into container now
2024-03-16 15:42:31,162:INFO:_master_model_container: 5
2024-03-16 15:42:31,162:INFO:_display_container: 2
2024-03-16 15:42:31,162:INFO:Lars(random_state=3488)
2024-03-16 15:42:31,163:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,297:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,297:INFO:Creating metrics dataframe
2024-03-16 15:42:31,307:INFO:Initializing Lasso Least Angle Regression
2024-03-16 15:42:31,307:INFO:Total runtime is 0.4606722036997477 minutes
2024-03-16 15:42:31,314:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,314:INFO:Initializing create_model()
2024-03-16 15:42:31,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,314:INFO:Checking exceptions
2024-03-16 15:42:31,315:INFO:Importing libraries
2024-03-16 15:42:31,315:INFO:Copying training dataset
2024-03-16 15:42:31,325:INFO:Defining folds
2024-03-16 15:42:31,325:INFO:Declaring metric variables
2024-03-16 15:42:31,331:INFO:Importing untrained model
2024-03-16 15:42:31,335:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 15:42:31,346:INFO:Starting cross validation
2024-03-16 15:42:31,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,494:INFO:Calculating mean and std
2024-03-16 15:42:31,495:INFO:Creating metrics dataframe
2024-03-16 15:42:31,499:INFO:Uploading results into container
2024-03-16 15:42:31,499:INFO:Uploading model into container now
2024-03-16 15:42:31,500:INFO:_master_model_container: 6
2024-03-16 15:42:31,501:INFO:_display_container: 2
2024-03-16 15:42:31,501:INFO:LassoLars(random_state=3488)
2024-03-16 15:42:31,502:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,648:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,648:INFO:Creating metrics dataframe
2024-03-16 15:42:31,659:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 15:42:31,660:INFO:Total runtime is 0.4665589928627014 minutes
2024-03-16 15:42:31,665:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,665:INFO:Initializing create_model()
2024-03-16 15:42:31,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,665:INFO:Checking exceptions
2024-03-16 15:42:31,666:INFO:Importing libraries
2024-03-16 15:42:31,666:INFO:Copying training dataset
2024-03-16 15:42:31,678:INFO:Defining folds
2024-03-16 15:42:31,678:INFO:Declaring metric variables
2024-03-16 15:42:31,683:INFO:Importing untrained model
2024-03-16 15:42:31,689:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 15:42:31,701:INFO:Starting cross validation
2024-03-16 15:42:31,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,838:INFO:Calculating mean and std
2024-03-16 15:42:31,840:INFO:Creating metrics dataframe
2024-03-16 15:42:31,843:INFO:Uploading results into container
2024-03-16 15:42:31,843:INFO:Uploading model into container now
2024-03-16 15:42:31,844:INFO:_master_model_container: 7
2024-03-16 15:42:31,844:INFO:_display_container: 2
2024-03-16 15:42:31,844:INFO:OrthogonalMatchingPursuit()
2024-03-16 15:42:31,844:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,972:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,972:INFO:Creating metrics dataframe
2024-03-16 15:42:31,984:INFO:Initializing Bayesian Ridge
2024-03-16 15:42:31,984:INFO:Total runtime is 0.4719486594200134 minutes
2024-03-16 15:42:31,989:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,989:INFO:Initializing create_model()
2024-03-16 15:42:31,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,989:INFO:Checking exceptions
2024-03-16 15:42:31,989:INFO:Importing libraries
2024-03-16 15:42:31,990:INFO:Copying training dataset
2024-03-16 15:42:32,002:INFO:Defining folds
2024-03-16 15:42:32,002:INFO:Declaring metric variables
2024-03-16 15:42:32,007:INFO:Importing untrained model
2024-03-16 15:42:32,013:INFO:Bayesian Ridge Imported successfully
2024-03-16 15:42:32,023:INFO:Starting cross validation
2024-03-16 15:42:32,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,175:INFO:Calculating mean and std
2024-03-16 15:42:32,177:INFO:Creating metrics dataframe
2024-03-16 15:42:32,180:INFO:Uploading results into container
2024-03-16 15:42:32,180:INFO:Uploading model into container now
2024-03-16 15:42:32,181:INFO:_master_model_container: 8
2024-03-16 15:42:32,181:INFO:_display_container: 2
2024-03-16 15:42:32,181:INFO:BayesianRidge()
2024-03-16 15:42:32,181:INFO:create_model() successfully completed......................................
2024-03-16 15:42:32,324:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:32,325:INFO:Creating metrics dataframe
2024-03-16 15:42:32,339:INFO:Initializing Passive Aggressive Regressor
2024-03-16 15:42:32,340:INFO:Total runtime is 0.4778779864311218 minutes
2024-03-16 15:42:32,347:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:32,347:INFO:Initializing create_model()
2024-03-16 15:42:32,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:32,348:INFO:Checking exceptions
2024-03-16 15:42:32,348:INFO:Importing libraries
2024-03-16 15:42:32,348:INFO:Copying training dataset
2024-03-16 15:42:32,359:INFO:Defining folds
2024-03-16 15:42:32,359:INFO:Declaring metric variables
2024-03-16 15:42:32,366:INFO:Importing untrained model
2024-03-16 15:42:32,372:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 15:42:32,387:INFO:Starting cross validation
2024-03-16 15:42:32,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,599:INFO:Calculating mean and std
2024-03-16 15:42:32,600:INFO:Creating metrics dataframe
2024-03-16 15:42:32,603:INFO:Uploading results into container
2024-03-16 15:42:32,604:INFO:Uploading model into container now
2024-03-16 15:42:32,605:INFO:_master_model_container: 9
2024-03-16 15:42:32,606:INFO:_display_container: 2
2024-03-16 15:42:32,606:INFO:PassiveAggressiveRegressor(random_state=3488)
2024-03-16 15:42:32,606:INFO:create_model() successfully completed......................................
2024-03-16 15:42:32,745:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:32,746:INFO:Creating metrics dataframe
2024-03-16 15:42:32,757:INFO:Initializing Huber Regressor
2024-03-16 15:42:32,758:INFO:Total runtime is 0.4848565300305684 minutes
2024-03-16 15:42:32,763:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:32,763:INFO:Initializing create_model()
2024-03-16 15:42:32,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:32,763:INFO:Checking exceptions
2024-03-16 15:42:32,764:INFO:Importing libraries
2024-03-16 15:42:32,764:INFO:Copying training dataset
2024-03-16 15:42:32,776:INFO:Defining folds
2024-03-16 15:42:32,776:INFO:Declaring metric variables
2024-03-16 15:42:32,781:INFO:Importing untrained model
2024-03-16 15:42:32,786:INFO:Huber Regressor Imported successfully
2024-03-16 15:42:32,797:INFO:Starting cross validation
2024-03-16 15:42:32,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,970:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:32,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,015:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,017:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,032:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,036:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,057:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,071:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,087:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,101:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,117:INFO:Calculating mean and std
2024-03-16 15:42:33,119:INFO:Creating metrics dataframe
2024-03-16 15:42:33,123:INFO:Uploading results into container
2024-03-16 15:42:33,124:INFO:Uploading model into container now
2024-03-16 15:42:33,125:INFO:_master_model_container: 10
2024-03-16 15:42:33,125:INFO:_display_container: 2
2024-03-16 15:42:33,126:INFO:HuberRegressor()
2024-03-16 15:42:33,126:INFO:create_model() successfully completed......................................
2024-03-16 15:42:33,278:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:33,279:INFO:Creating metrics dataframe
2024-03-16 15:42:33,295:INFO:Initializing K Neighbors Regressor
2024-03-16 15:42:33,295:INFO:Total runtime is 0.4938077886899312 minutes
2024-03-16 15:42:33,301:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:33,301:INFO:Initializing create_model()
2024-03-16 15:42:33,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:33,301:INFO:Checking exceptions
2024-03-16 15:42:33,301:INFO:Importing libraries
2024-03-16 15:42:33,301:INFO:Copying training dataset
2024-03-16 15:42:33,313:INFO:Defining folds
2024-03-16 15:42:33,313:INFO:Declaring metric variables
2024-03-16 15:42:33,319:INFO:Importing untrained model
2024-03-16 15:42:33,325:INFO:K Neighbors Regressor Imported successfully
2024-03-16 15:42:33,344:INFO:Starting cross validation
2024-03-16 15:42:33,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:33,943:INFO:Calculating mean and std
2024-03-16 15:42:33,944:INFO:Creating metrics dataframe
2024-03-16 15:42:33,948:INFO:Uploading results into container
2024-03-16 15:42:33,948:INFO:Uploading model into container now
2024-03-16 15:42:33,949:INFO:_master_model_container: 11
2024-03-16 15:42:33,949:INFO:_display_container: 2
2024-03-16 15:42:33,950:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 15:42:33,950:INFO:create_model() successfully completed......................................
2024-03-16 15:42:34,093:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:34,093:INFO:Creating metrics dataframe
2024-03-16 15:42:34,106:INFO:Initializing Decision Tree Regressor
2024-03-16 15:42:34,107:INFO:Total runtime is 0.5073339859644571 minutes
2024-03-16 15:42:34,112:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:34,113:INFO:Initializing create_model()
2024-03-16 15:42:34,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:34,114:INFO:Checking exceptions
2024-03-16 15:42:34,114:INFO:Importing libraries
2024-03-16 15:42:34,114:INFO:Copying training dataset
2024-03-16 15:42:34,126:INFO:Defining folds
2024-03-16 15:42:34,127:INFO:Declaring metric variables
2024-03-16 15:42:34,133:INFO:Importing untrained model
2024-03-16 15:42:34,138:INFO:Decision Tree Regressor Imported successfully
2024-03-16 15:42:34,151:INFO:Starting cross validation
2024-03-16 15:42:34,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:34,366:INFO:Calculating mean and std
2024-03-16 15:42:34,368:INFO:Creating metrics dataframe
2024-03-16 15:42:34,371:INFO:Uploading results into container
2024-03-16 15:42:34,372:INFO:Uploading model into container now
2024-03-16 15:42:34,373:INFO:_master_model_container: 12
2024-03-16 15:42:34,373:INFO:_display_container: 2
2024-03-16 15:42:34,375:INFO:DecisionTreeRegressor(random_state=3488)
2024-03-16 15:42:34,376:INFO:create_model() successfully completed......................................
2024-03-16 15:42:34,520:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:34,520:INFO:Creating metrics dataframe
2024-03-16 15:42:34,534:INFO:Initializing Random Forest Regressor
2024-03-16 15:42:34,534:INFO:Total runtime is 0.5144459565480549 minutes
2024-03-16 15:42:34,539:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:34,539:INFO:Initializing create_model()
2024-03-16 15:42:34,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:34,540:INFO:Checking exceptions
2024-03-16 15:42:34,540:INFO:Importing libraries
2024-03-16 15:42:34,540:INFO:Copying training dataset
2024-03-16 15:42:34,552:INFO:Defining folds
2024-03-16 15:42:34,552:INFO:Declaring metric variables
2024-03-16 15:42:34,559:INFO:Importing untrained model
2024-03-16 15:42:34,566:INFO:Random Forest Regressor Imported successfully
2024-03-16 15:42:34,579:INFO:Starting cross validation
2024-03-16 15:42:34,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:39,789:INFO:Calculating mean and std
2024-03-16 15:42:39,795:INFO:Creating metrics dataframe
2024-03-16 15:42:39,801:INFO:Uploading results into container
2024-03-16 15:42:39,802:INFO:Uploading model into container now
2024-03-16 15:42:39,803:INFO:_master_model_container: 13
2024-03-16 15:42:39,803:INFO:_display_container: 2
2024-03-16 15:42:39,805:INFO:RandomForestRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:39,805:INFO:create_model() successfully completed......................................
2024-03-16 15:42:39,996:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:39,996:INFO:Creating metrics dataframe
2024-03-16 15:42:40,017:INFO:Initializing Extra Trees Regressor
2024-03-16 15:42:40,017:INFO:Total runtime is 0.6058435320854186 minutes
2024-03-16 15:42:40,026:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:40,027:INFO:Initializing create_model()
2024-03-16 15:42:40,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:40,028:INFO:Checking exceptions
2024-03-16 15:42:40,028:INFO:Importing libraries
2024-03-16 15:42:40,028:INFO:Copying training dataset
2024-03-16 15:42:40,042:INFO:Defining folds
2024-03-16 15:42:40,043:INFO:Declaring metric variables
2024-03-16 15:42:40,049:INFO:Importing untrained model
2024-03-16 15:42:40,057:INFO:Extra Trees Regressor Imported successfully
2024-03-16 15:42:40,075:INFO:Starting cross validation
2024-03-16 15:42:40,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:43,204:INFO:Calculating mean and std
2024-03-16 15:42:43,209:INFO:Creating metrics dataframe
2024-03-16 15:42:43,216:INFO:Uploading results into container
2024-03-16 15:42:43,217:INFO:Uploading model into container now
2024-03-16 15:42:43,218:INFO:_master_model_container: 14
2024-03-16 15:42:43,218:INFO:_display_container: 2
2024-03-16 15:42:43,220:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:43,220:INFO:create_model() successfully completed......................................
2024-03-16 15:42:43,427:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:43,427:INFO:Creating metrics dataframe
2024-03-16 15:42:43,448:INFO:Initializing AdaBoost Regressor
2024-03-16 15:42:43,449:INFO:Total runtime is 0.6630326072374979 minutes
2024-03-16 15:42:43,456:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:43,457:INFO:Initializing create_model()
2024-03-16 15:42:43,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:43,458:INFO:Checking exceptions
2024-03-16 15:42:43,458:INFO:Importing libraries
2024-03-16 15:42:43,458:INFO:Copying training dataset
2024-03-16 15:42:43,480:INFO:Defining folds
2024-03-16 15:42:43,480:INFO:Declaring metric variables
2024-03-16 15:42:43,491:INFO:Importing untrained model
2024-03-16 15:42:43,499:INFO:AdaBoost Regressor Imported successfully
2024-03-16 15:42:43,515:INFO:Starting cross validation
2024-03-16 15:42:43,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:44,345:INFO:Calculating mean and std
2024-03-16 15:42:44,348:INFO:Creating metrics dataframe
2024-03-16 15:42:44,351:INFO:Uploading results into container
2024-03-16 15:42:44,352:INFO:Uploading model into container now
2024-03-16 15:42:44,353:INFO:_master_model_container: 15
2024-03-16 15:42:44,354:INFO:_display_container: 2
2024-03-16 15:42:44,354:INFO:AdaBoostRegressor(random_state=3488)
2024-03-16 15:42:44,355:INFO:create_model() successfully completed......................................
2024-03-16 15:42:44,521:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:44,521:INFO:Creating metrics dataframe
2024-03-16 15:42:44,539:INFO:Initializing Gradient Boosting Regressor
2024-03-16 15:42:44,539:INFO:Total runtime is 0.681202220916748 minutes
2024-03-16 15:42:44,544:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:44,545:INFO:Initializing create_model()
2024-03-16 15:42:44,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:44,545:INFO:Checking exceptions
2024-03-16 15:42:44,545:INFO:Importing libraries
2024-03-16 15:42:44,545:INFO:Copying training dataset
2024-03-16 15:42:44,561:INFO:Defining folds
2024-03-16 15:42:44,561:INFO:Declaring metric variables
2024-03-16 15:42:44,567:INFO:Importing untrained model
2024-03-16 15:42:44,572:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:42:44,585:INFO:Starting cross validation
2024-03-16 15:42:44,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:46,420:INFO:Calculating mean and std
2024-03-16 15:42:46,426:INFO:Creating metrics dataframe
2024-03-16 15:42:46,432:INFO:Uploading results into container
2024-03-16 15:42:46,433:INFO:Uploading model into container now
2024-03-16 15:42:46,435:INFO:_master_model_container: 16
2024-03-16 15:42:46,435:INFO:_display_container: 2
2024-03-16 15:42:46,438:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:42:46,439:INFO:create_model() successfully completed......................................
2024-03-16 15:42:46,704:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:46,704:INFO:Creating metrics dataframe
2024-03-16 15:42:46,735:INFO:Initializing Extreme Gradient Boosting
2024-03-16 15:42:46,736:INFO:Total runtime is 0.7178216457366943 minutes
2024-03-16 15:42:46,747:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:46,748:INFO:Initializing create_model()
2024-03-16 15:42:46,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:46,749:INFO:Checking exceptions
2024-03-16 15:42:46,749:INFO:Importing libraries
2024-03-16 15:42:46,749:INFO:Copying training dataset
2024-03-16 15:42:46,772:INFO:Defining folds
2024-03-16 15:42:46,772:INFO:Declaring metric variables
2024-03-16 15:42:46,783:INFO:Importing untrained model
2024-03-16 15:42:46,793:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 15:42:46,810:INFO:Starting cross validation
2024-03-16 15:42:46,814:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:49,906:INFO:Calculating mean and std
2024-03-16 15:42:49,910:INFO:Creating metrics dataframe
2024-03-16 15:42:49,918:INFO:Uploading results into container
2024-03-16 15:42:49,920:INFO:Uploading model into container now
2024-03-16 15:42:49,921:INFO:_master_model_container: 17
2024-03-16 15:42:49,921:INFO:_display_container: 2
2024-03-16 15:42:49,926:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3488, ...)
2024-03-16 15:42:49,926:INFO:create_model() successfully completed......................................
2024-03-16 15:42:50,144:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:50,145:INFO:Creating metrics dataframe
2024-03-16 15:42:50,166:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 15:42:50,166:INFO:Total runtime is 0.7749788999557494 minutes
2024-03-16 15:42:50,173:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:50,174:INFO:Initializing create_model()
2024-03-16 15:42:50,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:50,175:INFO:Checking exceptions
2024-03-16 15:42:50,175:INFO:Importing libraries
2024-03-16 15:42:50,175:INFO:Copying training dataset
2024-03-16 15:42:50,190:INFO:Defining folds
2024-03-16 15:42:50,191:INFO:Declaring metric variables
2024-03-16 15:42:50,200:INFO:Importing untrained model
2024-03-16 15:42:50,209:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 15:42:50,228:INFO:Starting cross validation
2024-03-16 15:42:50,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:55,773:INFO:Calculating mean and std
2024-03-16 15:42:55,778:INFO:Creating metrics dataframe
2024-03-16 15:42:55,786:INFO:Uploading results into container
2024-03-16 15:42:55,788:INFO:Uploading model into container now
2024-03-16 15:42:55,789:INFO:_master_model_container: 18
2024-03-16 15:42:55,789:INFO:_display_container: 2
2024-03-16 15:42:55,791:INFO:LGBMRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:55,791:INFO:create_model() successfully completed......................................
2024-03-16 15:42:56,003:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:56,004:INFO:Creating metrics dataframe
2024-03-16 15:42:56,026:INFO:Initializing Dummy Regressor
2024-03-16 15:42:56,026:INFO:Total runtime is 0.872644829750061 minutes
2024-03-16 15:42:56,033:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:56,034:INFO:Initializing create_model()
2024-03-16 15:42:56,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:56,034:INFO:Checking exceptions
2024-03-16 15:42:56,035:INFO:Importing libraries
2024-03-16 15:42:56,035:INFO:Copying training dataset
2024-03-16 15:42:56,050:INFO:Defining folds
2024-03-16 15:42:56,050:INFO:Declaring metric variables
2024-03-16 15:42:56,059:INFO:Importing untrained model
2024-03-16 15:42:56,067:INFO:Dummy Regressor Imported successfully
2024-03-16 15:42:56,083:INFO:Starting cross validation
2024-03-16 15:42:56,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:56,314:INFO:Calculating mean and std
2024-03-16 15:42:56,317:INFO:Creating metrics dataframe
2024-03-16 15:42:56,324:INFO:Uploading results into container
2024-03-16 15:42:56,325:INFO:Uploading model into container now
2024-03-16 15:42:56,326:INFO:_master_model_container: 19
2024-03-16 15:42:56,326:INFO:_display_container: 2
2024-03-16 15:42:56,327:INFO:DummyRegressor()
2024-03-16 15:42:56,327:INFO:create_model() successfully completed......................................
2024-03-16 15:42:56,496:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:56,496:INFO:Creating metrics dataframe
2024-03-16 15:42:56,518:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 15:42:56,535:INFO:Initializing create_model()
2024-03-16 15:42:56,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=GradientBoostingRegressor(random_state=3488), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:56,536:INFO:Checking exceptions
2024-03-16 15:42:56,539:INFO:Importing libraries
2024-03-16 15:42:56,539:INFO:Copying training dataset
2024-03-16 15:42:56,554:INFO:Defining folds
2024-03-16 15:42:56,554:INFO:Declaring metric variables
2024-03-16 15:42:56,554:INFO:Importing untrained model
2024-03-16 15:42:56,555:INFO:Declaring custom model
2024-03-16 15:42:56,557:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:42:56,559:INFO:Cross validation set to False
2024-03-16 15:42:56,560:INFO:Fitting Model
2024-03-16 15:42:57,182:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:42:57,182:INFO:create_model() successfully completed......................................
2024-03-16 15:42:57,316:INFO:Creating Dashboard logs
2024-03-16 15:42:57,322:INFO:Model: Gradient Boosting Regressor
2024-03-16 15:42:57,369:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3488, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 15:42:57,493:INFO:Initializing predict_model()
2024-03-16 15:42:57,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=GradientBoostingRegressor(random_state=3488), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82CEA0B80>)
2024-03-16 15:42:57,493:INFO:Checking exceptions
2024-03-16 15:42:57,493:INFO:Preloading libraries
2024-03-16 15:42:57,636:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 15:42:57,799:WARNING:d:\Code\Anaconda\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-03-16 15:42:58,529:INFO:Creating Dashboard logs
2024-03-16 15:42:58,535:INFO:Model: Bayesian Ridge
2024-03-16 15:42:58,592:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 15:42:58,883:INFO:Creating Dashboard logs
2024-03-16 15:42:58,889:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 15:42:58,934:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 15:42:59,196:INFO:Creating Dashboard logs
2024-03-16 15:42:59,202:INFO:Model: Elastic Net
2024-03-16 15:42:59,251:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3488, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 15:42:59,534:INFO:Creating Dashboard logs
2024-03-16 15:42:59,539:INFO:Model: Lasso Regression
2024-03-16 15:42:59,592:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3488, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 15:42:59,857:INFO:Creating Dashboard logs
2024-03-16 15:42:59,862:INFO:Model: Lasso Least Angle Regression
2024-03-16 15:42:59,913:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3488, 'verbose': False}
2024-03-16 15:43:00,203:INFO:Creating Dashboard logs
2024-03-16 15:43:00,208:INFO:Model: Ridge Regression
2024-03-16 15:43:00,254:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3488, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 15:43:00,492:INFO:Creating Dashboard logs
2024-03-16 15:43:00,497:INFO:Model: Linear Regression
2024-03-16 15:43:00,535:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 15:43:00,771:INFO:Creating Dashboard logs
2024-03-16 15:43:00,778:INFO:Model: Least Angle Regression
2024-03-16 15:43:00,818:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3488, 'verbose': False}
2024-03-16 15:43:01,072:INFO:Creating Dashboard logs
2024-03-16 15:43:01,079:INFO:Model: Huber Regressor
2024-03-16 15:43:01,133:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 15:43:01,423:INFO:Creating Dashboard logs
2024-03-16 15:43:01,432:INFO:Model: Random Forest Regressor
2024-03-16 15:43:01,485:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3488, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:01,828:INFO:Creating Dashboard logs
2024-03-16 15:43:01,833:INFO:Model: Extra Trees Regressor
2024-03-16 15:43:01,888:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3488, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:02,232:INFO:Creating Dashboard logs
2024-03-16 15:43:02,239:INFO:Model: Light Gradient Boosting Machine
2024-03-16 15:43:02,303:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3488, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 15:43:02,655:INFO:Creating Dashboard logs
2024-03-16 15:43:02,663:INFO:Model: Extreme Gradient Boosting
2024-03-16 15:43:02,718:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3488, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 15:43:03,122:INFO:Creating Dashboard logs
2024-03-16 15:43:03,132:INFO:Model: K Neighbors Regressor
2024-03-16 15:43:03,185:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 15:43:03,561:INFO:Creating Dashboard logs
2024-03-16 15:43:03,567:INFO:Model: AdaBoost Regressor
2024-03-16 15:43:03,645:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3488}
2024-03-16 15:43:03,983:INFO:Creating Dashboard logs
2024-03-16 15:43:03,990:INFO:Model: Decision Tree Regressor
2024-03-16 15:43:04,043:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3488, 'splitter': 'best'}
2024-03-16 15:43:04,376:INFO:Creating Dashboard logs
2024-03-16 15:43:04,384:INFO:Model: Dummy Regressor
2024-03-16 15:43:04,445:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 15:43:04,781:INFO:Creating Dashboard logs
2024-03-16 15:43:04,787:INFO:Model: Passive Aggressive Regressor
2024-03-16 15:43:04,835:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3488, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:05,186:INFO:_master_model_container: 19
2024-03-16 15:43:05,187:INFO:_display_container: 2
2024-03-16 15:43:05,188:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:43:05,188:INFO:compare_models() successfully completed......................................
2024-03-16 15:43:05,282:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,284:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,286:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,286:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,287:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,289:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,293:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,305:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,139:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:28,595:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,601:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:28,858:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,307:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,619:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,752:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,028:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,233:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,238:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,354:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,611:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,849:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,854:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,965:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,175:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,266:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,357:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,447:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,451:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,766:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,899:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,065:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,200:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,547:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,650:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,655:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,784:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:33,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:33,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,139:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,271:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,271:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,434:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,642:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,642:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,861:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,953:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,050:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,050:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,149:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,584:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,584:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,999:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,000:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,146:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,147:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,227:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,227:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,582:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,655:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,893:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,977:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,977:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,053:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,128:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,213:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,213:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,297:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,460:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,460:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,878:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,878:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,022:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,167:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,167:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,329:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,473:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,538:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,676:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,676:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,745:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,745:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,913:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,071:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,071:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,141:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,215:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,293:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,732:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,733:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,104:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,104:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,312:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,382:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,383:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,467:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,467:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,556:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,556:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,720:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,720:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,791:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,151:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,307:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,308:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,393:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,393:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,484:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,485:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,605:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,639:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,741:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,742:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,811:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,892:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,961:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,961:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,193:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,330:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,330:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,372:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,406:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,580:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,580:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,651:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,651:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,733:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,743:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,744:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,781:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,781:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,931:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,931:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,100:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,101:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,178:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,179:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,253:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,254:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,334:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,334:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,688:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,688:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,092:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,365:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,498:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,648:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,794:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,795:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,042:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,222:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,222:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,375:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,767:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,767:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,921:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,922:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,001:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,142:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,142:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,208:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,209:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,274:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,274:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,340:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,474:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,474:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,541:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,541:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,600:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,600:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,890:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,963:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,029:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,333:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,266:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,410:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,410:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,604:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,604:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,790:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,790:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,059:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,059:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,124:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,188:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,188:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,615:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,715:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,715:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,134:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,210:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,210:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,289:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,501:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,501:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,774:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,841:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,912:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,177:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,177:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,816:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,816:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,363:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,363:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,602:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,602:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,731:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,732:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,088:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,088:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,354:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,355:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,926:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,927:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,500:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,565:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,735:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,951:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,952:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,091:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,226:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,226:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,597:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,597:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,012:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,012:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,275:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,275:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,514:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,577:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,712:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,713:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,256:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,256:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,385:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,385:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,449:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,726:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,726:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,080:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,081:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,145:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,146:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,207:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,207:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,327:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,327:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,455:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,586:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,587:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,662:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,786:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,787:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,046:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,046:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,401:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,401:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,869:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,870:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,009:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,009:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,083:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,147:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,148:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,352:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,416:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,416:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,487:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,487:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,635:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,773:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,773:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,996:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,996:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,091:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,092:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,160:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,357:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,481:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,545:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,545:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,614:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,615:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,777:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,777:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,081:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,082:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,223:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,223:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,560:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,833:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,901:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,901:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,069:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,069:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,371:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,371:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,481:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,482:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,572:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,632:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,717:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,718:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,861:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,929:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,929:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,997:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,997:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,165:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,165:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,443:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,443:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,625:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,626:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,685:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,746:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,746:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,829:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,829:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,895:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,895:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,958:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,958:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,249:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,396:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,396:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,554:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,554:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,702:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,835:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,902:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,902:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,128:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,333:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,400:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,400:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,463:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,608:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,608:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,679:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,747:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,873:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,873:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,944:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,706:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,018:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,086:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,182:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,315:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,315:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,652:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,652:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,717:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,779:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,779:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,848:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,849:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,982:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,983:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,051:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,120:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,120:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,269:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,270:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,402:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,402:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,532:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,532:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,915:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,916:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,259:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,259:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,576:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,576:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,718:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,941:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,016:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,016:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,239:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,239:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,521:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,658:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,912:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,913:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,184:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,184:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,391:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,392:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,476:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,476:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,552:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,552:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,830:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,045:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,106:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,107:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,047:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,169:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,439:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,515:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,515:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,550:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,786:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,787:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,989:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,990:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,074:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,144:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,144:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,214:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,214:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,282:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,419:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,420:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,485:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,486:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,555:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,555:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,694:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,694:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,759:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,760:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,047:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,096:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,097:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,240:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,240:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,414:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,414:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,492:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,493:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,737:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,865:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,866:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,010:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,370:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,680:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,681:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,754:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,754:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,826:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,826:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,035:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,076:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,252:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,253:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,338:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,338:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,673:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,674:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,749:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,316:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,317:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,380:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,380:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,445:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,690:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,690:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,953:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,272:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,272:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,747:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,835:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,836:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,917:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,917:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,000:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,001:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,246:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,335:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,336:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,428:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,526:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,761:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,761:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,825:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,888:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,888:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,957:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,957:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,098:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,276:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,277:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,361:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,361:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,453:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,454:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,609:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,609:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,710:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,711:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,809:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,967:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,117:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,118:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,201:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,201:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,284:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,434:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,588:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,589:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,879:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,879:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,060:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,060:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,233:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,490:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,490:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,572:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,643:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,643:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,709:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,710:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,959:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,959:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,035:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,105:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,105:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,241:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,242:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,379:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,379:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,458:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,459:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,639:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,677:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,677:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,774:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,844:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,908:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,971:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,032:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,032:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,101:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,102:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,331:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,409:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,896:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,896:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,975:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,976:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,116:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,116:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,479:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,568:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,924:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,924:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,967:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,109:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,109:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,423:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,424:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,498:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,828:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,828:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,908:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,978:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,065:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,066:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,389:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,389:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,525:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,904:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,992:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,992:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,349:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,349:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,450:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,451:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,531:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,531:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,759:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,760:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,910:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,057:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,269:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,582:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,811:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,417:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,565:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,783:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,070:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,070:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,196:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,360:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,502:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,502:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,574:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,574:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,803:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,804:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,868:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,869:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,938:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,938:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,006:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,006:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,395:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,395:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,630:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,630:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,698:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,698:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,988:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,988:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,367:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,368:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,469:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,470:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,558:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,558:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,645:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,645:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,737:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,857:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,200:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,355:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,356:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,504:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,504:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,636:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,752:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,003:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,004:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,517:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,722:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,722:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,801:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,801:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,947:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,947:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,218:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,218:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,280:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,280:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,364:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,364:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,430:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,430:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,495:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,496:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,567:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:48:24,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:59:05,156:INFO:PyCaret RegressionExperiment
2024-03-16 15:59:05,156:INFO:Logging name: reg-default-name
2024-03-16 15:59:05,157:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 15:59:05,157:INFO:version 3.3.0
2024-03-16 15:59:05,157:INFO:Initializing setup()
2024-03-16 15:59:05,158:INFO:self.USI: 7801
2024-03-16 15:59:05,158:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 15:59:05,158:INFO:Checking environment
2024-03-16 15:59:05,158:INFO:python_version: 3.11.5
2024-03-16 15:59:05,159:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 15:59:05,159:INFO:machine: AMD64
2024-03-16 15:59:05,159:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 15:59:05,159:INFO:Memory: svmem(total=34129678336, available=12649742336, percent=62.9, used=21479936000, free=12649742336)
2024-03-16 15:59:05,160:INFO:Physical Core: 6
2024-03-16 15:59:05,160:INFO:Logical Core: 12
2024-03-16 15:59:05,160:INFO:Checking libraries
2024-03-16 15:59:05,160:INFO:System:
2024-03-16 15:59:05,160:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 15:59:05,161:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 15:59:05,161:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 15:59:05,161:INFO:PyCaret required dependencies:
2024-03-16 15:59:05,162:INFO:                 pip: 24.0
2024-03-16 15:59:05,162:INFO:          setuptools: 68.0.0
2024-03-16 15:59:05,162:INFO:             pycaret: 3.3.0
2024-03-16 15:59:05,162:INFO:             IPython: 8.15.0
2024-03-16 15:59:05,162:INFO:          ipywidgets: 8.0.4
2024-03-16 15:59:05,163:INFO:                tqdm: 4.65.0
2024-03-16 15:59:05,163:INFO:               numpy: 1.24.3
2024-03-16 15:59:05,163:INFO:              pandas: 2.0.3
2024-03-16 15:59:05,163:INFO:              jinja2: 3.1.2
2024-03-16 15:59:05,164:INFO:               scipy: 1.11.1
2024-03-16 15:59:05,164:INFO:              joblib: 1.2.0
2024-03-16 15:59:05,164:INFO:             sklearn: 1.3.0
2024-03-16 15:59:05,164:INFO:                pyod: 1.1.3
2024-03-16 15:59:05,164:INFO:            imblearn: 0.10.1
2024-03-16 15:59:05,165:INFO:   category_encoders: 2.6.3
2024-03-16 15:59:05,165:INFO:            lightgbm: 4.3.0
2024-03-16 15:59:05,165:INFO:               numba: 0.57.1
2024-03-16 15:59:05,165:INFO:            requests: 2.31.0
2024-03-16 15:59:05,165:INFO:          matplotlib: 3.7.2
2024-03-16 15:59:05,165:INFO:          scikitplot: 0.3.7
2024-03-16 15:59:05,166:INFO:         yellowbrick: 1.5
2024-03-16 15:59:05,166:INFO:              plotly: 5.9.0
2024-03-16 15:59:05,166:INFO:    plotly-resampler: Not installed
2024-03-16 15:59:05,167:INFO:             kaleido: 0.2.1
2024-03-16 15:59:05,167:INFO:           schemdraw: 0.15
2024-03-16 15:59:05,167:INFO:         statsmodels: 0.14.0
2024-03-16 15:59:05,167:INFO:              sktime: 0.27.0
2024-03-16 15:59:05,167:INFO:               tbats: 1.1.3
2024-03-16 15:59:05,168:INFO:            pmdarima: 2.0.4
2024-03-16 15:59:05,168:INFO:              psutil: 5.9.0
2024-03-16 15:59:05,168:INFO:          markupsafe: 2.1.1
2024-03-16 15:59:05,168:INFO:             pickle5: Not installed
2024-03-16 15:59:05,168:INFO:         cloudpickle: 2.2.1
2024-03-16 15:59:05,168:INFO:         deprecation: 2.1.0
2024-03-16 15:59:05,169:INFO:              xxhash: 2.0.2
2024-03-16 15:59:05,169:INFO:           wurlitzer: Not installed
2024-03-16 15:59:05,169:INFO:PyCaret optional dependencies:
2024-03-16 15:59:05,170:INFO:                shap: Not installed
2024-03-16 15:59:05,170:INFO:           interpret: Not installed
2024-03-16 15:59:05,170:INFO:                umap: Not installed
2024-03-16 15:59:05,170:INFO:     ydata_profiling: Not installed
2024-03-16 15:59:05,171:INFO:  explainerdashboard: Not installed
2024-03-16 15:59:05,171:INFO:             autoviz: Not installed
2024-03-16 15:59:05,171:INFO:           fairlearn: Not installed
2024-03-16 15:59:05,171:INFO:          deepchecks: Not installed
2024-03-16 15:59:05,171:INFO:             xgboost: 2.0.3
2024-03-16 15:59:05,172:INFO:            catboost: Not installed
2024-03-16 15:59:05,172:INFO:              kmodes: Not installed
2024-03-16 15:59:05,172:INFO:             mlxtend: Not installed
2024-03-16 15:59:05,172:INFO:       statsforecast: Not installed
2024-03-16 15:59:05,172:INFO:        tune_sklearn: Not installed
2024-03-16 15:59:05,173:INFO:                 ray: Not installed
2024-03-16 15:59:05,173:INFO:            hyperopt: Not installed
2024-03-16 15:59:05,173:INFO:              optuna: Not installed
2024-03-16 15:59:05,173:INFO:               skopt: Not installed
2024-03-16 15:59:05,174:INFO:              mlflow: 2.11.1
2024-03-16 15:59:05,174:INFO:              gradio: Not installed
2024-03-16 15:59:05,174:INFO:             fastapi: Not installed
2024-03-16 15:59:05,174:INFO:             uvicorn: Not installed
2024-03-16 15:59:05,175:INFO:              m2cgen: Not installed
2024-03-16 15:59:05,175:INFO:           evidently: Not installed
2024-03-16 15:59:05,175:INFO:               fugue: Not installed
2024-03-16 15:59:05,176:INFO:           streamlit: Not installed
2024-03-16 15:59:05,176:INFO:             prophet: Not installed
2024-03-16 15:59:05,176:INFO:None
2024-03-16 15:59:05,177:INFO:Set up data.
2024-03-16 15:59:05,204:INFO:Set up folding strategy.
2024-03-16 15:59:05,205:INFO:Set up train/test split.
2024-03-16 15:59:05,229:INFO:Set up index.
2024-03-16 15:59:05,230:INFO:Assigning column types.
2024-03-16 15:59:05,263:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 15:59:05,264:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,546:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,551:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,561:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,571:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,739:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,744:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 15:59:05,751:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,757:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,905:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,914:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,920:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,057:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,062:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 15:59:06,073:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,213:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,388:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,392:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 15:59:06,494:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,562:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,714:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,802:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,807:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 15:59:06,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,996:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,102:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:07,178:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,187:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 15:59:07,563:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,822:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,830:INFO:Preparing preprocessing pipeline...
2024-03-16 15:59:07,830:INFO:Set up simple imputation.
2024-03-16 15:59:07,832:INFO:Set up column name cleaning.
2024-03-16 15:59:07,922:INFO:Finished creating preprocessing pipeline.
2024-03-16 15:59:07,932:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:59:07,933:INFO:Creating final display dataframe.
2024-03-16 15:59:08,180:INFO:Setup _display_container:                     Description             Value
0                    Session id              4281
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 37)
4        Transformed data shape        (1859, 37)
5   Transformed train set shape        (1301, 37)
6    Transformed test set shape         (558, 37)
7              Numeric features                36
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              7801
2024-03-16 15:59:08,355:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:08,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:08,507:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:08,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:08,511:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 15:59:08,512:INFO:Logging experiment in loggers
2024-03-16 15:59:08,581:INFO:SubProcess save_model() called ==================================
2024-03-16 15:59:08,595:INFO:Initializing save_model()
2024-03-16 15:59:08,595:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpwpkl8y_h\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 15:59:08,595:INFO:Adding model into prep_pipe
2024-03-16 15:59:08,595:WARNING:Only Model saved as it was a pipeline.
2024-03-16 15:59:08,598:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpwpkl8y_h\Transformation Pipeline.pkl saved in current working directory
2024-03-16 15:59:08,604:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:59:08,604:INFO:save_model() successfully completed......................................
2024-03-16 15:59:10,549:INFO:SubProcess save_model() end ==================================
2024-03-16 15:59:10,559:INFO:setup() successfully completed in 3.36s...............
2024-03-16 15:59:10,559:INFO:Initializing compare_models()
2024-03-16 15:59:10,560:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 15:59:10,560:INFO:Checking exceptions
2024-03-16 15:59:10,566:INFO:Preparing display monitor
2024-03-16 15:59:10,599:INFO:Initializing Linear Regression
2024-03-16 15:59:10,599:INFO:Total runtime is 0.0 minutes
2024-03-16 15:59:10,603:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:10,604:INFO:Initializing create_model()
2024-03-16 15:59:10,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:10,604:INFO:Checking exceptions
2024-03-16 15:59:10,604:INFO:Importing libraries
2024-03-16 15:59:10,604:INFO:Copying training dataset
2024-03-16 15:59:10,620:INFO:Defining folds
2024-03-16 15:59:10,621:INFO:Declaring metric variables
2024-03-16 15:59:10,625:INFO:Importing untrained model
2024-03-16 15:59:10,630:INFO:Linear Regression Imported successfully
2024-03-16 15:59:10,640:INFO:Starting cross validation
2024-03-16 15:59:10,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:32,413:INFO:Calculating mean and std
2024-03-16 15:59:32,415:INFO:Creating metrics dataframe
2024-03-16 15:59:32,418:INFO:Uploading results into container
2024-03-16 15:59:32,419:INFO:Uploading model into container now
2024-03-16 15:59:32,420:INFO:_master_model_container: 1
2024-03-16 15:59:32,420:INFO:_display_container: 2
2024-03-16 15:59:32,421:INFO:LinearRegression(n_jobs=-1)
2024-03-16 15:59:32,421:INFO:create_model() successfully completed......................................
2024-03-16 15:59:32,580:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:32,580:INFO:Creating metrics dataframe
2024-03-16 15:59:32,590:INFO:Initializing Lasso Regression
2024-03-16 15:59:32,590:INFO:Total runtime is 0.3665104349454244 minutes
2024-03-16 15:59:32,595:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:32,596:INFO:Initializing create_model()
2024-03-16 15:59:32,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:32,596:INFO:Checking exceptions
2024-03-16 15:59:32,596:INFO:Importing libraries
2024-03-16 15:59:32,596:INFO:Copying training dataset
2024-03-16 15:59:32,613:INFO:Defining folds
2024-03-16 15:59:32,614:INFO:Declaring metric variables
2024-03-16 15:59:32,619:INFO:Importing untrained model
2024-03-16 15:59:32,626:INFO:Lasso Regression Imported successfully
2024-03-16 15:59:32,642:INFO:Starting cross validation
2024-03-16 15:59:32,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:38,671:INFO:Calculating mean and std
2024-03-16 15:59:38,672:INFO:Creating metrics dataframe
2024-03-16 15:59:38,675:INFO:Uploading results into container
2024-03-16 15:59:38,676:INFO:Uploading model into container now
2024-03-16 15:59:38,677:INFO:_master_model_container: 2
2024-03-16 15:59:38,677:INFO:_display_container: 2
2024-03-16 15:59:38,678:INFO:Lasso(random_state=4281)
2024-03-16 15:59:38,678:INFO:create_model() successfully completed......................................
2024-03-16 15:59:38,829:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:38,830:INFO:Creating metrics dataframe
2024-03-16 15:59:38,840:INFO:Initializing Ridge Regression
2024-03-16 15:59:38,840:INFO:Total runtime is 0.4706844488779704 minutes
2024-03-16 15:59:38,846:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:38,846:INFO:Initializing create_model()
2024-03-16 15:59:38,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:38,847:INFO:Checking exceptions
2024-03-16 15:59:38,847:INFO:Importing libraries
2024-03-16 15:59:38,847:INFO:Copying training dataset
2024-03-16 15:59:38,864:INFO:Defining folds
2024-03-16 15:59:38,864:INFO:Declaring metric variables
2024-03-16 15:59:38,869:INFO:Importing untrained model
2024-03-16 15:59:38,875:INFO:Ridge Regression Imported successfully
2024-03-16 15:59:38,888:INFO:Starting cross validation
2024-03-16 15:59:38,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:38,961:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.03291e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:59:39,070:INFO:Calculating mean and std
2024-03-16 15:59:39,072:INFO:Creating metrics dataframe
2024-03-16 15:59:39,075:INFO:Uploading results into container
2024-03-16 15:59:39,076:INFO:Uploading model into container now
2024-03-16 15:59:39,077:INFO:_master_model_container: 3
2024-03-16 15:59:39,078:INFO:_display_container: 2
2024-03-16 15:59:39,079:INFO:Ridge(random_state=4281)
2024-03-16 15:59:39,079:INFO:create_model() successfully completed......................................
2024-03-16 15:59:39,234:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:39,234:INFO:Creating metrics dataframe
2024-03-16 15:59:39,245:INFO:Initializing Elastic Net
2024-03-16 15:59:39,246:INFO:Total runtime is 0.47744214932123824 minutes
2024-03-16 15:59:39,250:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:39,251:INFO:Initializing create_model()
2024-03-16 15:59:39,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:39,251:INFO:Checking exceptions
2024-03-16 15:59:39,251:INFO:Importing libraries
2024-03-16 15:59:39,252:INFO:Copying training dataset
2024-03-16 15:59:39,269:INFO:Defining folds
2024-03-16 15:59:39,269:INFO:Declaring metric variables
2024-03-16 15:59:39,274:INFO:Importing untrained model
2024-03-16 15:59:39,281:INFO:Elastic Net Imported successfully
2024-03-16 15:59:39,294:INFO:Starting cross validation
2024-03-16 15:59:39,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:39,496:INFO:Calculating mean and std
2024-03-16 15:59:39,498:INFO:Creating metrics dataframe
2024-03-16 15:59:39,500:INFO:Uploading results into container
2024-03-16 15:59:39,501:INFO:Uploading model into container now
2024-03-16 15:59:39,502:INFO:_master_model_container: 4
2024-03-16 15:59:39,502:INFO:_display_container: 2
2024-03-16 15:59:39,503:INFO:ElasticNet(random_state=4281)
2024-03-16 15:59:39,503:INFO:create_model() successfully completed......................................
2024-03-16 15:59:39,643:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:39,643:INFO:Creating metrics dataframe
2024-03-16 15:59:39,652:INFO:Initializing Least Angle Regression
2024-03-16 15:59:39,653:INFO:Total runtime is 0.4842224558194479 minutes
2024-03-16 15:59:39,657:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:39,657:INFO:Initializing create_model()
2024-03-16 15:59:39,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:39,658:INFO:Checking exceptions
2024-03-16 15:59:39,658:INFO:Importing libraries
2024-03-16 15:59:39,658:INFO:Copying training dataset
2024-03-16 15:59:39,672:INFO:Defining folds
2024-03-16 15:59:39,673:INFO:Declaring metric variables
2024-03-16 15:59:39,678:INFO:Importing untrained model
2024-03-16 15:59:39,683:INFO:Least Angle Regression Imported successfully
2024-03-16 15:59:39,693:INFO:Starting cross validation
2024-03-16 15:59:39,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:39,763:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.367e+00, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,764:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 27 iterations, i.e. alpha=1.770e+00, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,764:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=6.078e-01, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,765:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=5.571e-01, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,765:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.398e-04, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.930e-01, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.609e-02, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=1.135e-02, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,819:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 34 iterations, i.e. alpha=1.453e-05, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,843:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.746e-05, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,861:INFO:Calculating mean and std
2024-03-16 15:59:39,864:INFO:Creating metrics dataframe
2024-03-16 15:59:39,866:INFO:Uploading results into container
2024-03-16 15:59:39,867:INFO:Uploading model into container now
2024-03-16 15:59:39,868:INFO:_master_model_container: 5
2024-03-16 15:59:39,868:INFO:_display_container: 2
2024-03-16 15:59:39,868:INFO:Lars(random_state=4281)
2024-03-16 15:59:39,869:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,005:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,005:INFO:Creating metrics dataframe
2024-03-16 15:59:40,016:INFO:Initializing Lasso Least Angle Regression
2024-03-16 15:59:40,016:INFO:Total runtime is 0.49028316736221317 minutes
2024-03-16 15:59:40,022:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,022:INFO:Initializing create_model()
2024-03-16 15:59:40,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,022:INFO:Checking exceptions
2024-03-16 15:59:40,022:INFO:Importing libraries
2024-03-16 15:59:40,023:INFO:Copying training dataset
2024-03-16 15:59:40,040:INFO:Defining folds
2024-03-16 15:59:40,040:INFO:Declaring metric variables
2024-03-16 15:59:40,047:INFO:Importing untrained model
2024-03-16 15:59:40,053:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 15:59:40,061:INFO:Starting cross validation
2024-03-16 15:59:40,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:40,224:INFO:Calculating mean and std
2024-03-16 15:59:40,226:INFO:Creating metrics dataframe
2024-03-16 15:59:40,229:INFO:Uploading results into container
2024-03-16 15:59:40,229:INFO:Uploading model into container now
2024-03-16 15:59:40,230:INFO:_master_model_container: 6
2024-03-16 15:59:40,230:INFO:_display_container: 2
2024-03-16 15:59:40,230:INFO:LassoLars(random_state=4281)
2024-03-16 15:59:40,230:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,366:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,367:INFO:Creating metrics dataframe
2024-03-16 15:59:40,378:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 15:59:40,378:INFO:Total runtime is 0.49631245930989587 minutes
2024-03-16 15:59:40,386:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,386:INFO:Initializing create_model()
2024-03-16 15:59:40,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,387:INFO:Checking exceptions
2024-03-16 15:59:40,387:INFO:Importing libraries
2024-03-16 15:59:40,387:INFO:Copying training dataset
2024-03-16 15:59:40,406:INFO:Defining folds
2024-03-16 15:59:40,406:INFO:Declaring metric variables
2024-03-16 15:59:40,412:INFO:Importing untrained model
2024-03-16 15:59:40,417:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 15:59:40,427:INFO:Starting cross validation
2024-03-16 15:59:40,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:40,614:INFO:Calculating mean and std
2024-03-16 15:59:40,616:INFO:Creating metrics dataframe
2024-03-16 15:59:40,618:INFO:Uploading results into container
2024-03-16 15:59:40,619:INFO:Uploading model into container now
2024-03-16 15:59:40,619:INFO:_master_model_container: 7
2024-03-16 15:59:40,619:INFO:_display_container: 2
2024-03-16 15:59:40,620:INFO:OrthogonalMatchingPursuit()
2024-03-16 15:59:40,620:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,773:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,773:INFO:Creating metrics dataframe
2024-03-16 15:59:40,785:INFO:Initializing Bayesian Ridge
2024-03-16 15:59:40,786:INFO:Total runtime is 0.5031156579653422 minutes
2024-03-16 15:59:40,790:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,791:INFO:Initializing create_model()
2024-03-16 15:59:40,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,791:INFO:Checking exceptions
2024-03-16 15:59:40,792:INFO:Importing libraries
2024-03-16 15:59:40,792:INFO:Copying training dataset
2024-03-16 15:59:40,807:INFO:Defining folds
2024-03-16 15:59:40,808:INFO:Declaring metric variables
2024-03-16 15:59:40,814:INFO:Importing untrained model
2024-03-16 15:59:40,819:INFO:Bayesian Ridge Imported successfully
2024-03-16 15:59:40,830:INFO:Starting cross validation
2024-03-16 15:59:40,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,019:INFO:Calculating mean and std
2024-03-16 15:59:41,021:INFO:Creating metrics dataframe
2024-03-16 15:59:41,026:INFO:Uploading results into container
2024-03-16 15:59:41,027:INFO:Uploading model into container now
2024-03-16 15:59:41,028:INFO:_master_model_container: 8
2024-03-16 15:59:41,028:INFO:_display_container: 2
2024-03-16 15:59:41,029:INFO:BayesianRidge()
2024-03-16 15:59:41,029:INFO:create_model() successfully completed......................................
2024-03-16 15:59:41,168:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:41,168:INFO:Creating metrics dataframe
2024-03-16 15:59:41,178:INFO:Initializing Passive Aggressive Regressor
2024-03-16 15:59:41,178:INFO:Total runtime is 0.5096480369567871 minutes
2024-03-16 15:59:41,183:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:41,183:INFO:Initializing create_model()
2024-03-16 15:59:41,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:41,183:INFO:Checking exceptions
2024-03-16 15:59:41,184:INFO:Importing libraries
2024-03-16 15:59:41,184:INFO:Copying training dataset
2024-03-16 15:59:41,197:INFO:Defining folds
2024-03-16 15:59:41,198:INFO:Declaring metric variables
2024-03-16 15:59:41,202:INFO:Importing untrained model
2024-03-16 15:59:41,207:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 15:59:41,221:INFO:Starting cross validation
2024-03-16 15:59:41,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,453:INFO:Calculating mean and std
2024-03-16 15:59:41,455:INFO:Creating metrics dataframe
2024-03-16 15:59:41,458:INFO:Uploading results into container
2024-03-16 15:59:41,460:INFO:Uploading model into container now
2024-03-16 15:59:41,461:INFO:_master_model_container: 9
2024-03-16 15:59:41,461:INFO:_display_container: 2
2024-03-16 15:59:41,462:INFO:PassiveAggressiveRegressor(random_state=4281)
2024-03-16 15:59:41,462:INFO:create_model() successfully completed......................................
2024-03-16 15:59:41,634:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:41,634:INFO:Creating metrics dataframe
2024-03-16 15:59:41,650:INFO:Initializing Huber Regressor
2024-03-16 15:59:41,651:INFO:Total runtime is 0.5175297737121581 minutes
2024-03-16 15:59:41,656:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:41,657:INFO:Initializing create_model()
2024-03-16 15:59:41,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:41,658:INFO:Checking exceptions
2024-03-16 15:59:41,658:INFO:Importing libraries
2024-03-16 15:59:41,658:INFO:Copying training dataset
2024-03-16 15:59:41,681:INFO:Defining folds
2024-03-16 15:59:41,681:INFO:Declaring metric variables
2024-03-16 15:59:41,688:INFO:Importing untrained model
2024-03-16 15:59:41,695:INFO:Huber Regressor Imported successfully
2024-03-16 15:59:41,708:INFO:Starting cross validation
2024-03-16 15:59:41,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,980:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,984:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,984:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,999:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,016:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,049:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,083:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,094:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,113:INFO:Calculating mean and std
2024-03-16 15:59:42,115:INFO:Creating metrics dataframe
2024-03-16 15:59:42,119:INFO:Uploading results into container
2024-03-16 15:59:42,120:INFO:Uploading model into container now
2024-03-16 15:59:42,120:INFO:_master_model_container: 10
2024-03-16 15:59:42,121:INFO:_display_container: 2
2024-03-16 15:59:42,122:INFO:HuberRegressor()
2024-03-16 15:59:42,122:INFO:create_model() successfully completed......................................
2024-03-16 15:59:42,273:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:42,273:INFO:Creating metrics dataframe
2024-03-16 15:59:42,288:INFO:Initializing K Neighbors Regressor
2024-03-16 15:59:42,288:INFO:Total runtime is 0.5281545797983804 minutes
2024-03-16 15:59:42,294:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:42,295:INFO:Initializing create_model()
2024-03-16 15:59:42,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:42,295:INFO:Checking exceptions
2024-03-16 15:59:42,295:INFO:Importing libraries
2024-03-16 15:59:42,295:INFO:Copying training dataset
2024-03-16 15:59:42,312:INFO:Defining folds
2024-03-16 15:59:42,312:INFO:Declaring metric variables
2024-03-16 15:59:42,319:INFO:Importing untrained model
2024-03-16 15:59:42,324:INFO:K Neighbors Regressor Imported successfully
2024-03-16 15:59:42,337:INFO:Starting cross validation
2024-03-16 15:59:42,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:43,005:INFO:Calculating mean and std
2024-03-16 15:59:43,006:INFO:Creating metrics dataframe
2024-03-16 15:59:43,010:INFO:Uploading results into container
2024-03-16 15:59:43,012:INFO:Uploading model into container now
2024-03-16 15:59:43,012:INFO:_master_model_container: 11
2024-03-16 15:59:43,012:INFO:_display_container: 2
2024-03-16 15:59:43,013:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 15:59:43,013:INFO:create_model() successfully completed......................................
2024-03-16 15:59:43,161:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:43,161:INFO:Creating metrics dataframe
2024-03-16 15:59:43,174:INFO:Initializing Decision Tree Regressor
2024-03-16 15:59:43,175:INFO:Total runtime is 0.5429380138715107 minutes
2024-03-16 15:59:43,181:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:43,181:INFO:Initializing create_model()
2024-03-16 15:59:43,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:43,182:INFO:Checking exceptions
2024-03-16 15:59:43,182:INFO:Importing libraries
2024-03-16 15:59:43,182:INFO:Copying training dataset
2024-03-16 15:59:43,199:INFO:Defining folds
2024-03-16 15:59:43,199:INFO:Declaring metric variables
2024-03-16 15:59:43,204:INFO:Importing untrained model
2024-03-16 15:59:43,211:INFO:Decision Tree Regressor Imported successfully
2024-03-16 15:59:43,222:INFO:Starting cross validation
2024-03-16 15:59:43,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:43,479:INFO:Calculating mean and std
2024-03-16 15:59:43,480:INFO:Creating metrics dataframe
2024-03-16 15:59:43,483:INFO:Uploading results into container
2024-03-16 15:59:43,484:INFO:Uploading model into container now
2024-03-16 15:59:43,485:INFO:_master_model_container: 12
2024-03-16 15:59:43,486:INFO:_display_container: 2
2024-03-16 15:59:43,486:INFO:DecisionTreeRegressor(random_state=4281)
2024-03-16 15:59:43,486:INFO:create_model() successfully completed......................................
2024-03-16 15:59:43,631:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:43,631:INFO:Creating metrics dataframe
2024-03-16 15:59:43,644:INFO:Initializing Random Forest Regressor
2024-03-16 15:59:43,644:INFO:Total runtime is 0.5507510105768839 minutes
2024-03-16 15:59:43,649:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:43,649:INFO:Initializing create_model()
2024-03-16 15:59:43,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:43,649:INFO:Checking exceptions
2024-03-16 15:59:43,649:INFO:Importing libraries
2024-03-16 15:59:43,650:INFO:Copying training dataset
2024-03-16 15:59:43,665:INFO:Defining folds
2024-03-16 15:59:43,665:INFO:Declaring metric variables
2024-03-16 15:59:43,670:INFO:Importing untrained model
2024-03-16 15:59:43,676:INFO:Random Forest Regressor Imported successfully
2024-03-16 15:59:43,686:INFO:Starting cross validation
2024-03-16 15:59:43,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:51,470:INFO:Calculating mean and std
2024-03-16 15:59:51,475:INFO:Creating metrics dataframe
2024-03-16 15:59:51,482:INFO:Uploading results into container
2024-03-16 15:59:51,483:INFO:Uploading model into container now
2024-03-16 15:59:51,484:INFO:_master_model_container: 13
2024-03-16 15:59:51,484:INFO:_display_container: 2
2024-03-16 15:59:51,485:INFO:RandomForestRegressor(n_jobs=-1, random_state=4281)
2024-03-16 15:59:51,485:INFO:create_model() successfully completed......................................
2024-03-16 15:59:51,722:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:51,722:INFO:Creating metrics dataframe
2024-03-16 15:59:51,750:INFO:Initializing Extra Trees Regressor
2024-03-16 15:59:51,751:INFO:Total runtime is 0.6858483870824178 minutes
2024-03-16 15:59:51,758:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:51,760:INFO:Initializing create_model()
2024-03-16 15:59:51,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:51,760:INFO:Checking exceptions
2024-03-16 15:59:51,761:INFO:Importing libraries
2024-03-16 15:59:51,761:INFO:Copying training dataset
2024-03-16 15:59:51,796:INFO:Defining folds
2024-03-16 15:59:51,796:INFO:Declaring metric variables
2024-03-16 15:59:51,803:INFO:Importing untrained model
2024-03-16 15:59:51,814:INFO:Extra Trees Regressor Imported successfully
2024-03-16 15:59:51,833:INFO:Starting cross validation
2024-03-16 15:59:51,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:56,276:INFO:Calculating mean and std
2024-03-16 15:59:56,280:INFO:Creating metrics dataframe
2024-03-16 15:59:56,286:INFO:Uploading results into container
2024-03-16 15:59:56,287:INFO:Uploading model into container now
2024-03-16 15:59:56,288:INFO:_master_model_container: 14
2024-03-16 15:59:56,289:INFO:_display_container: 2
2024-03-16 15:59:56,290:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4281)
2024-03-16 15:59:56,291:INFO:create_model() successfully completed......................................
2024-03-16 15:59:56,493:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:56,494:INFO:Creating metrics dataframe
2024-03-16 15:59:56,529:INFO:Initializing AdaBoost Regressor
2024-03-16 15:59:56,530:INFO:Total runtime is 0.7655128995577494 minutes
2024-03-16 15:59:56,538:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:56,538:INFO:Initializing create_model()
2024-03-16 15:59:56,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:56,539:INFO:Checking exceptions
2024-03-16 15:59:56,539:INFO:Importing libraries
2024-03-16 15:59:56,539:INFO:Copying training dataset
2024-03-16 15:59:56,570:INFO:Defining folds
2024-03-16 15:59:56,571:INFO:Declaring metric variables
2024-03-16 15:59:56,583:INFO:Importing untrained model
2024-03-16 15:59:56,592:INFO:AdaBoost Regressor Imported successfully
2024-03-16 15:59:56,608:INFO:Starting cross validation
2024-03-16 15:59:56,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:57,520:INFO:Calculating mean and std
2024-03-16 15:59:57,523:INFO:Creating metrics dataframe
2024-03-16 15:59:57,531:INFO:Uploading results into container
2024-03-16 15:59:57,532:INFO:Uploading model into container now
2024-03-16 15:59:57,533:INFO:_master_model_container: 15
2024-03-16 15:59:57,533:INFO:_display_container: 2
2024-03-16 15:59:57,533:INFO:AdaBoostRegressor(random_state=4281)
2024-03-16 15:59:57,534:INFO:create_model() successfully completed......................................
2024-03-16 15:59:57,691:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:57,691:INFO:Creating metrics dataframe
2024-03-16 15:59:57,719:INFO:Initializing Gradient Boosting Regressor
2024-03-16 15:59:57,720:INFO:Total runtime is 0.7853522300720214 minutes
2024-03-16 15:59:57,726:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:57,727:INFO:Initializing create_model()
2024-03-16 15:59:57,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:57,727:INFO:Checking exceptions
2024-03-16 15:59:57,727:INFO:Importing libraries
2024-03-16 15:59:57,727:INFO:Copying training dataset
2024-03-16 15:59:57,748:INFO:Defining folds
2024-03-16 15:59:57,749:INFO:Declaring metric variables
2024-03-16 15:59:57,757:INFO:Importing untrained model
2024-03-16 15:59:57,765:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:59:57,780:INFO:Starting cross validation
2024-03-16 15:59:57,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:00,050:INFO:Calculating mean and std
2024-03-16 16:00:00,052:INFO:Creating metrics dataframe
2024-03-16 16:00:00,057:INFO:Uploading results into container
2024-03-16 16:00:00,058:INFO:Uploading model into container now
2024-03-16 16:00:00,060:INFO:_master_model_container: 16
2024-03-16 16:00:00,060:INFO:_display_container: 2
2024-03-16 16:00:00,061:INFO:GradientBoostingRegressor(random_state=4281)
2024-03-16 16:00:00,061:INFO:create_model() successfully completed......................................
2024-03-16 16:00:00,237:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:00,237:INFO:Creating metrics dataframe
2024-03-16 16:00:00,257:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:00:00,257:INFO:Total runtime is 0.8276241064071654 minutes
2024-03-16 16:00:00,264:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:00,265:INFO:Initializing create_model()
2024-03-16 16:00:00,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:00,266:INFO:Checking exceptions
2024-03-16 16:00:00,266:INFO:Importing libraries
2024-03-16 16:00:00,266:INFO:Copying training dataset
2024-03-16 16:00:00,282:INFO:Defining folds
2024-03-16 16:00:00,282:INFO:Declaring metric variables
2024-03-16 16:00:00,288:INFO:Importing untrained model
2024-03-16 16:00:00,296:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:00:00,311:INFO:Starting cross validation
2024-03-16 16:00:00,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:04,233:INFO:Calculating mean and std
2024-03-16 16:00:04,236:INFO:Creating metrics dataframe
2024-03-16 16:00:04,241:INFO:Uploading results into container
2024-03-16 16:00:04,243:INFO:Uploading model into container now
2024-03-16 16:00:04,244:INFO:_master_model_container: 17
2024-03-16 16:00:04,245:INFO:_display_container: 2
2024-03-16 16:00:04,248:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4281, ...)
2024-03-16 16:00:04,248:INFO:create_model() successfully completed......................................
2024-03-16 16:00:04,451:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:04,452:INFO:Creating metrics dataframe
2024-03-16 16:00:04,485:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:00:04,486:INFO:Total runtime is 0.8981006781260171 minutes
2024-03-16 16:00:04,496:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:04,497:INFO:Initializing create_model()
2024-03-16 16:00:04,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:04,497:INFO:Checking exceptions
2024-03-16 16:00:04,497:INFO:Importing libraries
2024-03-16 16:00:04,498:INFO:Copying training dataset
2024-03-16 16:00:04,532:INFO:Defining folds
2024-03-16 16:00:04,533:INFO:Declaring metric variables
2024-03-16 16:00:04,544:INFO:Importing untrained model
2024-03-16 16:00:04,558:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:00:04,584:INFO:Starting cross validation
2024-03-16 16:00:04,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:12,401:INFO:Calculating mean and std
2024-03-16 16:00:12,404:INFO:Creating metrics dataframe
2024-03-16 16:00:12,412:INFO:Uploading results into container
2024-03-16 16:00:12,414:INFO:Uploading model into container now
2024-03-16 16:00:12,415:INFO:_master_model_container: 18
2024-03-16 16:00:12,415:INFO:_display_container: 2
2024-03-16 16:00:12,417:INFO:LGBMRegressor(n_jobs=-1, random_state=4281)
2024-03-16 16:00:12,417:INFO:create_model() successfully completed......................................
2024-03-16 16:00:12,697:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:12,698:INFO:Creating metrics dataframe
2024-03-16 16:00:12,750:INFO:Initializing Dummy Regressor
2024-03-16 16:00:12,751:INFO:Total runtime is 1.035859433809916 minutes
2024-03-16 16:00:12,764:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:12,765:INFO:Initializing create_model()
2024-03-16 16:00:12,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:12,767:INFO:Checking exceptions
2024-03-16 16:00:12,768:INFO:Importing libraries
2024-03-16 16:00:12,768:INFO:Copying training dataset
2024-03-16 16:00:12,814:INFO:Defining folds
2024-03-16 16:00:12,815:INFO:Declaring metric variables
2024-03-16 16:00:12,831:INFO:Importing untrained model
2024-03-16 16:00:12,845:INFO:Dummy Regressor Imported successfully
2024-03-16 16:00:12,868:INFO:Starting cross validation
2024-03-16 16:00:12,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:13,221:INFO:Calculating mean and std
2024-03-16 16:00:13,224:INFO:Creating metrics dataframe
2024-03-16 16:00:13,229:INFO:Uploading results into container
2024-03-16 16:00:13,230:INFO:Uploading model into container now
2024-03-16 16:00:13,231:INFO:_master_model_container: 19
2024-03-16 16:00:13,232:INFO:_display_container: 2
2024-03-16 16:00:13,232:INFO:DummyRegressor()
2024-03-16 16:00:13,233:INFO:create_model() successfully completed......................................
2024-03-16 16:00:13,419:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:13,419:INFO:Creating metrics dataframe
2024-03-16 16:00:13,451:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:00:13,472:INFO:Initializing create_model()
2024-03-16 16:00:13,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ElasticNet(random_state=4281), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:13,473:INFO:Checking exceptions
2024-03-16 16:00:13,477:INFO:Importing libraries
2024-03-16 16:00:13,478:INFO:Copying training dataset
2024-03-16 16:00:13,504:INFO:Defining folds
2024-03-16 16:00:13,504:INFO:Declaring metric variables
2024-03-16 16:00:13,505:INFO:Importing untrained model
2024-03-16 16:00:13,505:INFO:Declaring custom model
2024-03-16 16:00:13,506:INFO:Elastic Net Imported successfully
2024-03-16 16:00:13,508:INFO:Cross validation set to False
2024-03-16 16:00:13,508:INFO:Fitting Model
2024-03-16 16:00:13,554:INFO:ElasticNet(random_state=4281)
2024-03-16 16:00:13,554:INFO:create_model() successfully completed......................................
2024-03-16 16:00:13,788:INFO:Creating Dashboard logs
2024-03-16 16:00:13,800:INFO:Model: Elastic Net
2024-03-16 16:00:13,878:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4281, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:00:14,013:INFO:Initializing predict_model()
2024-03-16 16:00:14,013:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ElasticNet(random_state=4281), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B85A341440>)
2024-03-16 16:00:14,014:INFO:Checking exceptions
2024-03-16 16:00:14,014:INFO:Preloading libraries
2024-03-16 16:00:14,167:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:00:14,538:INFO:Creating Dashboard logs
2024-03-16 16:00:14,544:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:00:14,595:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 4281, 'verbose': False}
2024-03-16 16:00:15,020:INFO:Creating Dashboard logs
2024-03-16 16:00:15,029:INFO:Model: Lasso Regression
2024-03-16 16:00:15,103:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4281, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:00:15,755:INFO:Creating Dashboard logs
2024-03-16 16:00:15,769:INFO:Model: Bayesian Ridge
2024-03-16 16:00:15,871:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:00:16,332:INFO:Creating Dashboard logs
2024-03-16 16:00:16,338:INFO:Model: Ridge Regression
2024-03-16 16:00:16,398:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 4281, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:00:16,839:INFO:Creating Dashboard logs
2024-03-16 16:00:16,852:INFO:Model: Linear Regression
2024-03-16 16:00:16,952:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:00:17,413:INFO:Creating Dashboard logs
2024-03-16 16:00:17,419:INFO:Model: Huber Regressor
2024-03-16 16:00:17,496:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:00:17,938:INFO:Creating Dashboard logs
2024-03-16 16:00:17,946:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:00:18,009:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:00:18,316:INFO:Creating Dashboard logs
2024-03-16 16:00:18,321:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:00:18,372:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 4281, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:18,729:INFO:Creating Dashboard logs
2024-03-16 16:00:18,734:INFO:Model: Random Forest Regressor
2024-03-16 16:00:18,805:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4281, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:19,163:INFO:Creating Dashboard logs
2024-03-16 16:00:19,168:INFO:Model: Extra Trees Regressor
2024-03-16 16:00:19,220:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4281, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:19,535:INFO:Creating Dashboard logs
2024-03-16 16:00:19,540:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:00:19,590:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 4281, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:00:19,977:INFO:Creating Dashboard logs
2024-03-16 16:00:19,984:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:00:20,050:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 4281, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:00:20,461:INFO:Creating Dashboard logs
2024-03-16 16:00:20,466:INFO:Model: K Neighbors Regressor
2024-03-16 16:00:20,517:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:00:20,829:INFO:Creating Dashboard logs
2024-03-16 16:00:20,835:INFO:Model: Decision Tree Regressor
2024-03-16 16:00:20,892:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4281, 'splitter': 'best'}
2024-03-16 16:00:21,333:INFO:Creating Dashboard logs
2024-03-16 16:00:21,347:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:00:21,450:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 4281, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:22,174:INFO:Creating Dashboard logs
2024-03-16 16:00:22,203:INFO:Model: AdaBoost Regressor
2024-03-16 16:00:22,336:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 4281}
2024-03-16 16:00:22,838:INFO:Creating Dashboard logs
2024-03-16 16:00:22,845:INFO:Model: Dummy Regressor
2024-03-16 16:00:22,912:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:00:23,275:INFO:Creating Dashboard logs
2024-03-16 16:00:23,282:INFO:Model: Least Angle Regression
2024-03-16 16:00:23,340:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 4281, 'verbose': False}
2024-03-16 16:00:23,658:INFO:_master_model_container: 19
2024-03-16 16:00:23,658:INFO:_display_container: 2
2024-03-16 16:00:23,659:INFO:ElasticNet(random_state=4281)
2024-03-16 16:00:23,659:INFO:compare_models() successfully completed......................................
2024-03-16 16:02:07,678:INFO:PyCaret RegressionExperiment
2024-03-16 16:02:07,678:INFO:Logging name: reg-default-name
2024-03-16 16:02:07,678:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:02:07,678:INFO:version 3.3.0
2024-03-16 16:02:07,679:INFO:Initializing setup()
2024-03-16 16:02:07,679:INFO:self.USI: 961c
2024-03-16 16:02:07,679:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:02:07,679:INFO:Checking environment
2024-03-16 16:02:07,679:INFO:python_version: 3.11.5
2024-03-16 16:02:07,679:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:02:07,679:INFO:machine: AMD64
2024-03-16 16:02:07,679:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:02:07,679:INFO:Memory: svmem(total=34129678336, available=11388399616, percent=66.6, used=22741278720, free=11388399616)
2024-03-16 16:02:07,679:INFO:Physical Core: 6
2024-03-16 16:02:07,680:INFO:Logical Core: 12
2024-03-16 16:02:07,680:INFO:Checking libraries
2024-03-16 16:02:07,680:INFO:System:
2024-03-16 16:02:07,680:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:02:07,680:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:02:07,680:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:02:07,680:INFO:PyCaret required dependencies:
2024-03-16 16:02:07,680:INFO:                 pip: 24.0
2024-03-16 16:02:07,681:INFO:          setuptools: 68.0.0
2024-03-16 16:02:07,681:INFO:             pycaret: 3.3.0
2024-03-16 16:02:07,681:INFO:             IPython: 8.15.0
2024-03-16 16:02:07,681:INFO:          ipywidgets: 8.0.4
2024-03-16 16:02:07,681:INFO:                tqdm: 4.65.0
2024-03-16 16:02:07,681:INFO:               numpy: 1.24.3
2024-03-16 16:02:07,681:INFO:              pandas: 2.0.3
2024-03-16 16:02:07,681:INFO:              jinja2: 3.1.2
2024-03-16 16:02:07,681:INFO:               scipy: 1.11.1
2024-03-16 16:02:07,681:INFO:              joblib: 1.2.0
2024-03-16 16:02:07,681:INFO:             sklearn: 1.3.0
2024-03-16 16:02:07,681:INFO:                pyod: 1.1.3
2024-03-16 16:02:07,681:INFO:            imblearn: 0.10.1
2024-03-16 16:02:07,682:INFO:   category_encoders: 2.6.3
2024-03-16 16:02:07,682:INFO:            lightgbm: 4.3.0
2024-03-16 16:02:07,682:INFO:               numba: 0.57.1
2024-03-16 16:02:07,682:INFO:            requests: 2.31.0
2024-03-16 16:02:07,682:INFO:          matplotlib: 3.7.2
2024-03-16 16:02:07,682:INFO:          scikitplot: 0.3.7
2024-03-16 16:02:07,682:INFO:         yellowbrick: 1.5
2024-03-16 16:02:07,682:INFO:              plotly: 5.9.0
2024-03-16 16:02:07,682:INFO:    plotly-resampler: Not installed
2024-03-16 16:02:07,682:INFO:             kaleido: 0.2.1
2024-03-16 16:02:07,682:INFO:           schemdraw: 0.15
2024-03-16 16:02:07,683:INFO:         statsmodels: 0.14.0
2024-03-16 16:02:07,683:INFO:              sktime: 0.27.0
2024-03-16 16:02:07,683:INFO:               tbats: 1.1.3
2024-03-16 16:02:07,683:INFO:            pmdarima: 2.0.4
2024-03-16 16:02:07,683:INFO:              psutil: 5.9.0
2024-03-16 16:02:07,683:INFO:          markupsafe: 2.1.1
2024-03-16 16:02:07,683:INFO:             pickle5: Not installed
2024-03-16 16:02:07,683:INFO:         cloudpickle: 2.2.1
2024-03-16 16:02:07,684:INFO:         deprecation: 2.1.0
2024-03-16 16:02:07,684:INFO:              xxhash: 2.0.2
2024-03-16 16:02:07,684:INFO:           wurlitzer: Not installed
2024-03-16 16:02:07,684:INFO:PyCaret optional dependencies:
2024-03-16 16:02:07,684:INFO:                shap: Not installed
2024-03-16 16:02:07,684:INFO:           interpret: Not installed
2024-03-16 16:02:07,684:INFO:                umap: Not installed
2024-03-16 16:02:07,685:INFO:     ydata_profiling: Not installed
2024-03-16 16:02:07,685:INFO:  explainerdashboard: Not installed
2024-03-16 16:02:07,685:INFO:             autoviz: Not installed
2024-03-16 16:02:07,685:INFO:           fairlearn: Not installed
2024-03-16 16:02:07,685:INFO:          deepchecks: Not installed
2024-03-16 16:02:07,685:INFO:             xgboost: 2.0.3
2024-03-16 16:02:07,685:INFO:            catboost: Not installed
2024-03-16 16:02:07,685:INFO:              kmodes: Not installed
2024-03-16 16:02:07,686:INFO:             mlxtend: Not installed
2024-03-16 16:02:07,686:INFO:       statsforecast: Not installed
2024-03-16 16:02:07,686:INFO:        tune_sklearn: Not installed
2024-03-16 16:02:07,686:INFO:                 ray: Not installed
2024-03-16 16:02:07,686:INFO:            hyperopt: Not installed
2024-03-16 16:02:07,686:INFO:              optuna: Not installed
2024-03-16 16:02:07,687:INFO:               skopt: Not installed
2024-03-16 16:02:07,687:INFO:              mlflow: 2.11.1
2024-03-16 16:02:07,687:INFO:              gradio: Not installed
2024-03-16 16:02:07,687:INFO:             fastapi: Not installed
2024-03-16 16:02:07,687:INFO:             uvicorn: Not installed
2024-03-16 16:02:07,687:INFO:              m2cgen: Not installed
2024-03-16 16:02:07,687:INFO:           evidently: Not installed
2024-03-16 16:02:07,687:INFO:               fugue: Not installed
2024-03-16 16:02:07,687:INFO:           streamlit: Not installed
2024-03-16 16:02:07,687:INFO:             prophet: Not installed
2024-03-16 16:02:07,688:INFO:None
2024-03-16 16:02:07,688:INFO:Set up data.
2024-03-16 16:02:07,703:INFO:Set up folding strategy.
2024-03-16 16:02:07,703:INFO:Set up train/test split.
2024-03-16 16:02:07,718:INFO:Set up index.
2024-03-16 16:02:07,718:INFO:Assigning column types.
2024-03-16 16:02:07,736:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:02:07,736:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,750:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:07,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:07,938:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,945:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,951:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,131:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,135:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:02:08,143:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,389:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,406:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,415:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,532:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,610:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,615:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:02:08,631:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,858:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,878:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,062:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,067:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:02:09,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,250:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,470:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,475:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:02:09,624:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,722:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,922:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:02:10,097:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,269:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,275:INFO:Preparing preprocessing pipeline...
2024-03-16 16:02:10,275:INFO:Set up simple imputation.
2024-03-16 16:02:10,277:INFO:Set up column name cleaning.
2024-03-16 16:02:10,342:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:02:10,350:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:02:10,350:INFO:Creating final display dataframe.
2024-03-16 16:02:10,597:INFO:Setup _display_container:                     Description             Value
0                    Session id              2617
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 38)
4        Transformed data shape        (1859, 38)
5   Transformed train set shape        (1301, 38)
6    Transformed test set shape         (558, 38)
7              Numeric features                30
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              961c
2024-03-16 16:02:10,770:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,944:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,948:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:02:10,948:INFO:Logging experiment in loggers
2024-03-16 16:02:11,030:INFO:SubProcess save_model() called ==================================
2024-03-16 16:02:11,057:INFO:Initializing save_model()
2024-03-16 16:02:11,057:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp34brmoh0\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:02:11,057:INFO:Adding model into prep_pipe
2024-03-16 16:02:11,057:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:02:11,061:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp34brmoh0\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:02:11,069:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:02:11,069:INFO:save_model() successfully completed......................................
2024-03-16 16:02:11,240:INFO:SubProcess save_model() end ==================================
2024-03-16 16:02:11,260:INFO:setup() successfully completed in 3.27s...............
2024-03-16 16:02:11,260:INFO:Initializing compare_models()
2024-03-16 16:02:11,261:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:02:11,261:INFO:Checking exceptions
2024-03-16 16:02:11,267:INFO:Preparing display monitor
2024-03-16 16:02:11,311:INFO:Initializing Linear Regression
2024-03-16 16:02:11,312:INFO:Total runtime is 1.6458829243977864e-05 minutes
2024-03-16 16:02:11,319:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:11,320:INFO:Initializing create_model()
2024-03-16 16:02:11,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:11,320:INFO:Checking exceptions
2024-03-16 16:02:11,321:INFO:Importing libraries
2024-03-16 16:02:11,321:INFO:Copying training dataset
2024-03-16 16:02:11,344:INFO:Defining folds
2024-03-16 16:02:11,344:INFO:Declaring metric variables
2024-03-16 16:02:11,350:INFO:Importing untrained model
2024-03-16 16:02:11,358:INFO:Linear Regression Imported successfully
2024-03-16 16:02:11,375:INFO:Starting cross validation
2024-03-16 16:02:11,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:11,712:INFO:Calculating mean and std
2024-03-16 16:02:11,714:INFO:Creating metrics dataframe
2024-03-16 16:02:11,719:INFO:Uploading results into container
2024-03-16 16:02:11,721:INFO:Uploading model into container now
2024-03-16 16:02:11,723:INFO:_master_model_container: 1
2024-03-16 16:02:11,723:INFO:_display_container: 2
2024-03-16 16:02:11,724:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:02:11,724:INFO:create_model() successfully completed......................................
2024-03-16 16:02:11,935:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:11,935:INFO:Creating metrics dataframe
2024-03-16 16:02:11,957:INFO:Initializing Lasso Regression
2024-03-16 16:02:11,958:INFO:Total runtime is 0.010783437887827554 minutes
2024-03-16 16:02:11,969:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:11,970:INFO:Initializing create_model()
2024-03-16 16:02:11,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:11,971:INFO:Checking exceptions
2024-03-16 16:02:11,971:INFO:Importing libraries
2024-03-16 16:02:11,972:INFO:Copying training dataset
2024-03-16 16:02:12,011:INFO:Defining folds
2024-03-16 16:02:12,011:INFO:Declaring metric variables
2024-03-16 16:02:12,050:INFO:Importing untrained model
2024-03-16 16:02:12,064:INFO:Lasso Regression Imported successfully
2024-03-16 16:02:12,091:INFO:Starting cross validation
2024-03-16 16:02:12,094:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:12,270:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.773e+05, tolerance: 1.158e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,296:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.275e+06, tolerance: 1.264e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,364:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.602e+04, tolerance: 1.238e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.288e+04, tolerance: 1.212e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,507:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.787e+04, tolerance: 1.228e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,551:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.599e+06, tolerance: 1.201e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,590:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.837e+04, tolerance: 1.122e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,654:INFO:Calculating mean and std
2024-03-16 16:02:12,659:INFO:Creating metrics dataframe
2024-03-16 16:02:12,668:INFO:Uploading results into container
2024-03-16 16:02:12,670:INFO:Uploading model into container now
2024-03-16 16:02:12,672:INFO:_master_model_container: 2
2024-03-16 16:02:12,673:INFO:_display_container: 2
2024-03-16 16:02:12,674:INFO:Lasso(random_state=2617)
2024-03-16 16:02:12,675:INFO:create_model() successfully completed......................................
2024-03-16 16:02:13,013:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:13,014:INFO:Creating metrics dataframe
2024-03-16 16:02:13,042:INFO:Initializing Ridge Regression
2024-03-16 16:02:13,042:INFO:Total runtime is 0.0288560152053833 minutes
2024-03-16 16:02:13,057:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:13,058:INFO:Initializing create_model()
2024-03-16 16:02:13,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:13,059:INFO:Checking exceptions
2024-03-16 16:02:13,059:INFO:Importing libraries
2024-03-16 16:02:13,060:INFO:Copying training dataset
2024-03-16 16:02:13,124:INFO:Defining folds
2024-03-16 16:02:13,124:INFO:Declaring metric variables
2024-03-16 16:02:13,143:INFO:Importing untrained model
2024-03-16 16:02:13,157:INFO:Ridge Regression Imported successfully
2024-03-16 16:02:13,187:INFO:Starting cross validation
2024-03-16 16:02:13,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:13,628:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.63601e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:02:13,728:INFO:Calculating mean and std
2024-03-16 16:02:13,731:INFO:Creating metrics dataframe
2024-03-16 16:02:13,738:INFO:Uploading results into container
2024-03-16 16:02:13,741:INFO:Uploading model into container now
2024-03-16 16:02:13,742:INFO:_master_model_container: 3
2024-03-16 16:02:13,742:INFO:_display_container: 2
2024-03-16 16:02:13,744:INFO:Ridge(random_state=2617)
2024-03-16 16:02:13,744:INFO:create_model() successfully completed......................................
2024-03-16 16:02:14,036:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:14,037:INFO:Creating metrics dataframe
2024-03-16 16:02:14,067:INFO:Initializing Elastic Net
2024-03-16 16:02:14,068:INFO:Total runtime is 0.0459550937016805 minutes
2024-03-16 16:02:14,081:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:14,082:INFO:Initializing create_model()
2024-03-16 16:02:14,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:14,082:INFO:Checking exceptions
2024-03-16 16:02:14,083:INFO:Importing libraries
2024-03-16 16:02:14,083:INFO:Copying training dataset
2024-03-16 16:02:14,115:INFO:Defining folds
2024-03-16 16:02:14,115:INFO:Declaring metric variables
2024-03-16 16:02:14,128:INFO:Importing untrained model
2024-03-16 16:02:14,144:INFO:Elastic Net Imported successfully
2024-03-16 16:02:14,170:INFO:Starting cross validation
2024-03-16 16:02:14,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:14,337:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.994e+06, tolerance: 1.158e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,387:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.848e+06, tolerance: 1.264e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,390:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.066e+06, tolerance: 1.204e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,422:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.469e+06, tolerance: 1.282e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,482:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.459e+06, tolerance: 1.238e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,485:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.344e+06, tolerance: 1.240e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,505:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.918e+06, tolerance: 1.212e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,533:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.741e+06, tolerance: 1.228e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,547:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.329e+06, tolerance: 1.201e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,599:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.061e+04, tolerance: 1.122e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,640:INFO:Calculating mean and std
2024-03-16 16:02:14,643:INFO:Creating metrics dataframe
2024-03-16 16:02:14,648:INFO:Uploading results into container
2024-03-16 16:02:14,650:INFO:Uploading model into container now
2024-03-16 16:02:14,651:INFO:_master_model_container: 4
2024-03-16 16:02:14,651:INFO:_display_container: 2
2024-03-16 16:02:14,652:INFO:ElasticNet(random_state=2617)
2024-03-16 16:02:14,653:INFO:create_model() successfully completed......................................
2024-03-16 16:02:14,944:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:14,945:INFO:Creating metrics dataframe
2024-03-16 16:02:14,980:INFO:Initializing Least Angle Regression
2024-03-16 16:02:14,981:INFO:Total runtime is 0.06116394201914469 minutes
2024-03-16 16:02:14,992:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:14,994:INFO:Initializing create_model()
2024-03-16 16:02:14,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:14,994:INFO:Checking exceptions
2024-03-16 16:02:14,995:INFO:Importing libraries
2024-03-16 16:02:14,995:INFO:Copying training dataset
2024-03-16 16:02:15,066:INFO:Defining folds
2024-03-16 16:02:15,066:INFO:Declaring metric variables
2024-03-16 16:02:15,081:INFO:Importing untrained model
2024-03-16 16:02:15,095:INFO:Least Angle Regression Imported successfully
2024-03-16 16:02:15,116:INFO:Starting cross validation
2024-03-16 16:02:15,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:15,351:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.710e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,401:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=5.547e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,413:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=7.838e-01, with an active set of 27 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,415:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.295e-01, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=2.367e-01, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=2.948e-01, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,419:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=1.045e-01, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,423:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=5.010e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,424:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=2.999e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,428:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=3.755e-01, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=1.895e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=2.607e-02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=5.054e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,431:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=7.440e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,432:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=2.039e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,473:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=5.975e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,478:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=2.264e+00, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,480:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=9.489e-01, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,483:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=1.247e+01, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,484:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=2.633e+00, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,485:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=8.876e-01, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,486:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=5.453e-01, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,487:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=8.534e-02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,489:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=2.790e-02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,490:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=3.086e-03, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,566:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=7.412e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,581:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=1.371e+05, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,582:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=5.904e+02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,583:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=4.682e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,584:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=1.930e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,585:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 46 iterations, i.e. alpha=1.837e+00, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,585:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 46 iterations, i.e. alpha=5.760e-03, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,594:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 27 iterations, i.e. alpha=1.478e+00, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,596:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=3.105e-01, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,599:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 38 iterations, i.e. alpha=1.663e-01, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,600:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=8.713e-02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,601:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=5.641e-02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,602:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=1.450e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,604:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=6.924e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,604:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=1.352e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,605:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=1.044e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,642:INFO:Calculating mean and std
2024-03-16 16:02:15,644:INFO:Creating metrics dataframe
2024-03-16 16:02:15,650:INFO:Uploading results into container
2024-03-16 16:02:15,651:INFO:Uploading model into container now
2024-03-16 16:02:15,653:INFO:_master_model_container: 5
2024-03-16 16:02:15,653:INFO:_display_container: 2
2024-03-16 16:02:15,655:INFO:Lars(random_state=2617)
2024-03-16 16:02:15,656:INFO:create_model() successfully completed......................................
2024-03-16 16:02:15,867:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:15,868:INFO:Creating metrics dataframe
2024-03-16 16:02:15,886:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:02:15,887:INFO:Total runtime is 0.07626310984293619 minutes
2024-03-16 16:02:15,898:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:15,899:INFO:Initializing create_model()
2024-03-16 16:02:15,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:15,899:INFO:Checking exceptions
2024-03-16 16:02:15,899:INFO:Importing libraries
2024-03-16 16:02:15,899:INFO:Copying training dataset
2024-03-16 16:02:15,939:INFO:Defining folds
2024-03-16 16:02:15,939:INFO:Declaring metric variables
2024-03-16 16:02:15,948:INFO:Importing untrained model
2024-03-16 16:02:15,960:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:02:15,979:INFO:Starting cross validation
2024-03-16 16:02:15,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:16,353:INFO:Calculating mean and std
2024-03-16 16:02:16,357:INFO:Creating metrics dataframe
2024-03-16 16:02:16,361:INFO:Uploading results into container
2024-03-16 16:02:16,363:INFO:Uploading model into container now
2024-03-16 16:02:16,364:INFO:_master_model_container: 6
2024-03-16 16:02:16,364:INFO:_display_container: 2
2024-03-16 16:02:16,365:INFO:LassoLars(random_state=2617)
2024-03-16 16:02:16,365:INFO:create_model() successfully completed......................................
2024-03-16 16:02:16,590:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:16,591:INFO:Creating metrics dataframe
2024-03-16 16:02:16,618:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:02:16,619:INFO:Total runtime is 0.08847272793451944 minutes
2024-03-16 16:02:16,631:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:16,632:INFO:Initializing create_model()
2024-03-16 16:02:16,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:16,633:INFO:Checking exceptions
2024-03-16 16:02:16,633:INFO:Importing libraries
2024-03-16 16:02:16,633:INFO:Copying training dataset
2024-03-16 16:02:16,669:INFO:Defining folds
2024-03-16 16:02:16,670:INFO:Declaring metric variables
2024-03-16 16:02:16,682:INFO:Importing untrained model
2024-03-16 16:02:16,694:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:02:16,713:INFO:Starting cross validation
2024-03-16 16:02:16,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:17,134:INFO:Calculating mean and std
2024-03-16 16:02:17,138:INFO:Creating metrics dataframe
2024-03-16 16:02:17,143:INFO:Uploading results into container
2024-03-16 16:02:17,144:INFO:Uploading model into container now
2024-03-16 16:02:17,146:INFO:_master_model_container: 7
2024-03-16 16:02:17,146:INFO:_display_container: 2
2024-03-16 16:02:17,147:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:02:17,148:INFO:create_model() successfully completed......................................
2024-03-16 16:02:17,399:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:17,399:INFO:Creating metrics dataframe
2024-03-16 16:02:17,429:INFO:Initializing Bayesian Ridge
2024-03-16 16:02:17,429:INFO:Total runtime is 0.10196714003880818 minutes
2024-03-16 16:02:17,440:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:17,441:INFO:Initializing create_model()
2024-03-16 16:02:17,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:17,442:INFO:Checking exceptions
2024-03-16 16:02:17,443:INFO:Importing libraries
2024-03-16 16:02:17,444:INFO:Copying training dataset
2024-03-16 16:02:17,486:INFO:Defining folds
2024-03-16 16:02:17,486:INFO:Declaring metric variables
2024-03-16 16:02:17,500:INFO:Importing untrained model
2024-03-16 16:02:17,511:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:02:17,528:INFO:Starting cross validation
2024-03-16 16:02:17,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:17,851:INFO:Calculating mean and std
2024-03-16 16:02:17,853:INFO:Creating metrics dataframe
2024-03-16 16:02:17,857:INFO:Uploading results into container
2024-03-16 16:02:17,858:INFO:Uploading model into container now
2024-03-16 16:02:17,859:INFO:_master_model_container: 8
2024-03-16 16:02:17,859:INFO:_display_container: 2
2024-03-16 16:02:17,861:INFO:BayesianRidge()
2024-03-16 16:02:17,861:INFO:create_model() successfully completed......................................
2024-03-16 16:02:18,029:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:18,029:INFO:Creating metrics dataframe
2024-03-16 16:02:18,043:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:02:18,043:INFO:Total runtime is 0.11219647328058878 minutes
2024-03-16 16:02:18,048:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:18,049:INFO:Initializing create_model()
2024-03-16 16:02:18,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:18,050:INFO:Checking exceptions
2024-03-16 16:02:18,050:INFO:Importing libraries
2024-03-16 16:02:18,050:INFO:Copying training dataset
2024-03-16 16:02:18,069:INFO:Defining folds
2024-03-16 16:02:18,070:INFO:Declaring metric variables
2024-03-16 16:02:18,077:INFO:Importing untrained model
2024-03-16 16:02:18,084:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:02:18,096:INFO:Starting cross validation
2024-03-16 16:02:18,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:18,304:INFO:Calculating mean and std
2024-03-16 16:02:18,306:INFO:Creating metrics dataframe
2024-03-16 16:02:18,310:INFO:Uploading results into container
2024-03-16 16:02:18,311:INFO:Uploading model into container now
2024-03-16 16:02:18,312:INFO:_master_model_container: 9
2024-03-16 16:02:18,312:INFO:_display_container: 2
2024-03-16 16:02:18,313:INFO:PassiveAggressiveRegressor(random_state=2617)
2024-03-16 16:02:18,314:INFO:create_model() successfully completed......................................
2024-03-16 16:02:18,481:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:18,481:INFO:Creating metrics dataframe
2024-03-16 16:02:18,496:INFO:Initializing Huber Regressor
2024-03-16 16:02:18,497:INFO:Total runtime is 0.11977464358011881 minutes
2024-03-16 16:02:18,504:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:18,505:INFO:Initializing create_model()
2024-03-16 16:02:18,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:18,505:INFO:Checking exceptions
2024-03-16 16:02:18,506:INFO:Importing libraries
2024-03-16 16:02:18,506:INFO:Copying training dataset
2024-03-16 16:02:18,526:INFO:Defining folds
2024-03-16 16:02:18,527:INFO:Declaring metric variables
2024-03-16 16:02:18,535:INFO:Importing untrained model
2024-03-16 16:02:18,543:INFO:Huber Regressor Imported successfully
2024-03-16 16:02:18,560:INFO:Starting cross validation
2024-03-16 16:02:18,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:18,951:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,055:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,072:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,112:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,137:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,171:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,241:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,260:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,302:INFO:Calculating mean and std
2024-03-16 16:02:19,306:INFO:Creating metrics dataframe
2024-03-16 16:02:19,311:INFO:Uploading results into container
2024-03-16 16:02:19,312:INFO:Uploading model into container now
2024-03-16 16:02:19,314:INFO:_master_model_container: 10
2024-03-16 16:02:19,314:INFO:_display_container: 2
2024-03-16 16:02:19,315:INFO:HuberRegressor()
2024-03-16 16:02:19,315:INFO:create_model() successfully completed......................................
2024-03-16 16:02:19,523:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:19,523:INFO:Creating metrics dataframe
2024-03-16 16:02:19,553:INFO:Initializing K Neighbors Regressor
2024-03-16 16:02:19,554:INFO:Total runtime is 0.13739320437113445 minutes
2024-03-16 16:02:19,565:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:19,567:INFO:Initializing create_model()
2024-03-16 16:02:19,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:19,568:INFO:Checking exceptions
2024-03-16 16:02:19,568:INFO:Importing libraries
2024-03-16 16:02:19,569:INFO:Copying training dataset
2024-03-16 16:02:19,604:INFO:Defining folds
2024-03-16 16:02:19,604:INFO:Declaring metric variables
2024-03-16 16:02:19,613:INFO:Importing untrained model
2024-03-16 16:02:19,626:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:02:19,646:INFO:Starting cross validation
2024-03-16 16:02:19,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:20,660:INFO:Calculating mean and std
2024-03-16 16:02:20,662:INFO:Creating metrics dataframe
2024-03-16 16:02:20,668:INFO:Uploading results into container
2024-03-16 16:02:20,669:INFO:Uploading model into container now
2024-03-16 16:02:20,670:INFO:_master_model_container: 11
2024-03-16 16:02:20,671:INFO:_display_container: 2
2024-03-16 16:02:20,671:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:02:20,672:INFO:create_model() successfully completed......................................
2024-03-16 16:02:20,882:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:20,882:INFO:Creating metrics dataframe
2024-03-16 16:02:20,910:INFO:Initializing Decision Tree Regressor
2024-03-16 16:02:20,911:INFO:Total runtime is 0.16000935633977253 minutes
2024-03-16 16:02:20,920:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:20,921:INFO:Initializing create_model()
2024-03-16 16:02:20,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:20,922:INFO:Checking exceptions
2024-03-16 16:02:20,923:INFO:Importing libraries
2024-03-16 16:02:20,923:INFO:Copying training dataset
2024-03-16 16:02:20,959:INFO:Defining folds
2024-03-16 16:02:20,959:INFO:Declaring metric variables
2024-03-16 16:02:20,972:INFO:Importing untrained model
2024-03-16 16:02:20,985:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:02:21,005:INFO:Starting cross validation
2024-03-16 16:02:21,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:21,565:INFO:Calculating mean and std
2024-03-16 16:02:21,570:INFO:Creating metrics dataframe
2024-03-16 16:02:21,578:INFO:Uploading results into container
2024-03-16 16:02:21,580:INFO:Uploading model into container now
2024-03-16 16:02:21,582:INFO:_master_model_container: 12
2024-03-16 16:02:21,583:INFO:_display_container: 2
2024-03-16 16:02:21,584:INFO:DecisionTreeRegressor(random_state=2617)
2024-03-16 16:02:21,585:INFO:create_model() successfully completed......................................
2024-03-16 16:02:21,912:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:21,913:INFO:Creating metrics dataframe
2024-03-16 16:02:21,961:INFO:Initializing Random Forest Regressor
2024-03-16 16:02:21,962:INFO:Total runtime is 0.17751604715983071 minutes
2024-03-16 16:02:21,973:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:21,975:INFO:Initializing create_model()
2024-03-16 16:02:21,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:21,976:INFO:Checking exceptions
2024-03-16 16:02:21,976:INFO:Importing libraries
2024-03-16 16:02:21,976:INFO:Copying training dataset
2024-03-16 16:02:22,025:INFO:Defining folds
2024-03-16 16:02:22,026:INFO:Declaring metric variables
2024-03-16 16:02:22,039:INFO:Importing untrained model
2024-03-16 16:02:22,050:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:02:22,071:INFO:Starting cross validation
2024-03-16 16:02:22,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:31,674:INFO:Calculating mean and std
2024-03-16 16:02:31,679:INFO:Creating metrics dataframe
2024-03-16 16:02:31,684:INFO:Uploading results into container
2024-03-16 16:02:31,686:INFO:Uploading model into container now
2024-03-16 16:02:31,688:INFO:_master_model_container: 13
2024-03-16 16:02:31,688:INFO:_display_container: 2
2024-03-16 16:02:31,689:INFO:RandomForestRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:31,690:INFO:create_model() successfully completed......................................
2024-03-16 16:02:31,940:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:31,941:INFO:Creating metrics dataframe
2024-03-16 16:02:31,964:INFO:Initializing Extra Trees Regressor
2024-03-16 16:02:31,965:INFO:Total runtime is 0.34424404303232825 minutes
2024-03-16 16:02:31,976:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:31,977:INFO:Initializing create_model()
2024-03-16 16:02:31,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:31,978:INFO:Checking exceptions
2024-03-16 16:02:31,978:INFO:Importing libraries
2024-03-16 16:02:31,978:INFO:Copying training dataset
2024-03-16 16:02:32,015:INFO:Defining folds
2024-03-16 16:02:32,016:INFO:Declaring metric variables
2024-03-16 16:02:32,029:INFO:Importing untrained model
2024-03-16 16:02:32,041:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:02:32,063:INFO:Starting cross validation
2024-03-16 16:02:32,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:37,950:INFO:Calculating mean and std
2024-03-16 16:02:37,956:INFO:Creating metrics dataframe
2024-03-16 16:02:37,960:INFO:Uploading results into container
2024-03-16 16:02:37,961:INFO:Uploading model into container now
2024-03-16 16:02:37,962:INFO:_master_model_container: 14
2024-03-16 16:02:37,963:INFO:_display_container: 2
2024-03-16 16:02:37,965:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:37,965:INFO:create_model() successfully completed......................................
2024-03-16 16:02:38,176:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:38,176:INFO:Creating metrics dataframe
2024-03-16 16:02:38,204:INFO:Initializing AdaBoost Regressor
2024-03-16 16:02:38,205:INFO:Total runtime is 0.4482420643170674 minutes
2024-03-16 16:02:38,212:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:38,212:INFO:Initializing create_model()
2024-03-16 16:02:38,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:38,213:INFO:Checking exceptions
2024-03-16 16:02:38,213:INFO:Importing libraries
2024-03-16 16:02:38,214:INFO:Copying training dataset
2024-03-16 16:02:38,240:INFO:Defining folds
2024-03-16 16:02:38,243:INFO:Declaring metric variables
2024-03-16 16:02:38,252:INFO:Importing untrained model
2024-03-16 16:02:38,264:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:02:38,281:INFO:Starting cross validation
2024-03-16 16:02:38,285:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:39,480:INFO:Calculating mean and std
2024-03-16 16:02:39,482:INFO:Creating metrics dataframe
2024-03-16 16:02:39,488:INFO:Uploading results into container
2024-03-16 16:02:39,489:INFO:Uploading model into container now
2024-03-16 16:02:39,490:INFO:_master_model_container: 15
2024-03-16 16:02:39,491:INFO:_display_container: 2
2024-03-16 16:02:39,491:INFO:AdaBoostRegressor(random_state=2617)
2024-03-16 16:02:39,492:INFO:create_model() successfully completed......................................
2024-03-16 16:02:39,761:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:39,762:INFO:Creating metrics dataframe
2024-03-16 16:02:39,788:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:02:39,789:INFO:Total runtime is 0.4746328035990397 minutes
2024-03-16 16:02:39,799:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:39,800:INFO:Initializing create_model()
2024-03-16 16:02:39,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:39,801:INFO:Checking exceptions
2024-03-16 16:02:39,801:INFO:Importing libraries
2024-03-16 16:02:39,801:INFO:Copying training dataset
2024-03-16 16:02:39,857:INFO:Defining folds
2024-03-16 16:02:39,857:INFO:Declaring metric variables
2024-03-16 16:02:39,865:INFO:Importing untrained model
2024-03-16 16:02:39,880:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:02:39,904:INFO:Starting cross validation
2024-03-16 16:02:39,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:42,366:INFO:Calculating mean and std
2024-03-16 16:02:42,369:INFO:Creating metrics dataframe
2024-03-16 16:02:42,374:INFO:Uploading results into container
2024-03-16 16:02:42,375:INFO:Uploading model into container now
2024-03-16 16:02:42,376:INFO:_master_model_container: 16
2024-03-16 16:02:42,376:INFO:_display_container: 2
2024-03-16 16:02:42,378:INFO:GradientBoostingRegressor(random_state=2617)
2024-03-16 16:02:42,378:INFO:create_model() successfully completed......................................
2024-03-16 16:02:42,551:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:42,551:INFO:Creating metrics dataframe
2024-03-16 16:02:42,576:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:02:42,576:INFO:Total runtime is 0.5210813601811727 minutes
2024-03-16 16:02:42,582:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:42,583:INFO:Initializing create_model()
2024-03-16 16:02:42,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:42,583:INFO:Checking exceptions
2024-03-16 16:02:42,583:INFO:Importing libraries
2024-03-16 16:02:42,583:INFO:Copying training dataset
2024-03-16 16:02:42,603:INFO:Defining folds
2024-03-16 16:02:42,603:INFO:Declaring metric variables
2024-03-16 16:02:42,611:INFO:Importing untrained model
2024-03-16 16:02:42,618:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:02:42,637:INFO:Starting cross validation
2024-03-16 16:02:42,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:45,000:INFO:Calculating mean and std
2024-03-16 16:02:45,003:INFO:Creating metrics dataframe
2024-03-16 16:02:45,007:INFO:Uploading results into container
2024-03-16 16:02:45,008:INFO:Uploading model into container now
2024-03-16 16:02:45,009:INFO:_master_model_container: 17
2024-03-16 16:02:45,009:INFO:_display_container: 2
2024-03-16 16:02:45,011:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2617, ...)
2024-03-16 16:02:45,012:INFO:create_model() successfully completed......................................
2024-03-16 16:02:45,197:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:45,197:INFO:Creating metrics dataframe
2024-03-16 16:02:45,221:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:02:45,222:INFO:Total runtime is 0.5651868581771851 minutes
2024-03-16 16:02:45,228:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:45,229:INFO:Initializing create_model()
2024-03-16 16:02:45,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:45,229:INFO:Checking exceptions
2024-03-16 16:02:45,230:INFO:Importing libraries
2024-03-16 16:02:45,230:INFO:Copying training dataset
2024-03-16 16:02:45,249:INFO:Defining folds
2024-03-16 16:02:45,250:INFO:Declaring metric variables
2024-03-16 16:02:45,258:INFO:Importing untrained model
2024-03-16 16:02:45,264:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:02:45,280:INFO:Starting cross validation
2024-03-16 16:02:45,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:51,138:INFO:Calculating mean and std
2024-03-16 16:02:51,141:INFO:Creating metrics dataframe
2024-03-16 16:02:51,149:INFO:Uploading results into container
2024-03-16 16:02:51,151:INFO:Uploading model into container now
2024-03-16 16:02:51,152:INFO:_master_model_container: 18
2024-03-16 16:02:51,152:INFO:_display_container: 2
2024-03-16 16:02:51,154:INFO:LGBMRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:51,155:INFO:create_model() successfully completed......................................
2024-03-16 16:02:51,373:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:51,374:INFO:Creating metrics dataframe
2024-03-16 16:02:51,402:INFO:Initializing Dummy Regressor
2024-03-16 16:02:51,403:INFO:Total runtime is 0.6682009855906168 minutes
2024-03-16 16:02:51,412:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:51,413:INFO:Initializing create_model()
2024-03-16 16:02:51,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:51,413:INFO:Checking exceptions
2024-03-16 16:02:51,413:INFO:Importing libraries
2024-03-16 16:02:51,414:INFO:Copying training dataset
2024-03-16 16:02:51,434:INFO:Defining folds
2024-03-16 16:02:51,434:INFO:Declaring metric variables
2024-03-16 16:02:51,443:INFO:Importing untrained model
2024-03-16 16:02:51,449:INFO:Dummy Regressor Imported successfully
2024-03-16 16:02:51,462:INFO:Starting cross validation
2024-03-16 16:02:51,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:51,766:INFO:Calculating mean and std
2024-03-16 16:02:51,769:INFO:Creating metrics dataframe
2024-03-16 16:02:51,773:INFO:Uploading results into container
2024-03-16 16:02:51,774:INFO:Uploading model into container now
2024-03-16 16:02:51,774:INFO:_master_model_container: 19
2024-03-16 16:02:51,775:INFO:_display_container: 2
2024-03-16 16:02:51,775:INFO:DummyRegressor()
2024-03-16 16:02:51,776:INFO:create_model() successfully completed......................................
2024-03-16 16:02:51,962:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:51,962:INFO:Creating metrics dataframe
2024-03-16 16:02:51,995:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:02:52,015:INFO:Initializing create_model()
2024-03-16 16:02:52,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ElasticNet(random_state=2617), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:52,015:INFO:Checking exceptions
2024-03-16 16:02:52,018:INFO:Importing libraries
2024-03-16 16:02:52,018:INFO:Copying training dataset
2024-03-16 16:02:52,042:INFO:Defining folds
2024-03-16 16:02:52,042:INFO:Declaring metric variables
2024-03-16 16:02:52,043:INFO:Importing untrained model
2024-03-16 16:02:52,043:INFO:Declaring custom model
2024-03-16 16:02:52,044:INFO:Elastic Net Imported successfully
2024-03-16 16:02:52,046:INFO:Cross validation set to False
2024-03-16 16:02:52,046:INFO:Fitting Model
2024-03-16 16:02:52,150:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.067e+06, tolerance: 1.350e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:52,152:INFO:ElasticNet(random_state=2617)
2024-03-16 16:02:52,152:INFO:create_model() successfully completed......................................
2024-03-16 16:02:52,409:INFO:Creating Dashboard logs
2024-03-16 16:02:52,418:INFO:Model: Elastic Net
2024-03-16 16:02:52,482:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 2617, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:02:52,659:INFO:Initializing predict_model()
2024-03-16 16:02:52,660:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ElasticNet(random_state=2617), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B85A83A5C0>)
2024-03-16 16:02:52,660:INFO:Checking exceptions
2024-03-16 16:02:52,661:INFO:Preloading libraries
2024-03-16 16:02:53,083:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:02:53,534:INFO:Creating Dashboard logs
2024-03-16 16:02:53,540:INFO:Model: Bayesian Ridge
2024-03-16 16:02:53,610:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:02:54,071:INFO:Creating Dashboard logs
2024-03-16 16:02:54,079:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:02:54,152:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 2617, 'verbose': False}
2024-03-16 16:02:54,495:INFO:Creating Dashboard logs
2024-03-16 16:02:54,500:INFO:Model: Lasso Regression
2024-03-16 16:02:54,553:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 2617, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:02:54,938:INFO:Creating Dashboard logs
2024-03-16 16:02:54,949:INFO:Model: Ridge Regression
2024-03-16 16:02:55,073:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 2617, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:02:55,485:INFO:Creating Dashboard logs
2024-03-16 16:02:55,490:INFO:Model: Linear Regression
2024-03-16 16:02:55,544:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:02:55,830:INFO:Creating Dashboard logs
2024-03-16 16:02:55,835:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:02:55,888:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:02:56,146:INFO:Creating Dashboard logs
2024-03-16 16:02:56,151:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:02:56,195:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 2617, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:56,513:INFO:Creating Dashboard logs
2024-03-16 16:02:56,520:INFO:Model: Huber Regressor
2024-03-16 16:02:56,581:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:02:56,903:INFO:Creating Dashboard logs
2024-03-16 16:02:56,909:INFO:Model: Random Forest Regressor
2024-03-16 16:02:56,972:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 2617, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:57,343:INFO:Creating Dashboard logs
2024-03-16 16:02:57,348:INFO:Model: Extra Trees Regressor
2024-03-16 16:02:57,405:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 2617, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:57,856:INFO:Creating Dashboard logs
2024-03-16 16:02:57,862:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:02:57,923:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 2617, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:02:58,327:INFO:Creating Dashboard logs
2024-03-16 16:02:58,333:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:02:58,389:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 2617, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:02:58,763:INFO:Creating Dashboard logs
2024-03-16 16:02:58,767:INFO:Model: K Neighbors Regressor
2024-03-16 16:02:58,814:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:02:59,142:INFO:Creating Dashboard logs
2024-03-16 16:02:59,147:INFO:Model: AdaBoost Regressor
2024-03-16 16:02:59,212:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 2617}
2024-03-16 16:02:59,484:INFO:Creating Dashboard logs
2024-03-16 16:02:59,489:INFO:Model: Decision Tree Regressor
2024-03-16 16:02:59,530:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 2617, 'splitter': 'best'}
2024-03-16 16:02:59,815:INFO:Creating Dashboard logs
2024-03-16 16:02:59,822:INFO:Model: Dummy Regressor
2024-03-16 16:02:59,866:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:03:00,197:INFO:Creating Dashboard logs
2024-03-16 16:03:00,204:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:03:00,268:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 2617, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:03:00,578:INFO:Creating Dashboard logs
2024-03-16 16:03:00,582:INFO:Model: Least Angle Regression
2024-03-16 16:03:00,633:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 2617, 'verbose': False}
2024-03-16 16:03:01,047:INFO:_master_model_container: 19
2024-03-16 16:03:01,047:INFO:_display_container: 2
2024-03-16 16:03:01,048:INFO:ElasticNet(random_state=2617)
2024-03-16 16:03:01,048:INFO:compare_models() successfully completed......................................
2024-03-16 16:03:42,167:INFO:PyCaret RegressionExperiment
2024-03-16 16:03:42,167:INFO:Logging name: reg-default-name
2024-03-16 16:03:42,167:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:03:42,167:INFO:version 3.3.0
2024-03-16 16:03:42,167:INFO:Initializing setup()
2024-03-16 16:03:42,168:INFO:self.USI: 94fd
2024-03-16 16:03:42,168:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:03:42,168:INFO:Checking environment
2024-03-16 16:03:42,168:INFO:python_version: 3.11.5
2024-03-16 16:03:42,168:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:03:42,168:INFO:machine: AMD64
2024-03-16 16:03:42,168:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:03:42,168:INFO:Memory: svmem(total=34129678336, available=11868643328, percent=65.2, used=22261035008, free=11868643328)
2024-03-16 16:03:42,168:INFO:Physical Core: 6
2024-03-16 16:03:42,169:INFO:Logical Core: 12
2024-03-16 16:03:42,169:INFO:Checking libraries
2024-03-16 16:03:42,169:INFO:System:
2024-03-16 16:03:42,169:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:03:42,169:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:03:42,169:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:03:42,169:INFO:PyCaret required dependencies:
2024-03-16 16:03:42,169:INFO:                 pip: 24.0
2024-03-16 16:03:42,169:INFO:          setuptools: 68.0.0
2024-03-16 16:03:42,170:INFO:             pycaret: 3.3.0
2024-03-16 16:03:42,170:INFO:             IPython: 8.15.0
2024-03-16 16:03:42,170:INFO:          ipywidgets: 8.0.4
2024-03-16 16:03:42,170:INFO:                tqdm: 4.65.0
2024-03-16 16:03:42,170:INFO:               numpy: 1.24.3
2024-03-16 16:03:42,170:INFO:              pandas: 2.0.3
2024-03-16 16:03:42,170:INFO:              jinja2: 3.1.2
2024-03-16 16:03:42,170:INFO:               scipy: 1.11.1
2024-03-16 16:03:42,170:INFO:              joblib: 1.2.0
2024-03-16 16:03:42,170:INFO:             sklearn: 1.3.0
2024-03-16 16:03:42,170:INFO:                pyod: 1.1.3
2024-03-16 16:03:42,171:INFO:            imblearn: 0.10.1
2024-03-16 16:03:42,171:INFO:   category_encoders: 2.6.3
2024-03-16 16:03:42,171:INFO:            lightgbm: 4.3.0
2024-03-16 16:03:42,171:INFO:               numba: 0.57.1
2024-03-16 16:03:42,171:INFO:            requests: 2.31.0
2024-03-16 16:03:42,171:INFO:          matplotlib: 3.7.2
2024-03-16 16:03:42,171:INFO:          scikitplot: 0.3.7
2024-03-16 16:03:42,171:INFO:         yellowbrick: 1.5
2024-03-16 16:03:42,171:INFO:              plotly: 5.9.0
2024-03-16 16:03:42,171:INFO:    plotly-resampler: Not installed
2024-03-16 16:03:42,171:INFO:             kaleido: 0.2.1
2024-03-16 16:03:42,171:INFO:           schemdraw: 0.15
2024-03-16 16:03:42,171:INFO:         statsmodels: 0.14.0
2024-03-16 16:03:42,172:INFO:              sktime: 0.27.0
2024-03-16 16:03:42,172:INFO:               tbats: 1.1.3
2024-03-16 16:03:42,172:INFO:            pmdarima: 2.0.4
2024-03-16 16:03:42,172:INFO:              psutil: 5.9.0
2024-03-16 16:03:42,172:INFO:          markupsafe: 2.1.1
2024-03-16 16:03:42,172:INFO:             pickle5: Not installed
2024-03-16 16:03:42,172:INFO:         cloudpickle: 2.2.1
2024-03-16 16:03:42,172:INFO:         deprecation: 2.1.0
2024-03-16 16:03:42,172:INFO:              xxhash: 2.0.2
2024-03-16 16:03:42,172:INFO:           wurlitzer: Not installed
2024-03-16 16:03:42,172:INFO:PyCaret optional dependencies:
2024-03-16 16:03:42,173:INFO:                shap: Not installed
2024-03-16 16:03:42,173:INFO:           interpret: Not installed
2024-03-16 16:03:42,173:INFO:                umap: Not installed
2024-03-16 16:03:42,173:INFO:     ydata_profiling: Not installed
2024-03-16 16:03:42,173:INFO:  explainerdashboard: Not installed
2024-03-16 16:03:42,173:INFO:             autoviz: Not installed
2024-03-16 16:03:42,173:INFO:           fairlearn: Not installed
2024-03-16 16:03:42,173:INFO:          deepchecks: Not installed
2024-03-16 16:03:42,173:INFO:             xgboost: 2.0.3
2024-03-16 16:03:42,174:INFO:            catboost: Not installed
2024-03-16 16:03:42,174:INFO:              kmodes: Not installed
2024-03-16 16:03:42,174:INFO:             mlxtend: Not installed
2024-03-16 16:03:42,174:INFO:       statsforecast: Not installed
2024-03-16 16:03:42,174:INFO:        tune_sklearn: Not installed
2024-03-16 16:03:42,174:INFO:                 ray: Not installed
2024-03-16 16:03:42,174:INFO:            hyperopt: Not installed
2024-03-16 16:03:42,174:INFO:              optuna: Not installed
2024-03-16 16:03:42,174:INFO:               skopt: Not installed
2024-03-16 16:03:42,174:INFO:              mlflow: 2.11.1
2024-03-16 16:03:42,175:INFO:              gradio: Not installed
2024-03-16 16:03:42,175:INFO:             fastapi: Not installed
2024-03-16 16:03:42,175:INFO:             uvicorn: Not installed
2024-03-16 16:03:42,175:INFO:              m2cgen: Not installed
2024-03-16 16:03:42,175:INFO:           evidently: Not installed
2024-03-16 16:03:42,175:INFO:               fugue: Not installed
2024-03-16 16:03:42,175:INFO:           streamlit: Not installed
2024-03-16 16:03:42,175:INFO:             prophet: Not installed
2024-03-16 16:03:42,175:INFO:None
2024-03-16 16:03:42,175:INFO:Set up data.
2024-03-16 16:03:42,188:INFO:Set up folding strategy.
2024-03-16 16:03:42,188:INFO:Set up train/test split.
2024-03-16 16:03:42,199:INFO:Set up index.
2024-03-16 16:03:42,199:INFO:Assigning column types.
2024-03-16 16:03:42,212:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:03:42,212:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,219:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,392:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,397:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,404:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,411:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,570:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,574:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:03:42,581:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,776:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,787:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,795:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,949:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,954:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:03:42,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,141:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,159:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,308:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,312:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:03:43,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,503:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,681:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:03:43,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,851:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:44,099:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,105:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:03:44,283:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,463:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,468:INFO:Preparing preprocessing pipeline...
2024-03-16 16:03:44,468:INFO:Set up simple imputation.
2024-03-16 16:03:44,470:INFO:Set up column name cleaning.
2024-03-16 16:03:44,520:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:03:44,528:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:03:44,528:INFO:Creating final display dataframe.
2024-03-16 16:03:44,732:INFO:Setup _display_container:                     Description             Value
0                    Session id              3606
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 28)
4        Transformed data shape        (1859, 28)
5   Transformed train set shape        (1301, 28)
6    Transformed test set shape         (558, 28)
7              Numeric features                27
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              94fd
2024-03-16 16:03:44,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:45,100:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:45,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:45,104:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:03:45,104:INFO:Logging experiment in loggers
2024-03-16 16:03:45,180:INFO:SubProcess save_model() called ==================================
2024-03-16 16:03:45,196:INFO:Initializing save_model()
2024-03-16 16:03:45,196:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp8owjozmw\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:03:45,196:INFO:Adding model into prep_pipe
2024-03-16 16:03:45,196:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:03:45,200:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp8owjozmw\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:03:45,208:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:03:45,208:INFO:save_model() successfully completed......................................
2024-03-16 16:03:45,347:INFO:SubProcess save_model() end ==================================
2024-03-16 16:03:45,366:INFO:setup() successfully completed in 2.94s...............
2024-03-16 16:03:45,366:INFO:Initializing compare_models()
2024-03-16 16:03:45,366:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:03:45,366:INFO:Checking exceptions
2024-03-16 16:03:45,370:INFO:Preparing display monitor
2024-03-16 16:03:45,407:INFO:Initializing Linear Regression
2024-03-16 16:03:45,407:INFO:Total runtime is 1.6697247823079427e-05 minutes
2024-03-16 16:03:45,412:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:45,413:INFO:Initializing create_model()
2024-03-16 16:03:45,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:45,413:INFO:Checking exceptions
2024-03-16 16:03:45,413:INFO:Importing libraries
2024-03-16 16:03:45,413:INFO:Copying training dataset
2024-03-16 16:03:45,434:INFO:Defining folds
2024-03-16 16:03:45,434:INFO:Declaring metric variables
2024-03-16 16:03:45,440:INFO:Importing untrained model
2024-03-16 16:03:45,447:INFO:Linear Regression Imported successfully
2024-03-16 16:03:45,457:INFO:Starting cross validation
2024-03-16 16:03:45,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:45,642:INFO:Calculating mean and std
2024-03-16 16:03:45,642:INFO:Creating metrics dataframe
2024-03-16 16:03:45,646:INFO:Uploading results into container
2024-03-16 16:03:45,647:INFO:Uploading model into container now
2024-03-16 16:03:45,647:INFO:_master_model_container: 1
2024-03-16 16:03:45,648:INFO:_display_container: 2
2024-03-16 16:03:45,648:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:03:45,648:INFO:create_model() successfully completed......................................
2024-03-16 16:03:45,793:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:45,793:INFO:Creating metrics dataframe
2024-03-16 16:03:45,804:INFO:Initializing Lasso Regression
2024-03-16 16:03:45,804:INFO:Total runtime is 0.006628155708312988 minutes
2024-03-16 16:03:45,809:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:45,810:INFO:Initializing create_model()
2024-03-16 16:03:45,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:45,810:INFO:Checking exceptions
2024-03-16 16:03:45,810:INFO:Importing libraries
2024-03-16 16:03:45,810:INFO:Copying training dataset
2024-03-16 16:03:45,824:INFO:Defining folds
2024-03-16 16:03:45,824:INFO:Declaring metric variables
2024-03-16 16:03:45,829:INFO:Importing untrained model
2024-03-16 16:03:45,836:INFO:Lasso Regression Imported successfully
2024-03-16 16:03:45,847:INFO:Starting cross validation
2024-03-16 16:03:45,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,014:INFO:Calculating mean and std
2024-03-16 16:03:46,015:INFO:Creating metrics dataframe
2024-03-16 16:03:46,018:INFO:Uploading results into container
2024-03-16 16:03:46,019:INFO:Uploading model into container now
2024-03-16 16:03:46,019:INFO:_master_model_container: 2
2024-03-16 16:03:46,019:INFO:_display_container: 2
2024-03-16 16:03:46,020:INFO:Lasso(random_state=3606)
2024-03-16 16:03:46,020:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,191:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,191:INFO:Creating metrics dataframe
2024-03-16 16:03:46,202:INFO:Initializing Ridge Regression
2024-03-16 16:03:46,202:INFO:Total runtime is 0.01326359510421753 minutes
2024-03-16 16:03:46,208:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:46,209:INFO:Initializing create_model()
2024-03-16 16:03:46,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:46,210:INFO:Checking exceptions
2024-03-16 16:03:46,210:INFO:Importing libraries
2024-03-16 16:03:46,210:INFO:Copying training dataset
2024-03-16 16:03:46,224:INFO:Defining folds
2024-03-16 16:03:46,224:INFO:Declaring metric variables
2024-03-16 16:03:46,230:INFO:Importing untrained model
2024-03-16 16:03:46,238:INFO:Ridge Regression Imported successfully
2024-03-16 16:03:46,252:INFO:Starting cross validation
2024-03-16 16:03:46,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,315:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.47597e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,331:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.39978e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,341:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.48754e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,362:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.44382e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,376:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.462e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,385:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.69887e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,402:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.40025e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,413:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.5402e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,422:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.65e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,431:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.60122e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,448:INFO:Calculating mean and std
2024-03-16 16:03:46,450:INFO:Creating metrics dataframe
2024-03-16 16:03:46,453:INFO:Uploading results into container
2024-03-16 16:03:46,454:INFO:Uploading model into container now
2024-03-16 16:03:46,455:INFO:_master_model_container: 3
2024-03-16 16:03:46,455:INFO:_display_container: 2
2024-03-16 16:03:46,456:INFO:Ridge(random_state=3606)
2024-03-16 16:03:46,456:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,604:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,604:INFO:Creating metrics dataframe
2024-03-16 16:03:46,615:INFO:Initializing Elastic Net
2024-03-16 16:03:46,615:INFO:Total runtime is 0.02013799746831258 minutes
2024-03-16 16:03:46,621:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:46,622:INFO:Initializing create_model()
2024-03-16 16:03:46,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:46,622:INFO:Checking exceptions
2024-03-16 16:03:46,622:INFO:Importing libraries
2024-03-16 16:03:46,622:INFO:Copying training dataset
2024-03-16 16:03:46,636:INFO:Defining folds
2024-03-16 16:03:46,637:INFO:Declaring metric variables
2024-03-16 16:03:46,643:INFO:Importing untrained model
2024-03-16 16:03:46,648:INFO:Elastic Net Imported successfully
2024-03-16 16:03:46,659:INFO:Starting cross validation
2024-03-16 16:03:46,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,823:INFO:Calculating mean and std
2024-03-16 16:03:46,824:INFO:Creating metrics dataframe
2024-03-16 16:03:46,828:INFO:Uploading results into container
2024-03-16 16:03:46,829:INFO:Uploading model into container now
2024-03-16 16:03:46,830:INFO:_master_model_container: 4
2024-03-16 16:03:46,830:INFO:_display_container: 2
2024-03-16 16:03:46,830:INFO:ElasticNet(random_state=3606)
2024-03-16 16:03:46,831:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,991:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,991:INFO:Creating metrics dataframe
2024-03-16 16:03:47,005:INFO:Initializing Least Angle Regression
2024-03-16 16:03:47,006:INFO:Total runtime is 0.026662973562876384 minutes
2024-03-16 16:03:47,011:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,011:INFO:Initializing create_model()
2024-03-16 16:03:47,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,013:INFO:Checking exceptions
2024-03-16 16:03:47,013:INFO:Importing libraries
2024-03-16 16:03:47,013:INFO:Copying training dataset
2024-03-16 16:03:47,031:INFO:Defining folds
2024-03-16 16:03:47,032:INFO:Declaring metric variables
2024-03-16 16:03:47,037:INFO:Importing untrained model
2024-03-16 16:03:47,043:INFO:Least Angle Regression Imported successfully
2024-03-16 16:03:47,055:INFO:Starting cross validation
2024-03-16 16:03:47,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:47,259:INFO:Calculating mean and std
2024-03-16 16:03:47,261:INFO:Creating metrics dataframe
2024-03-16 16:03:47,264:INFO:Uploading results into container
2024-03-16 16:03:47,265:INFO:Uploading model into container now
2024-03-16 16:03:47,266:INFO:_master_model_container: 5
2024-03-16 16:03:47,267:INFO:_display_container: 2
2024-03-16 16:03:47,268:INFO:Lars(random_state=3606)
2024-03-16 16:03:47,268:INFO:create_model() successfully completed......................................
2024-03-16 16:03:47,491:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:47,491:INFO:Creating metrics dataframe
2024-03-16 16:03:47,510:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:03:47,510:INFO:Total runtime is 0.03505577246348063 minutes
2024-03-16 16:03:47,516:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,517:INFO:Initializing create_model()
2024-03-16 16:03:47,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,518:INFO:Checking exceptions
2024-03-16 16:03:47,518:INFO:Importing libraries
2024-03-16 16:03:47,518:INFO:Copying training dataset
2024-03-16 16:03:47,534:INFO:Defining folds
2024-03-16 16:03:47,534:INFO:Declaring metric variables
2024-03-16 16:03:47,543:INFO:Importing untrained model
2024-03-16 16:03:47,549:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:03:47,563:INFO:Starting cross validation
2024-03-16 16:03:47,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:47,763:INFO:Calculating mean and std
2024-03-16 16:03:47,765:INFO:Creating metrics dataframe
2024-03-16 16:03:47,770:INFO:Uploading results into container
2024-03-16 16:03:47,771:INFO:Uploading model into container now
2024-03-16 16:03:47,772:INFO:_master_model_container: 6
2024-03-16 16:03:47,772:INFO:_display_container: 2
2024-03-16 16:03:47,773:INFO:LassoLars(random_state=3606)
2024-03-16 16:03:47,774:INFO:create_model() successfully completed......................................
2024-03-16 16:03:47,927:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:47,928:INFO:Creating metrics dataframe
2024-03-16 16:03:47,939:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:03:47,940:INFO:Total runtime is 0.04222753445307413 minutes
2024-03-16 16:03:47,945:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,946:INFO:Initializing create_model()
2024-03-16 16:03:47,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,946:INFO:Checking exceptions
2024-03-16 16:03:47,946:INFO:Importing libraries
2024-03-16 16:03:47,946:INFO:Copying training dataset
2024-03-16 16:03:47,959:INFO:Defining folds
2024-03-16 16:03:47,960:INFO:Declaring metric variables
2024-03-16 16:03:47,965:INFO:Importing untrained model
2024-03-16 16:03:47,973:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:03:47,985:INFO:Starting cross validation
2024-03-16 16:03:47,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,164:INFO:Calculating mean and std
2024-03-16 16:03:48,165:INFO:Creating metrics dataframe
2024-03-16 16:03:48,168:INFO:Uploading results into container
2024-03-16 16:03:48,169:INFO:Uploading model into container now
2024-03-16 16:03:48,170:INFO:_master_model_container: 7
2024-03-16 16:03:48,171:INFO:_display_container: 2
2024-03-16 16:03:48,172:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:03:48,172:INFO:create_model() successfully completed......................................
2024-03-16 16:03:48,319:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:48,319:INFO:Creating metrics dataframe
2024-03-16 16:03:48,331:INFO:Initializing Bayesian Ridge
2024-03-16 16:03:48,331:INFO:Total runtime is 0.0487462560335795 minutes
2024-03-16 16:03:48,336:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:48,336:INFO:Initializing create_model()
2024-03-16 16:03:48,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:48,337:INFO:Checking exceptions
2024-03-16 16:03:48,337:INFO:Importing libraries
2024-03-16 16:03:48,337:INFO:Copying training dataset
2024-03-16 16:03:48,351:INFO:Defining folds
2024-03-16 16:03:48,351:INFO:Declaring metric variables
2024-03-16 16:03:48,358:INFO:Importing untrained model
2024-03-16 16:03:48,365:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:03:48,382:INFO:Starting cross validation
2024-03-16 16:03:48,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,566:INFO:Calculating mean and std
2024-03-16 16:03:48,569:INFO:Creating metrics dataframe
2024-03-16 16:03:48,571:INFO:Uploading results into container
2024-03-16 16:03:48,572:INFO:Uploading model into container now
2024-03-16 16:03:48,574:INFO:_master_model_container: 8
2024-03-16 16:03:48,574:INFO:_display_container: 2
2024-03-16 16:03:48,575:INFO:BayesianRidge()
2024-03-16 16:03:48,576:INFO:create_model() successfully completed......................................
2024-03-16 16:03:48,739:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:48,739:INFO:Creating metrics dataframe
2024-03-16 16:03:48,755:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:03:48,755:INFO:Total runtime is 0.055818124612172434 minutes
2024-03-16 16:03:48,761:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:48,761:INFO:Initializing create_model()
2024-03-16 16:03:48,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:48,762:INFO:Checking exceptions
2024-03-16 16:03:48,762:INFO:Importing libraries
2024-03-16 16:03:48,762:INFO:Copying training dataset
2024-03-16 16:03:48,775:INFO:Defining folds
2024-03-16 16:03:48,776:INFO:Declaring metric variables
2024-03-16 16:03:48,781:INFO:Importing untrained model
2024-03-16 16:03:48,789:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:03:48,801:INFO:Starting cross validation
2024-03-16 16:03:48,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,981:INFO:Calculating mean and std
2024-03-16 16:03:48,983:INFO:Creating metrics dataframe
2024-03-16 16:03:48,986:INFO:Uploading results into container
2024-03-16 16:03:48,987:INFO:Uploading model into container now
2024-03-16 16:03:48,988:INFO:_master_model_container: 9
2024-03-16 16:03:48,988:INFO:_display_container: 2
2024-03-16 16:03:48,989:INFO:PassiveAggressiveRegressor(random_state=3606)
2024-03-16 16:03:48,990:INFO:create_model() successfully completed......................................
2024-03-16 16:03:49,148:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:49,148:INFO:Creating metrics dataframe
2024-03-16 16:03:49,161:INFO:Initializing Huber Regressor
2024-03-16 16:03:49,162:INFO:Total runtime is 0.06258682409922281 minutes
2024-03-16 16:03:49,167:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:49,167:INFO:Initializing create_model()
2024-03-16 16:03:49,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:49,168:INFO:Checking exceptions
2024-03-16 16:03:49,168:INFO:Importing libraries
2024-03-16 16:03:49,168:INFO:Copying training dataset
2024-03-16 16:03:49,185:INFO:Defining folds
2024-03-16 16:03:49,186:INFO:Declaring metric variables
2024-03-16 16:03:49,192:INFO:Importing untrained model
2024-03-16 16:03:49,198:INFO:Huber Regressor Imported successfully
2024-03-16 16:03:49,211:INFO:Starting cross validation
2024-03-16 16:03:49,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:49,395:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,416:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,448:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,460:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,464:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,479:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,498:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,522:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,523:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,535:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,557:INFO:Calculating mean and std
2024-03-16 16:03:49,560:INFO:Creating metrics dataframe
2024-03-16 16:03:49,563:INFO:Uploading results into container
2024-03-16 16:03:49,564:INFO:Uploading model into container now
2024-03-16 16:03:49,565:INFO:_master_model_container: 10
2024-03-16 16:03:49,566:INFO:_display_container: 2
2024-03-16 16:03:49,567:INFO:HuberRegressor()
2024-03-16 16:03:49,567:INFO:create_model() successfully completed......................................
2024-03-16 16:03:49,739:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:49,739:INFO:Creating metrics dataframe
2024-03-16 16:03:49,760:INFO:Initializing K Neighbors Regressor
2024-03-16 16:03:49,760:INFO:Total runtime is 0.07255718708038329 minutes
2024-03-16 16:03:49,767:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:49,768:INFO:Initializing create_model()
2024-03-16 16:03:49,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:49,768:INFO:Checking exceptions
2024-03-16 16:03:49,769:INFO:Importing libraries
2024-03-16 16:03:49,769:INFO:Copying training dataset
2024-03-16 16:03:49,784:INFO:Defining folds
2024-03-16 16:03:49,784:INFO:Declaring metric variables
2024-03-16 16:03:49,792:INFO:Importing untrained model
2024-03-16 16:03:49,799:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:03:49,812:INFO:Starting cross validation
2024-03-16 16:03:49,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:50,250:INFO:Calculating mean and std
2024-03-16 16:03:50,252:INFO:Creating metrics dataframe
2024-03-16 16:03:50,256:INFO:Uploading results into container
2024-03-16 16:03:50,256:INFO:Uploading model into container now
2024-03-16 16:03:50,258:INFO:_master_model_container: 11
2024-03-16 16:03:50,258:INFO:_display_container: 2
2024-03-16 16:03:50,259:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:03:50,259:INFO:create_model() successfully completed......................................
2024-03-16 16:03:50,446:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:50,446:INFO:Creating metrics dataframe
2024-03-16 16:03:50,468:INFO:Initializing Decision Tree Regressor
2024-03-16 16:03:50,469:INFO:Total runtime is 0.08435679674148559 minutes
2024-03-16 16:03:50,474:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:50,475:INFO:Initializing create_model()
2024-03-16 16:03:50,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:50,476:INFO:Checking exceptions
2024-03-16 16:03:50,476:INFO:Importing libraries
2024-03-16 16:03:50,476:INFO:Copying training dataset
2024-03-16 16:03:50,493:INFO:Defining folds
2024-03-16 16:03:50,494:INFO:Declaring metric variables
2024-03-16 16:03:50,501:INFO:Importing untrained model
2024-03-16 16:03:50,508:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:03:50,519:INFO:Starting cross validation
2024-03-16 16:03:50,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:50,789:INFO:Calculating mean and std
2024-03-16 16:03:50,791:INFO:Creating metrics dataframe
2024-03-16 16:03:50,794:INFO:Uploading results into container
2024-03-16 16:03:50,795:INFO:Uploading model into container now
2024-03-16 16:03:50,796:INFO:_master_model_container: 12
2024-03-16 16:03:50,796:INFO:_display_container: 2
2024-03-16 16:03:50,797:INFO:DecisionTreeRegressor(random_state=3606)
2024-03-16 16:03:50,797:INFO:create_model() successfully completed......................................
2024-03-16 16:03:50,968:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:50,969:INFO:Creating metrics dataframe
2024-03-16 16:03:50,987:INFO:Initializing Random Forest Regressor
2024-03-16 16:03:50,987:INFO:Total runtime is 0.09300813674926757 minutes
2024-03-16 16:03:50,996:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:50,996:INFO:Initializing create_model()
2024-03-16 16:03:50,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:50,997:INFO:Checking exceptions
2024-03-16 16:03:50,997:INFO:Importing libraries
2024-03-16 16:03:50,997:INFO:Copying training dataset
2024-03-16 16:03:51,014:INFO:Defining folds
2024-03-16 16:03:51,015:INFO:Declaring metric variables
2024-03-16 16:03:51,023:INFO:Importing untrained model
2024-03-16 16:03:51,029:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:03:51,041:INFO:Starting cross validation
2024-03-16 16:03:51,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:57,279:INFO:Calculating mean and std
2024-03-16 16:03:57,283:INFO:Creating metrics dataframe
2024-03-16 16:03:57,289:INFO:Uploading results into container
2024-03-16 16:03:57,291:INFO:Uploading model into container now
2024-03-16 16:03:57,292:INFO:_master_model_container: 13
2024-03-16 16:03:57,292:INFO:_display_container: 2
2024-03-16 16:03:57,293:INFO:RandomForestRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:03:57,294:INFO:create_model() successfully completed......................................
2024-03-16 16:03:57,526:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:57,526:INFO:Creating metrics dataframe
2024-03-16 16:03:57,555:INFO:Initializing Extra Trees Regressor
2024-03-16 16:03:57,555:INFO:Total runtime is 0.20248432556788126 minutes
2024-03-16 16:03:57,565:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:57,566:INFO:Initializing create_model()
2024-03-16 16:03:57,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:57,567:INFO:Checking exceptions
2024-03-16 16:03:57,567:INFO:Importing libraries
2024-03-16 16:03:57,567:INFO:Copying training dataset
2024-03-16 16:03:57,589:INFO:Defining folds
2024-03-16 16:03:57,589:INFO:Declaring metric variables
2024-03-16 16:03:57,599:INFO:Importing untrained model
2024-03-16 16:03:57,608:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:03:57,626:INFO:Starting cross validation
2024-03-16 16:03:57,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:01,384:INFO:Calculating mean and std
2024-03-16 16:04:01,388:INFO:Creating metrics dataframe
2024-03-16 16:04:01,394:INFO:Uploading results into container
2024-03-16 16:04:01,396:INFO:Uploading model into container now
2024-03-16 16:04:01,397:INFO:_master_model_container: 14
2024-03-16 16:04:01,397:INFO:_display_container: 2
2024-03-16 16:04:01,399:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:04:01,399:INFO:create_model() successfully completed......................................
2024-03-16 16:04:01,652:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:01,652:INFO:Creating metrics dataframe
2024-03-16 16:04:01,696:INFO:Initializing AdaBoost Regressor
2024-03-16 16:04:01,697:INFO:Total runtime is 0.2714920560518901 minutes
2024-03-16 16:04:01,709:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:01,710:INFO:Initializing create_model()
2024-03-16 16:04:01,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:01,711:INFO:Checking exceptions
2024-03-16 16:04:01,711:INFO:Importing libraries
2024-03-16 16:04:01,711:INFO:Copying training dataset
2024-03-16 16:04:01,745:INFO:Defining folds
2024-03-16 16:04:01,745:INFO:Declaring metric variables
2024-03-16 16:04:01,761:INFO:Importing untrained model
2024-03-16 16:04:01,773:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:04:01,799:INFO:Starting cross validation
2024-03-16 16:04:01,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:03,146:INFO:Calculating mean and std
2024-03-16 16:04:03,148:INFO:Creating metrics dataframe
2024-03-16 16:04:03,156:INFO:Uploading results into container
2024-03-16 16:04:03,158:INFO:Uploading model into container now
2024-03-16 16:04:03,160:INFO:_master_model_container: 15
2024-03-16 16:04:03,160:INFO:_display_container: 2
2024-03-16 16:04:03,162:INFO:AdaBoostRegressor(random_state=3606)
2024-03-16 16:04:03,162:INFO:create_model() successfully completed......................................
2024-03-16 16:04:03,353:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:03,353:INFO:Creating metrics dataframe
2024-03-16 16:04:03,376:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:04:03,376:INFO:Total runtime is 0.2994999368985494 minutes
2024-03-16 16:04:03,384:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:03,385:INFO:Initializing create_model()
2024-03-16 16:04:03,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:03,385:INFO:Checking exceptions
2024-03-16 16:04:03,385:INFO:Importing libraries
2024-03-16 16:04:03,386:INFO:Copying training dataset
2024-03-16 16:04:03,406:INFO:Defining folds
2024-03-16 16:04:03,408:INFO:Declaring metric variables
2024-03-16 16:04:03,417:INFO:Importing untrained model
2024-03-16 16:04:03,430:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:04:03,448:INFO:Starting cross validation
2024-03-16 16:04:03,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:05,338:INFO:Calculating mean and std
2024-03-16 16:04:05,340:INFO:Creating metrics dataframe
2024-03-16 16:04:05,344:INFO:Uploading results into container
2024-03-16 16:04:05,346:INFO:Uploading model into container now
2024-03-16 16:04:05,347:INFO:_master_model_container: 16
2024-03-16 16:04:05,347:INFO:_display_container: 2
2024-03-16 16:04:05,349:INFO:GradientBoostingRegressor(random_state=3606)
2024-03-16 16:04:05,350:INFO:create_model() successfully completed......................................
2024-03-16 16:04:05,528:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:05,528:INFO:Creating metrics dataframe
2024-03-16 16:04:05,554:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:04:05,555:INFO:Total runtime is 0.33580631812413536 minutes
2024-03-16 16:04:05,562:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:05,562:INFO:Initializing create_model()
2024-03-16 16:04:05,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:05,563:INFO:Checking exceptions
2024-03-16 16:04:05,563:INFO:Importing libraries
2024-03-16 16:04:05,563:INFO:Copying training dataset
2024-03-16 16:04:05,581:INFO:Defining folds
2024-03-16 16:04:05,581:INFO:Declaring metric variables
2024-03-16 16:04:05,590:INFO:Importing untrained model
2024-03-16 16:04:05,598:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:04:05,613:INFO:Starting cross validation
2024-03-16 16:04:05,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:07,620:INFO:Calculating mean and std
2024-03-16 16:04:07,625:INFO:Creating metrics dataframe
2024-03-16 16:04:07,634:INFO:Uploading results into container
2024-03-16 16:04:07,638:INFO:Uploading model into container now
2024-03-16 16:04:07,642:INFO:_master_model_container: 17
2024-03-16 16:04:07,642:INFO:_display_container: 2
2024-03-16 16:04:07,647:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3606, ...)
2024-03-16 16:04:07,647:INFO:create_model() successfully completed......................................
2024-03-16 16:04:07,845:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:07,845:INFO:Creating metrics dataframe
2024-03-16 16:04:07,874:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:04:07,875:INFO:Total runtime is 0.3744811137517294 minutes
2024-03-16 16:04:07,881:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:07,882:INFO:Initializing create_model()
2024-03-16 16:04:07,883:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:07,883:INFO:Checking exceptions
2024-03-16 16:04:07,883:INFO:Importing libraries
2024-03-16 16:04:07,884:INFO:Copying training dataset
2024-03-16 16:04:07,904:INFO:Defining folds
2024-03-16 16:04:07,904:INFO:Declaring metric variables
2024-03-16 16:04:07,911:INFO:Importing untrained model
2024-03-16 16:04:07,919:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:04:07,941:INFO:Starting cross validation
2024-03-16 16:04:07,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:12,800:INFO:Calculating mean and std
2024-03-16 16:04:12,804:INFO:Creating metrics dataframe
2024-03-16 16:04:12,810:INFO:Uploading results into container
2024-03-16 16:04:12,812:INFO:Uploading model into container now
2024-03-16 16:04:12,813:INFO:_master_model_container: 18
2024-03-16 16:04:12,813:INFO:_display_container: 2
2024-03-16 16:04:12,815:INFO:LGBMRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:04:12,815:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,013:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:13,013:INFO:Creating metrics dataframe
2024-03-16 16:04:13,034:INFO:Initializing Dummy Regressor
2024-03-16 16:04:13,034:INFO:Total runtime is 0.4604688445727031 minutes
2024-03-16 16:04:13,042:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:13,043:INFO:Initializing create_model()
2024-03-16 16:04:13,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:13,043:INFO:Checking exceptions
2024-03-16 16:04:13,043:INFO:Importing libraries
2024-03-16 16:04:13,043:INFO:Copying training dataset
2024-03-16 16:04:13,061:INFO:Defining folds
2024-03-16 16:04:13,061:INFO:Declaring metric variables
2024-03-16 16:04:13,071:INFO:Importing untrained model
2024-03-16 16:04:13,079:INFO:Dummy Regressor Imported successfully
2024-03-16 16:04:13,093:INFO:Starting cross validation
2024-03-16 16:04:13,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:13,293:INFO:Calculating mean and std
2024-03-16 16:04:13,295:INFO:Creating metrics dataframe
2024-03-16 16:04:13,298:INFO:Uploading results into container
2024-03-16 16:04:13,299:INFO:Uploading model into container now
2024-03-16 16:04:13,300:INFO:_master_model_container: 19
2024-03-16 16:04:13,301:INFO:_display_container: 2
2024-03-16 16:04:13,301:INFO:DummyRegressor()
2024-03-16 16:04:13,302:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,453:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:13,453:INFO:Creating metrics dataframe
2024-03-16 16:04:13,472:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:04:13,488:INFO:Initializing create_model()
2024-03-16 16:04:13,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:13,488:INFO:Checking exceptions
2024-03-16 16:04:13,491:INFO:Importing libraries
2024-03-16 16:04:13,491:INFO:Copying training dataset
2024-03-16 16:04:13,504:INFO:Defining folds
2024-03-16 16:04:13,504:INFO:Declaring metric variables
2024-03-16 16:04:13,504:INFO:Importing untrained model
2024-03-16 16:04:13,504:INFO:Declaring custom model
2024-03-16 16:04:13,505:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:04:13,506:INFO:Cross validation set to False
2024-03-16 16:04:13,506:INFO:Fitting Model
2024-03-16 16:04:13,527:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:04:13,527:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,731:INFO:Creating Dashboard logs
2024-03-16 16:04:13,740:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:04:13,806:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:04:13,902:INFO:Initializing predict_model()
2024-03-16 16:04:13,902:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D4B9A80>)
2024-03-16 16:04:13,902:INFO:Checking exceptions
2024-03-16 16:04:13,902:INFO:Preloading libraries
2024-03-16 16:04:14,014:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:04:14,345:INFO:Creating Dashboard logs
2024-03-16 16:04:14,349:INFO:Model: Ridge Regression
2024-03-16 16:04:14,388:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3606, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:04:14,633:INFO:Creating Dashboard logs
2024-03-16 16:04:14,637:INFO:Model: Lasso Regression
2024-03-16 16:04:14,682:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3606, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:04:14,944:INFO:Creating Dashboard logs
2024-03-16 16:04:14,948:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:04:14,997:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3606, 'verbose': False}
2024-03-16 16:04:15,361:INFO:Creating Dashboard logs
2024-03-16 16:04:15,366:INFO:Model: Linear Regression
2024-03-16 16:04:15,408:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:04:15,670:INFO:Creating Dashboard logs
2024-03-16 16:04:15,674:INFO:Model: Elastic Net
2024-03-16 16:04:15,720:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3606, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:04:16,006:INFO:Creating Dashboard logs
2024-03-16 16:04:16,011:INFO:Model: Bayesian Ridge
2024-03-16 16:04:16,059:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:04:16,356:INFO:Creating Dashboard logs
2024-03-16 16:04:16,361:INFO:Model: Least Angle Regression
2024-03-16 16:04:16,415:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3606, 'verbose': False}
2024-03-16 16:04:16,727:INFO:Creating Dashboard logs
2024-03-16 16:04:16,732:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:04:16,785:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3606, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:17,146:INFO:Creating Dashboard logs
2024-03-16 16:04:17,152:INFO:Model: Huber Regressor
2024-03-16 16:04:17,202:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:04:17,497:INFO:Creating Dashboard logs
2024-03-16 16:04:17,505:INFO:Model: Extra Trees Regressor
2024-03-16 16:04:17,557:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3606, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:17,933:INFO:Creating Dashboard logs
2024-03-16 16:04:17,940:INFO:Model: Random Forest Regressor
2024-03-16 16:04:17,994:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3606, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:18,347:INFO:Creating Dashboard logs
2024-03-16 16:04:18,354:INFO:Model: K Neighbors Regressor
2024-03-16 16:04:18,418:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:04:18,717:INFO:Creating Dashboard logs
2024-03-16 16:04:18,722:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:04:18,771:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3606, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:04:19,104:INFO:Creating Dashboard logs
2024-03-16 16:04:19,110:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:04:19,164:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3606, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:04:19,471:INFO:Creating Dashboard logs
2024-03-16 16:04:19,476:INFO:Model: AdaBoost Regressor
2024-03-16 16:04:19,525:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3606}
2024-03-16 16:04:19,790:INFO:Creating Dashboard logs
2024-03-16 16:04:19,796:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:04:19,842:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3606, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:20,113:INFO:Creating Dashboard logs
2024-03-16 16:04:20,121:INFO:Model: Decision Tree Regressor
2024-03-16 16:04:20,179:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3606, 'splitter': 'best'}
2024-03-16 16:04:20,482:INFO:Creating Dashboard logs
2024-03-16 16:04:20,489:INFO:Model: Dummy Regressor
2024-03-16 16:04:20,541:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:04:20,898:INFO:_master_model_container: 19
2024-03-16 16:04:20,899:INFO:_display_container: 2
2024-03-16 16:04:20,900:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:04:20,900:INFO:compare_models() successfully completed......................................
2024-03-16 16:13:41,592:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,881:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,882:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,051:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,053:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,236:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,237:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,491:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,491:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,492:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,635:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):


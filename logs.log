2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:29:54,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-16 15:41:36,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:36,973:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:36,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,018:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,020:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,027:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,074:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,083:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,122:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,171:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,176:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:37,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:848: UserWarning: 

The `bw` parameter is deprecated in favor of `bw_method` and `bw_adjust`.
Setting `bw_method=0.2`, but please see the docs for the new parameters
and update your code. This will become an error in seaborn v0.13.0.

  func(*plot_args, **plot_kwargs)

2024-03-16 15:41:37,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:41:37,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:41:38,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:41:38,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:41:58,045:INFO:PyCaret RegressionExperiment
2024-03-16 15:41:58,045:INFO:Logging name: reg-default-name
2024-03-16 15:41:58,045:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 15:41:58,045:INFO:version 3.3.0
2024-03-16 15:41:58,047:INFO:Initializing setup()
2024-03-16 15:41:58,047:INFO:self.USI: a07e
2024-03-16 15:41:58,047:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 15:41:58,047:INFO:Checking environment
2024-03-16 15:41:58,047:INFO:python_version: 3.11.5
2024-03-16 15:41:58,047:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 15:41:58,047:INFO:machine: AMD64
2024-03-16 15:41:58,047:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 15:41:58,047:INFO:Memory: svmem(total=34129678336, available=14922956800, percent=56.3, used=19206721536, free=14922956800)
2024-03-16 15:41:58,047:INFO:Physical Core: 6
2024-03-16 15:41:58,047:INFO:Logical Core: 12
2024-03-16 15:41:58,047:INFO:Checking libraries
2024-03-16 15:41:58,047:INFO:System:
2024-03-16 15:41:58,047:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 15:41:58,048:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 15:41:58,048:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 15:41:58,048:INFO:PyCaret required dependencies:
2024-03-16 15:42:00,145:INFO:                 pip: 24.0
2024-03-16 15:42:00,145:INFO:          setuptools: 68.0.0
2024-03-16 15:42:00,146:INFO:             pycaret: 3.3.0
2024-03-16 15:42:00,146:INFO:             IPython: 8.15.0
2024-03-16 15:42:00,146:INFO:          ipywidgets: 8.0.4
2024-03-16 15:42:00,146:INFO:                tqdm: 4.65.0
2024-03-16 15:42:00,146:INFO:               numpy: 1.24.3
2024-03-16 15:42:00,146:INFO:              pandas: 2.0.3
2024-03-16 15:42:00,147:INFO:              jinja2: 3.1.2
2024-03-16 15:42:00,147:INFO:               scipy: 1.11.1
2024-03-16 15:42:00,147:INFO:              joblib: 1.2.0
2024-03-16 15:42:00,147:INFO:             sklearn: 1.3.0
2024-03-16 15:42:00,147:INFO:                pyod: 1.1.3
2024-03-16 15:42:00,147:INFO:            imblearn: 0.10.1
2024-03-16 15:42:00,147:INFO:   category_encoders: 2.6.3
2024-03-16 15:42:00,147:INFO:            lightgbm: 4.3.0
2024-03-16 15:42:00,147:INFO:               numba: 0.57.1
2024-03-16 15:42:00,149:INFO:            requests: 2.31.0
2024-03-16 15:42:00,149:INFO:          matplotlib: 3.7.2
2024-03-16 15:42:00,149:INFO:          scikitplot: 0.3.7
2024-03-16 15:42:00,149:INFO:         yellowbrick: 1.5
2024-03-16 15:42:00,149:INFO:              plotly: 5.9.0
2024-03-16 15:42:00,149:INFO:    plotly-resampler: Not installed
2024-03-16 15:42:00,150:INFO:             kaleido: 0.2.1
2024-03-16 15:42:00,150:INFO:           schemdraw: 0.15
2024-03-16 15:42:00,150:INFO:         statsmodels: 0.14.0
2024-03-16 15:42:00,150:INFO:              sktime: 0.27.0
2024-03-16 15:42:00,151:INFO:               tbats: 1.1.3
2024-03-16 15:42:00,151:INFO:            pmdarima: 2.0.4
2024-03-16 15:42:00,151:INFO:              psutil: 5.9.0
2024-03-16 15:42:00,151:INFO:          markupsafe: 2.1.1
2024-03-16 15:42:00,152:INFO:             pickle5: Not installed
2024-03-16 15:42:00,152:INFO:         cloudpickle: 2.2.1
2024-03-16 15:42:00,152:INFO:         deprecation: 2.1.0
2024-03-16 15:42:00,152:INFO:              xxhash: 2.0.2
2024-03-16 15:42:00,152:INFO:           wurlitzer: Not installed
2024-03-16 15:42:00,152:INFO:PyCaret optional dependencies:
2024-03-16 15:42:00,200:INFO:                shap: Not installed
2024-03-16 15:42:00,200:INFO:           interpret: Not installed
2024-03-16 15:42:00,200:INFO:                umap: Not installed
2024-03-16 15:42:00,201:INFO:     ydata_profiling: Not installed
2024-03-16 15:42:00,201:INFO:  explainerdashboard: Not installed
2024-03-16 15:42:00,201:INFO:             autoviz: Not installed
2024-03-16 15:42:00,201:INFO:           fairlearn: Not installed
2024-03-16 15:42:00,201:INFO:          deepchecks: Not installed
2024-03-16 15:42:00,201:INFO:             xgboost: 2.0.3
2024-03-16 15:42:00,201:INFO:            catboost: Not installed
2024-03-16 15:42:00,202:INFO:              kmodes: Not installed
2024-03-16 15:42:00,202:INFO:             mlxtend: Not installed
2024-03-16 15:42:00,202:INFO:       statsforecast: Not installed
2024-03-16 15:42:00,202:INFO:        tune_sklearn: Not installed
2024-03-16 15:42:00,202:INFO:                 ray: Not installed
2024-03-16 15:42:00,202:INFO:            hyperopt: Not installed
2024-03-16 15:42:00,202:INFO:              optuna: Not installed
2024-03-16 15:42:00,202:INFO:               skopt: Not installed
2024-03-16 15:42:00,202:INFO:              mlflow: 2.11.1
2024-03-16 15:42:00,203:INFO:              gradio: Not installed
2024-03-16 15:42:00,203:INFO:             fastapi: Not installed
2024-03-16 15:42:00,203:INFO:             uvicorn: Not installed
2024-03-16 15:42:00,203:INFO:              m2cgen: Not installed
2024-03-16 15:42:00,203:INFO:           evidently: Not installed
2024-03-16 15:42:00,203:INFO:               fugue: Not installed
2024-03-16 15:42:00,203:INFO:           streamlit: Not installed
2024-03-16 15:42:00,203:INFO:             prophet: Not installed
2024-03-16 15:42:00,203:INFO:None
2024-03-16 15:42:00,204:INFO:Set up data.
2024-03-16 15:42:00,224:INFO:Set up folding strategy.
2024-03-16 15:42:00,225:INFO:Set up train/test split.
2024-03-16 15:42:00,251:INFO:Set up index.
2024-03-16 15:42:00,252:INFO:Assigning column types.
2024-03-16 15:42:00,269:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 15:42:00,270:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,289:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,462:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,466:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,472:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,610:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,613:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 15:42:00,619:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,624:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,754:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,760:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,871:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:00,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:00,875:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 15:42:00,885:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:00,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,027:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,287:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,292:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 15:42:01,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,512:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 15:42:01,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,795:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:42:01,925:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:01,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:01,928:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 15:42:02,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,186:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,192:INFO:Preparing preprocessing pipeline...
2024-03-16 15:42:02,192:INFO:Set up simple imputation.
2024-03-16 15:42:02,193:INFO:Set up column name cleaning.
2024-03-16 15:42:02,235:INFO:Finished creating preprocessing pipeline.
2024-03-16 15:42:02,244:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:42:02,245:INFO:Creating final display dataframe.
2024-03-16 15:42:02,378:INFO:Setup _display_container:                     Description             Value
0                    Session id              3488
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 23)
4        Transformed data shape        (1859, 23)
5   Transformed train set shape        (1301, 23)
6    Transformed test set shape         (558, 23)
7              Numeric features                22
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              a07e
2024-03-16 15:42:02,587:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,751:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:42:02,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:42:02,756:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 15:42:02,756:INFO:Logging experiment in loggers
2024-03-16 15:42:03,294:INFO:SubProcess save_model() called ==================================
2024-03-16 15:42:03,353:INFO:Initializing save_model()
2024-03-16 15:42:03,354:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpv9silkzd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 15:42:03,354:INFO:Adding model into prep_pipe
2024-03-16 15:42:03,354:WARNING:Only Model saved as it was a pipeline.
2024-03-16 15:42:03,368:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpv9silkzd\Transformation Pipeline.pkl saved in current working directory
2024-03-16 15:42:03,393:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:42:03,393:INFO:save_model() successfully completed......................................
2024-03-16 15:42:03,597:INFO:SubProcess save_model() end ==================================
2024-03-16 15:42:03,613:INFO:setup() successfully completed in 4.71s...............
2024-03-16 15:42:03,613:INFO:Initializing compare_models()
2024-03-16 15:42:03,614:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 15:42:03,614:INFO:Checking exceptions
2024-03-16 15:42:03,618:INFO:Preparing display monitor
2024-03-16 15:42:03,667:INFO:Initializing Linear Regression
2024-03-16 15:42:03,667:INFO:Total runtime is 1.0776519775390626e-05 minutes
2024-03-16 15:42:03,673:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:03,674:INFO:Initializing create_model()
2024-03-16 15:42:03,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:03,675:INFO:Checking exceptions
2024-03-16 15:42:03,675:INFO:Importing libraries
2024-03-16 15:42:03,675:INFO:Copying training dataset
2024-03-16 15:42:03,692:INFO:Defining folds
2024-03-16 15:42:03,692:INFO:Declaring metric variables
2024-03-16 15:42:03,699:INFO:Importing untrained model
2024-03-16 15:42:03,705:INFO:Linear Regression Imported successfully
2024-03-16 15:42:03,732:INFO:Starting cross validation
2024-03-16 15:42:03,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:23,667:INFO:Calculating mean and std
2024-03-16 15:42:23,669:INFO:Creating metrics dataframe
2024-03-16 15:42:23,673:INFO:Uploading results into container
2024-03-16 15:42:23,675:INFO:Uploading model into container now
2024-03-16 15:42:23,676:INFO:_master_model_container: 1
2024-03-16 15:42:23,677:INFO:_display_container: 2
2024-03-16 15:42:23,677:INFO:LinearRegression(n_jobs=-1)
2024-03-16 15:42:23,678:INFO:create_model() successfully completed......................................
2024-03-16 15:42:23,856:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:23,857:INFO:Creating metrics dataframe
2024-03-16 15:42:23,876:INFO:Initializing Lasso Regression
2024-03-16 15:42:23,877:INFO:Total runtime is 0.3368278384208679 minutes
2024-03-16 15:42:23,883:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:23,883:INFO:Initializing create_model()
2024-03-16 15:42:23,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:23,884:INFO:Checking exceptions
2024-03-16 15:42:23,884:INFO:Importing libraries
2024-03-16 15:42:23,884:INFO:Copying training dataset
2024-03-16 15:42:23,901:INFO:Defining folds
2024-03-16 15:42:23,901:INFO:Declaring metric variables
2024-03-16 15:42:23,909:INFO:Importing untrained model
2024-03-16 15:42:23,919:INFO:Lasso Regression Imported successfully
2024-03-16 15:42:23,936:INFO:Starting cross validation
2024-03-16 15:42:23,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:29,881:INFO:Calculating mean and std
2024-03-16 15:42:29,882:INFO:Creating metrics dataframe
2024-03-16 15:42:29,885:INFO:Uploading results into container
2024-03-16 15:42:29,885:INFO:Uploading model into container now
2024-03-16 15:42:29,886:INFO:_master_model_container: 2
2024-03-16 15:42:29,886:INFO:_display_container: 2
2024-03-16 15:42:29,886:INFO:Lasso(random_state=3488)
2024-03-16 15:42:29,887:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,067:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,068:INFO:Creating metrics dataframe
2024-03-16 15:42:30,083:INFO:Initializing Ridge Regression
2024-03-16 15:42:30,083:INFO:Total runtime is 0.44026156266530353 minutes
2024-03-16 15:42:30,090:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,090:INFO:Initializing create_model()
2024-03-16 15:42:30,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,091:INFO:Checking exceptions
2024-03-16 15:42:30,091:INFO:Importing libraries
2024-03-16 15:42:30,091:INFO:Copying training dataset
2024-03-16 15:42:30,104:INFO:Defining folds
2024-03-16 15:42:30,104:INFO:Declaring metric variables
2024-03-16 15:42:30,109:INFO:Importing untrained model
2024-03-16 15:42:30,116:INFO:Ridge Regression Imported successfully
2024-03-16 15:42:30,130:INFO:Starting cross validation
2024-03-16 15:42:30,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:30,206:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.32874e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,207:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.38868e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,216:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.90222e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,230:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.77128e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,245:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.24534e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,259:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.82731e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,273:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.42383e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,287:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.80576e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,298:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.30941e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,310:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.48616e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:42:30,327:INFO:Calculating mean and std
2024-03-16 15:42:30,329:INFO:Creating metrics dataframe
2024-03-16 15:42:30,332:INFO:Uploading results into container
2024-03-16 15:42:30,333:INFO:Uploading model into container now
2024-03-16 15:42:30,334:INFO:_master_model_container: 3
2024-03-16 15:42:30,334:INFO:_display_container: 2
2024-03-16 15:42:30,335:INFO:Ridge(random_state=3488)
2024-03-16 15:42:30,335:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,512:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,512:INFO:Creating metrics dataframe
2024-03-16 15:42:30,525:INFO:Initializing Elastic Net
2024-03-16 15:42:30,525:INFO:Total runtime is 0.4476303776105245 minutes
2024-03-16 15:42:30,533:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,534:INFO:Initializing create_model()
2024-03-16 15:42:30,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,534:INFO:Checking exceptions
2024-03-16 15:42:30,534:INFO:Importing libraries
2024-03-16 15:42:30,534:INFO:Copying training dataset
2024-03-16 15:42:30,551:INFO:Defining folds
2024-03-16 15:42:30,552:INFO:Declaring metric variables
2024-03-16 15:42:30,560:INFO:Importing untrained model
2024-03-16 15:42:30,566:INFO:Elastic Net Imported successfully
2024-03-16 15:42:30,580:INFO:Starting cross validation
2024-03-16 15:42:30,582:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:30,780:INFO:Calculating mean and std
2024-03-16 15:42:30,782:INFO:Creating metrics dataframe
2024-03-16 15:42:30,785:INFO:Uploading results into container
2024-03-16 15:42:30,786:INFO:Uploading model into container now
2024-03-16 15:42:30,787:INFO:_master_model_container: 4
2024-03-16 15:42:30,787:INFO:_display_container: 2
2024-03-16 15:42:30,788:INFO:ElasticNet(random_state=3488)
2024-03-16 15:42:30,788:INFO:create_model() successfully completed......................................
2024-03-16 15:42:30,937:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:30,938:INFO:Creating metrics dataframe
2024-03-16 15:42:30,952:INFO:Initializing Least Angle Regression
2024-03-16 15:42:30,952:INFO:Total runtime is 0.45474464893341066 minutes
2024-03-16 15:42:30,958:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:30,959:INFO:Initializing create_model()
2024-03-16 15:42:30,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:30,959:INFO:Checking exceptions
2024-03-16 15:42:30,959:INFO:Importing libraries
2024-03-16 15:42:30,959:INFO:Copying training dataset
2024-03-16 15:42:30,969:INFO:Defining folds
2024-03-16 15:42:30,969:INFO:Declaring metric variables
2024-03-16 15:42:30,975:INFO:Importing untrained model
2024-03-16 15:42:30,981:INFO:Least Angle Regression Imported successfully
2024-03-16 15:42:30,993:INFO:Starting cross validation
2024-03-16 15:42:30,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,156:INFO:Calculating mean and std
2024-03-16 15:42:31,158:INFO:Creating metrics dataframe
2024-03-16 15:42:31,161:INFO:Uploading results into container
2024-03-16 15:42:31,161:INFO:Uploading model into container now
2024-03-16 15:42:31,162:INFO:_master_model_container: 5
2024-03-16 15:42:31,162:INFO:_display_container: 2
2024-03-16 15:42:31,162:INFO:Lars(random_state=3488)
2024-03-16 15:42:31,163:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,297:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,297:INFO:Creating metrics dataframe
2024-03-16 15:42:31,307:INFO:Initializing Lasso Least Angle Regression
2024-03-16 15:42:31,307:INFO:Total runtime is 0.4606722036997477 minutes
2024-03-16 15:42:31,314:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,314:INFO:Initializing create_model()
2024-03-16 15:42:31,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,314:INFO:Checking exceptions
2024-03-16 15:42:31,315:INFO:Importing libraries
2024-03-16 15:42:31,315:INFO:Copying training dataset
2024-03-16 15:42:31,325:INFO:Defining folds
2024-03-16 15:42:31,325:INFO:Declaring metric variables
2024-03-16 15:42:31,331:INFO:Importing untrained model
2024-03-16 15:42:31,335:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 15:42:31,346:INFO:Starting cross validation
2024-03-16 15:42:31,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,494:INFO:Calculating mean and std
2024-03-16 15:42:31,495:INFO:Creating metrics dataframe
2024-03-16 15:42:31,499:INFO:Uploading results into container
2024-03-16 15:42:31,499:INFO:Uploading model into container now
2024-03-16 15:42:31,500:INFO:_master_model_container: 6
2024-03-16 15:42:31,501:INFO:_display_container: 2
2024-03-16 15:42:31,501:INFO:LassoLars(random_state=3488)
2024-03-16 15:42:31,502:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,648:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,648:INFO:Creating metrics dataframe
2024-03-16 15:42:31,659:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 15:42:31,660:INFO:Total runtime is 0.4665589928627014 minutes
2024-03-16 15:42:31,665:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,665:INFO:Initializing create_model()
2024-03-16 15:42:31,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,665:INFO:Checking exceptions
2024-03-16 15:42:31,666:INFO:Importing libraries
2024-03-16 15:42:31,666:INFO:Copying training dataset
2024-03-16 15:42:31,678:INFO:Defining folds
2024-03-16 15:42:31,678:INFO:Declaring metric variables
2024-03-16 15:42:31,683:INFO:Importing untrained model
2024-03-16 15:42:31,689:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 15:42:31,701:INFO:Starting cross validation
2024-03-16 15:42:31,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:31,838:INFO:Calculating mean and std
2024-03-16 15:42:31,840:INFO:Creating metrics dataframe
2024-03-16 15:42:31,843:INFO:Uploading results into container
2024-03-16 15:42:31,843:INFO:Uploading model into container now
2024-03-16 15:42:31,844:INFO:_master_model_container: 7
2024-03-16 15:42:31,844:INFO:_display_container: 2
2024-03-16 15:42:31,844:INFO:OrthogonalMatchingPursuit()
2024-03-16 15:42:31,844:INFO:create_model() successfully completed......................................
2024-03-16 15:42:31,972:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:31,972:INFO:Creating metrics dataframe
2024-03-16 15:42:31,984:INFO:Initializing Bayesian Ridge
2024-03-16 15:42:31,984:INFO:Total runtime is 0.4719486594200134 minutes
2024-03-16 15:42:31,989:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:31,989:INFO:Initializing create_model()
2024-03-16 15:42:31,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:31,989:INFO:Checking exceptions
2024-03-16 15:42:31,989:INFO:Importing libraries
2024-03-16 15:42:31,990:INFO:Copying training dataset
2024-03-16 15:42:32,002:INFO:Defining folds
2024-03-16 15:42:32,002:INFO:Declaring metric variables
2024-03-16 15:42:32,007:INFO:Importing untrained model
2024-03-16 15:42:32,013:INFO:Bayesian Ridge Imported successfully
2024-03-16 15:42:32,023:INFO:Starting cross validation
2024-03-16 15:42:32,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,175:INFO:Calculating mean and std
2024-03-16 15:42:32,177:INFO:Creating metrics dataframe
2024-03-16 15:42:32,180:INFO:Uploading results into container
2024-03-16 15:42:32,180:INFO:Uploading model into container now
2024-03-16 15:42:32,181:INFO:_master_model_container: 8
2024-03-16 15:42:32,181:INFO:_display_container: 2
2024-03-16 15:42:32,181:INFO:BayesianRidge()
2024-03-16 15:42:32,181:INFO:create_model() successfully completed......................................
2024-03-16 15:42:32,324:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:32,325:INFO:Creating metrics dataframe
2024-03-16 15:42:32,339:INFO:Initializing Passive Aggressive Regressor
2024-03-16 15:42:32,340:INFO:Total runtime is 0.4778779864311218 minutes
2024-03-16 15:42:32,347:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:32,347:INFO:Initializing create_model()
2024-03-16 15:42:32,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:32,348:INFO:Checking exceptions
2024-03-16 15:42:32,348:INFO:Importing libraries
2024-03-16 15:42:32,348:INFO:Copying training dataset
2024-03-16 15:42:32,359:INFO:Defining folds
2024-03-16 15:42:32,359:INFO:Declaring metric variables
2024-03-16 15:42:32,366:INFO:Importing untrained model
2024-03-16 15:42:32,372:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 15:42:32,387:INFO:Starting cross validation
2024-03-16 15:42:32,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,599:INFO:Calculating mean and std
2024-03-16 15:42:32,600:INFO:Creating metrics dataframe
2024-03-16 15:42:32,603:INFO:Uploading results into container
2024-03-16 15:42:32,604:INFO:Uploading model into container now
2024-03-16 15:42:32,605:INFO:_master_model_container: 9
2024-03-16 15:42:32,606:INFO:_display_container: 2
2024-03-16 15:42:32,606:INFO:PassiveAggressiveRegressor(random_state=3488)
2024-03-16 15:42:32,606:INFO:create_model() successfully completed......................................
2024-03-16 15:42:32,745:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:32,746:INFO:Creating metrics dataframe
2024-03-16 15:42:32,757:INFO:Initializing Huber Regressor
2024-03-16 15:42:32,758:INFO:Total runtime is 0.4848565300305684 minutes
2024-03-16 15:42:32,763:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:32,763:INFO:Initializing create_model()
2024-03-16 15:42:32,763:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:32,763:INFO:Checking exceptions
2024-03-16 15:42:32,764:INFO:Importing libraries
2024-03-16 15:42:32,764:INFO:Copying training dataset
2024-03-16 15:42:32,776:INFO:Defining folds
2024-03-16 15:42:32,776:INFO:Declaring metric variables
2024-03-16 15:42:32,781:INFO:Importing untrained model
2024-03-16 15:42:32,786:INFO:Huber Regressor Imported successfully
2024-03-16 15:42:32,797:INFO:Starting cross validation
2024-03-16 15:42:32,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:32,970:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:32,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,015:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,017:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,032:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,036:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,057:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,071:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,087:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,101:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:42:33,117:INFO:Calculating mean and std
2024-03-16 15:42:33,119:INFO:Creating metrics dataframe
2024-03-16 15:42:33,123:INFO:Uploading results into container
2024-03-16 15:42:33,124:INFO:Uploading model into container now
2024-03-16 15:42:33,125:INFO:_master_model_container: 10
2024-03-16 15:42:33,125:INFO:_display_container: 2
2024-03-16 15:42:33,126:INFO:HuberRegressor()
2024-03-16 15:42:33,126:INFO:create_model() successfully completed......................................
2024-03-16 15:42:33,278:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:33,279:INFO:Creating metrics dataframe
2024-03-16 15:42:33,295:INFO:Initializing K Neighbors Regressor
2024-03-16 15:42:33,295:INFO:Total runtime is 0.4938077886899312 minutes
2024-03-16 15:42:33,301:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:33,301:INFO:Initializing create_model()
2024-03-16 15:42:33,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:33,301:INFO:Checking exceptions
2024-03-16 15:42:33,301:INFO:Importing libraries
2024-03-16 15:42:33,301:INFO:Copying training dataset
2024-03-16 15:42:33,313:INFO:Defining folds
2024-03-16 15:42:33,313:INFO:Declaring metric variables
2024-03-16 15:42:33,319:INFO:Importing untrained model
2024-03-16 15:42:33,325:INFO:K Neighbors Regressor Imported successfully
2024-03-16 15:42:33,344:INFO:Starting cross validation
2024-03-16 15:42:33,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:33,943:INFO:Calculating mean and std
2024-03-16 15:42:33,944:INFO:Creating metrics dataframe
2024-03-16 15:42:33,948:INFO:Uploading results into container
2024-03-16 15:42:33,948:INFO:Uploading model into container now
2024-03-16 15:42:33,949:INFO:_master_model_container: 11
2024-03-16 15:42:33,949:INFO:_display_container: 2
2024-03-16 15:42:33,950:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 15:42:33,950:INFO:create_model() successfully completed......................................
2024-03-16 15:42:34,093:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:34,093:INFO:Creating metrics dataframe
2024-03-16 15:42:34,106:INFO:Initializing Decision Tree Regressor
2024-03-16 15:42:34,107:INFO:Total runtime is 0.5073339859644571 minutes
2024-03-16 15:42:34,112:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:34,113:INFO:Initializing create_model()
2024-03-16 15:42:34,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:34,114:INFO:Checking exceptions
2024-03-16 15:42:34,114:INFO:Importing libraries
2024-03-16 15:42:34,114:INFO:Copying training dataset
2024-03-16 15:42:34,126:INFO:Defining folds
2024-03-16 15:42:34,127:INFO:Declaring metric variables
2024-03-16 15:42:34,133:INFO:Importing untrained model
2024-03-16 15:42:34,138:INFO:Decision Tree Regressor Imported successfully
2024-03-16 15:42:34,151:INFO:Starting cross validation
2024-03-16 15:42:34,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:34,366:INFO:Calculating mean and std
2024-03-16 15:42:34,368:INFO:Creating metrics dataframe
2024-03-16 15:42:34,371:INFO:Uploading results into container
2024-03-16 15:42:34,372:INFO:Uploading model into container now
2024-03-16 15:42:34,373:INFO:_master_model_container: 12
2024-03-16 15:42:34,373:INFO:_display_container: 2
2024-03-16 15:42:34,375:INFO:DecisionTreeRegressor(random_state=3488)
2024-03-16 15:42:34,376:INFO:create_model() successfully completed......................................
2024-03-16 15:42:34,520:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:34,520:INFO:Creating metrics dataframe
2024-03-16 15:42:34,534:INFO:Initializing Random Forest Regressor
2024-03-16 15:42:34,534:INFO:Total runtime is 0.5144459565480549 minutes
2024-03-16 15:42:34,539:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:34,539:INFO:Initializing create_model()
2024-03-16 15:42:34,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:34,540:INFO:Checking exceptions
2024-03-16 15:42:34,540:INFO:Importing libraries
2024-03-16 15:42:34,540:INFO:Copying training dataset
2024-03-16 15:42:34,552:INFO:Defining folds
2024-03-16 15:42:34,552:INFO:Declaring metric variables
2024-03-16 15:42:34,559:INFO:Importing untrained model
2024-03-16 15:42:34,566:INFO:Random Forest Regressor Imported successfully
2024-03-16 15:42:34,579:INFO:Starting cross validation
2024-03-16 15:42:34,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:39,789:INFO:Calculating mean and std
2024-03-16 15:42:39,795:INFO:Creating metrics dataframe
2024-03-16 15:42:39,801:INFO:Uploading results into container
2024-03-16 15:42:39,802:INFO:Uploading model into container now
2024-03-16 15:42:39,803:INFO:_master_model_container: 13
2024-03-16 15:42:39,803:INFO:_display_container: 2
2024-03-16 15:42:39,805:INFO:RandomForestRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:39,805:INFO:create_model() successfully completed......................................
2024-03-16 15:42:39,996:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:39,996:INFO:Creating metrics dataframe
2024-03-16 15:42:40,017:INFO:Initializing Extra Trees Regressor
2024-03-16 15:42:40,017:INFO:Total runtime is 0.6058435320854186 minutes
2024-03-16 15:42:40,026:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:40,027:INFO:Initializing create_model()
2024-03-16 15:42:40,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:40,028:INFO:Checking exceptions
2024-03-16 15:42:40,028:INFO:Importing libraries
2024-03-16 15:42:40,028:INFO:Copying training dataset
2024-03-16 15:42:40,042:INFO:Defining folds
2024-03-16 15:42:40,043:INFO:Declaring metric variables
2024-03-16 15:42:40,049:INFO:Importing untrained model
2024-03-16 15:42:40,057:INFO:Extra Trees Regressor Imported successfully
2024-03-16 15:42:40,075:INFO:Starting cross validation
2024-03-16 15:42:40,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:43,204:INFO:Calculating mean and std
2024-03-16 15:42:43,209:INFO:Creating metrics dataframe
2024-03-16 15:42:43,216:INFO:Uploading results into container
2024-03-16 15:42:43,217:INFO:Uploading model into container now
2024-03-16 15:42:43,218:INFO:_master_model_container: 14
2024-03-16 15:42:43,218:INFO:_display_container: 2
2024-03-16 15:42:43,220:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:43,220:INFO:create_model() successfully completed......................................
2024-03-16 15:42:43,427:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:43,427:INFO:Creating metrics dataframe
2024-03-16 15:42:43,448:INFO:Initializing AdaBoost Regressor
2024-03-16 15:42:43,449:INFO:Total runtime is 0.6630326072374979 minutes
2024-03-16 15:42:43,456:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:43,457:INFO:Initializing create_model()
2024-03-16 15:42:43,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:43,458:INFO:Checking exceptions
2024-03-16 15:42:43,458:INFO:Importing libraries
2024-03-16 15:42:43,458:INFO:Copying training dataset
2024-03-16 15:42:43,480:INFO:Defining folds
2024-03-16 15:42:43,480:INFO:Declaring metric variables
2024-03-16 15:42:43,491:INFO:Importing untrained model
2024-03-16 15:42:43,499:INFO:AdaBoost Regressor Imported successfully
2024-03-16 15:42:43,515:INFO:Starting cross validation
2024-03-16 15:42:43,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:44,345:INFO:Calculating mean and std
2024-03-16 15:42:44,348:INFO:Creating metrics dataframe
2024-03-16 15:42:44,351:INFO:Uploading results into container
2024-03-16 15:42:44,352:INFO:Uploading model into container now
2024-03-16 15:42:44,353:INFO:_master_model_container: 15
2024-03-16 15:42:44,354:INFO:_display_container: 2
2024-03-16 15:42:44,354:INFO:AdaBoostRegressor(random_state=3488)
2024-03-16 15:42:44,355:INFO:create_model() successfully completed......................................
2024-03-16 15:42:44,521:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:44,521:INFO:Creating metrics dataframe
2024-03-16 15:42:44,539:INFO:Initializing Gradient Boosting Regressor
2024-03-16 15:42:44,539:INFO:Total runtime is 0.681202220916748 minutes
2024-03-16 15:42:44,544:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:44,545:INFO:Initializing create_model()
2024-03-16 15:42:44,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:44,545:INFO:Checking exceptions
2024-03-16 15:42:44,545:INFO:Importing libraries
2024-03-16 15:42:44,545:INFO:Copying training dataset
2024-03-16 15:42:44,561:INFO:Defining folds
2024-03-16 15:42:44,561:INFO:Declaring metric variables
2024-03-16 15:42:44,567:INFO:Importing untrained model
2024-03-16 15:42:44,572:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:42:44,585:INFO:Starting cross validation
2024-03-16 15:42:44,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:46,420:INFO:Calculating mean and std
2024-03-16 15:42:46,426:INFO:Creating metrics dataframe
2024-03-16 15:42:46,432:INFO:Uploading results into container
2024-03-16 15:42:46,433:INFO:Uploading model into container now
2024-03-16 15:42:46,435:INFO:_master_model_container: 16
2024-03-16 15:42:46,435:INFO:_display_container: 2
2024-03-16 15:42:46,438:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:42:46,439:INFO:create_model() successfully completed......................................
2024-03-16 15:42:46,704:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:46,704:INFO:Creating metrics dataframe
2024-03-16 15:42:46,735:INFO:Initializing Extreme Gradient Boosting
2024-03-16 15:42:46,736:INFO:Total runtime is 0.7178216457366943 minutes
2024-03-16 15:42:46,747:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:46,748:INFO:Initializing create_model()
2024-03-16 15:42:46,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:46,749:INFO:Checking exceptions
2024-03-16 15:42:46,749:INFO:Importing libraries
2024-03-16 15:42:46,749:INFO:Copying training dataset
2024-03-16 15:42:46,772:INFO:Defining folds
2024-03-16 15:42:46,772:INFO:Declaring metric variables
2024-03-16 15:42:46,783:INFO:Importing untrained model
2024-03-16 15:42:46,793:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 15:42:46,810:INFO:Starting cross validation
2024-03-16 15:42:46,814:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:49,906:INFO:Calculating mean and std
2024-03-16 15:42:49,910:INFO:Creating metrics dataframe
2024-03-16 15:42:49,918:INFO:Uploading results into container
2024-03-16 15:42:49,920:INFO:Uploading model into container now
2024-03-16 15:42:49,921:INFO:_master_model_container: 17
2024-03-16 15:42:49,921:INFO:_display_container: 2
2024-03-16 15:42:49,926:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3488, ...)
2024-03-16 15:42:49,926:INFO:create_model() successfully completed......................................
2024-03-16 15:42:50,144:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:50,145:INFO:Creating metrics dataframe
2024-03-16 15:42:50,166:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 15:42:50,166:INFO:Total runtime is 0.7749788999557494 minutes
2024-03-16 15:42:50,173:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:50,174:INFO:Initializing create_model()
2024-03-16 15:42:50,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:50,175:INFO:Checking exceptions
2024-03-16 15:42:50,175:INFO:Importing libraries
2024-03-16 15:42:50,175:INFO:Copying training dataset
2024-03-16 15:42:50,190:INFO:Defining folds
2024-03-16 15:42:50,191:INFO:Declaring metric variables
2024-03-16 15:42:50,200:INFO:Importing untrained model
2024-03-16 15:42:50,209:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 15:42:50,228:INFO:Starting cross validation
2024-03-16 15:42:50,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:55,773:INFO:Calculating mean and std
2024-03-16 15:42:55,778:INFO:Creating metrics dataframe
2024-03-16 15:42:55,786:INFO:Uploading results into container
2024-03-16 15:42:55,788:INFO:Uploading model into container now
2024-03-16 15:42:55,789:INFO:_master_model_container: 18
2024-03-16 15:42:55,789:INFO:_display_container: 2
2024-03-16 15:42:55,791:INFO:LGBMRegressor(n_jobs=-1, random_state=3488)
2024-03-16 15:42:55,791:INFO:create_model() successfully completed......................................
2024-03-16 15:42:56,003:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:56,004:INFO:Creating metrics dataframe
2024-03-16 15:42:56,026:INFO:Initializing Dummy Regressor
2024-03-16 15:42:56,026:INFO:Total runtime is 0.872644829750061 minutes
2024-03-16 15:42:56,033:INFO:SubProcess create_model() called ==================================
2024-03-16 15:42:56,034:INFO:Initializing create_model()
2024-03-16 15:42:56,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B827026C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:56,034:INFO:Checking exceptions
2024-03-16 15:42:56,035:INFO:Importing libraries
2024-03-16 15:42:56,035:INFO:Copying training dataset
2024-03-16 15:42:56,050:INFO:Defining folds
2024-03-16 15:42:56,050:INFO:Declaring metric variables
2024-03-16 15:42:56,059:INFO:Importing untrained model
2024-03-16 15:42:56,067:INFO:Dummy Regressor Imported successfully
2024-03-16 15:42:56,083:INFO:Starting cross validation
2024-03-16 15:42:56,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:42:56,314:INFO:Calculating mean and std
2024-03-16 15:42:56,317:INFO:Creating metrics dataframe
2024-03-16 15:42:56,324:INFO:Uploading results into container
2024-03-16 15:42:56,325:INFO:Uploading model into container now
2024-03-16 15:42:56,326:INFO:_master_model_container: 19
2024-03-16 15:42:56,326:INFO:_display_container: 2
2024-03-16 15:42:56,327:INFO:DummyRegressor()
2024-03-16 15:42:56,327:INFO:create_model() successfully completed......................................
2024-03-16 15:42:56,496:INFO:SubProcess create_model() end ==================================
2024-03-16 15:42:56,496:INFO:Creating metrics dataframe
2024-03-16 15:42:56,518:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 15:42:56,535:INFO:Initializing create_model()
2024-03-16 15:42:56,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=GradientBoostingRegressor(random_state=3488), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:42:56,536:INFO:Checking exceptions
2024-03-16 15:42:56,539:INFO:Importing libraries
2024-03-16 15:42:56,539:INFO:Copying training dataset
2024-03-16 15:42:56,554:INFO:Defining folds
2024-03-16 15:42:56,554:INFO:Declaring metric variables
2024-03-16 15:42:56,554:INFO:Importing untrained model
2024-03-16 15:42:56,555:INFO:Declaring custom model
2024-03-16 15:42:56,557:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:42:56,559:INFO:Cross validation set to False
2024-03-16 15:42:56,560:INFO:Fitting Model
2024-03-16 15:42:57,182:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:42:57,182:INFO:create_model() successfully completed......................................
2024-03-16 15:42:57,316:INFO:Creating Dashboard logs
2024-03-16 15:42:57,322:INFO:Model: Gradient Boosting Regressor
2024-03-16 15:42:57,369:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3488, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 15:42:57,493:INFO:Initializing predict_model()
2024-03-16 15:42:57,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B82AD96510>, estimator=GradientBoostingRegressor(random_state=3488), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82CEA0B80>)
2024-03-16 15:42:57,493:INFO:Checking exceptions
2024-03-16 15:42:57,493:INFO:Preloading libraries
2024-03-16 15:42:57,636:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 15:42:57,799:WARNING:d:\Code\Anaconda\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-03-16 15:42:58,529:INFO:Creating Dashboard logs
2024-03-16 15:42:58,535:INFO:Model: Bayesian Ridge
2024-03-16 15:42:58,592:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 15:42:58,883:INFO:Creating Dashboard logs
2024-03-16 15:42:58,889:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 15:42:58,934:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 15:42:59,196:INFO:Creating Dashboard logs
2024-03-16 15:42:59,202:INFO:Model: Elastic Net
2024-03-16 15:42:59,251:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3488, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 15:42:59,534:INFO:Creating Dashboard logs
2024-03-16 15:42:59,539:INFO:Model: Lasso Regression
2024-03-16 15:42:59,592:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3488, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 15:42:59,857:INFO:Creating Dashboard logs
2024-03-16 15:42:59,862:INFO:Model: Lasso Least Angle Regression
2024-03-16 15:42:59,913:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3488, 'verbose': False}
2024-03-16 15:43:00,203:INFO:Creating Dashboard logs
2024-03-16 15:43:00,208:INFO:Model: Ridge Regression
2024-03-16 15:43:00,254:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3488, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 15:43:00,492:INFO:Creating Dashboard logs
2024-03-16 15:43:00,497:INFO:Model: Linear Regression
2024-03-16 15:43:00,535:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 15:43:00,771:INFO:Creating Dashboard logs
2024-03-16 15:43:00,778:INFO:Model: Least Angle Regression
2024-03-16 15:43:00,818:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3488, 'verbose': False}
2024-03-16 15:43:01,072:INFO:Creating Dashboard logs
2024-03-16 15:43:01,079:INFO:Model: Huber Regressor
2024-03-16 15:43:01,133:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 15:43:01,423:INFO:Creating Dashboard logs
2024-03-16 15:43:01,432:INFO:Model: Random Forest Regressor
2024-03-16 15:43:01,485:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3488, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:01,828:INFO:Creating Dashboard logs
2024-03-16 15:43:01,833:INFO:Model: Extra Trees Regressor
2024-03-16 15:43:01,888:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3488, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:02,232:INFO:Creating Dashboard logs
2024-03-16 15:43:02,239:INFO:Model: Light Gradient Boosting Machine
2024-03-16 15:43:02,303:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3488, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 15:43:02,655:INFO:Creating Dashboard logs
2024-03-16 15:43:02,663:INFO:Model: Extreme Gradient Boosting
2024-03-16 15:43:02,718:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3488, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 15:43:03,122:INFO:Creating Dashboard logs
2024-03-16 15:43:03,132:INFO:Model: K Neighbors Regressor
2024-03-16 15:43:03,185:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 15:43:03,561:INFO:Creating Dashboard logs
2024-03-16 15:43:03,567:INFO:Model: AdaBoost Regressor
2024-03-16 15:43:03,645:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3488}
2024-03-16 15:43:03,983:INFO:Creating Dashboard logs
2024-03-16 15:43:03,990:INFO:Model: Decision Tree Regressor
2024-03-16 15:43:04,043:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3488, 'splitter': 'best'}
2024-03-16 15:43:04,376:INFO:Creating Dashboard logs
2024-03-16 15:43:04,384:INFO:Model: Dummy Regressor
2024-03-16 15:43:04,445:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 15:43:04,781:INFO:Creating Dashboard logs
2024-03-16 15:43:04,787:INFO:Model: Passive Aggressive Regressor
2024-03-16 15:43:04,835:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3488, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 15:43:05,186:INFO:_master_model_container: 19
2024-03-16 15:43:05,187:INFO:_display_container: 2
2024-03-16 15:43:05,188:INFO:GradientBoostingRegressor(random_state=3488)
2024-03-16 15:43:05,188:INFO:compare_models() successfully completed......................................
2024-03-16 15:43:05,282:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,284:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,286:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,286:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,287:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,289:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,293:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:43:05,305:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,139:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:28,595:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,601:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:28,858:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:28,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,307:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,619:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:29,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:29,752:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,028:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,233:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,238:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,354:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,611:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,849:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,854:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:30,965:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:30,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,175:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,266:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,357:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,447:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,451:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,766:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:31,899:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:31,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,065:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,200:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,547:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,650:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,655:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,784:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:32,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:32,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:33,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.
  with pd.option_context('mode.use_inf_as_na', True):

2024-03-16 15:45:33,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,139:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,271:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,271:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,434:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,642:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,642:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,861:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,953:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:33,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,050:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,050:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,149:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,584:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,584:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:34,999:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,000:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,146:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,147:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,227:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,227:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,301:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,582:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,655:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,656:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,893:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,977:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:35,977:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,053:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,128:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,213:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,213:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,296:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,297:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,460:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,460:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,878:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,878:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:36,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,022:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,167:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,167:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,329:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,473:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,538:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,676:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,676:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,745:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,745:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,913:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:37,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,071:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,071:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,141:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,215:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,293:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,441:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,732:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,733:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:38,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,104:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,104:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,312:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,382:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,383:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,467:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,467:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,556:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,556:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,720:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,720:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,791:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:39,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,151:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,307:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,308:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,393:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,393:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,484:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,485:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,605:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,639:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,741:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,742:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,811:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,892:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,961:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,961:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:40,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,121:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,193:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,330:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,330:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,372:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,373:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,406:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,580:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,580:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,651:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,651:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,733:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,743:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,744:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,781:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,781:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,931:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:41,931:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,100:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,101:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,178:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,179:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,253:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,254:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,298:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,334:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,334:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,529:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,688:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,688:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:42,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,092:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,365:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,431:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,498:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,648:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,794:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,795:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,863:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:43,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,042:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,222:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,222:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,375:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,767:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,767:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,921:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:44,922:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,001:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,072:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,142:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,142:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,208:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,209:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,274:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,274:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,340:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,474:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,474:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,541:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,541:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,600:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,600:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,890:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,962:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:45,963:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,029:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,093:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,333:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,891:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:46,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,266:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,410:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,410:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,604:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,604:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,790:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,790:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:47,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,059:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,059:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,124:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,188:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,188:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,615:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,715:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,715:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:48,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,061:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,134:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,210:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,210:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,289:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,501:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,501:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,774:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,841:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,842:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,912:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:49,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,177:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,177:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,244:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,816:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,816:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:50,987:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,363:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,363:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,602:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,602:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,731:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,732:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:51,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,088:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,088:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,221:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,291:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,292:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,354:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,355:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,426:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,599:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,926:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:52,927:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,302:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,433:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,500:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,565:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,734:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,735:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,951:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:53,952:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,091:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,226:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,226:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,362:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,522:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,597:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,597:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,807:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:54,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,012:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,012:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,202:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,275:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,275:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,513:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,514:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,577:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,712:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,713:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:55,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,056:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,123:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,192:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,256:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,256:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,318:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,385:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,385:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,449:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,726:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,726:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,798:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:56,946:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,080:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,081:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,145:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,146:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,207:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,207:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,327:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,327:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,455:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,519:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,586:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,587:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,662:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,723:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,786:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,787:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,906:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:57,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,046:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,046:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,267:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,401:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,401:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,660:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,727:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,799:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,869:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,870:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:58,942:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,009:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,009:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,083:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,147:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,148:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,352:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,416:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,416:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,487:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,487:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,635:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,773:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,773:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,996:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:45:59,996:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,091:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,092:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,160:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,357:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,481:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,545:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,545:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,614:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,615:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,777:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,777:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:00,943:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,015:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,081:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,082:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,153:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,223:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,223:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,290:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,560:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,833:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,901:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,901:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:01,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,069:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,069:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,150:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,299:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,371:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,371:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,446:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,481:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,482:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,572:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,632:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,717:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,718:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,788:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,861:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,862:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,929:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,929:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,997:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:02,997:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,165:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,165:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,300:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,376:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,443:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,443:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,505:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,625:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,626:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,685:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,746:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,746:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,829:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,829:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,895:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,895:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,958:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:03,958:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,089:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,249:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,328:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,396:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,396:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,477:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,554:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,554:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,623:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,702:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,835:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,902:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,902:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:04,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,041:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,128:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,261:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,333:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,400:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,400:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,463:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,608:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,608:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,678:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,679:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,747:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,873:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,873:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,944:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:05,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,220:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,421:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,570:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,706:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:06,948:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,018:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,086:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,182:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,250:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,315:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,315:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,378:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,442:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,578:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,652:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,652:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,717:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,779:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,779:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,848:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,849:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,914:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,982:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:07,983:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,051:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,120:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,120:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,269:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,270:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,339:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,402:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,402:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,464:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,532:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,532:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,616:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,705:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,776:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,845:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,915:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,916:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:08,986:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,259:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,259:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,436:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,576:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,576:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,644:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,718:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,792:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,859:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,860:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,940:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:09,941:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,016:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,016:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,162:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,239:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,239:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,387:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,520:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,521:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,658:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,719:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,912:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,913:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:10,993:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,184:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,184:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,391:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,392:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,476:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,476:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,552:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,552:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,700:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,701:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,769:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,830:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:11,981:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,045:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,106:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,107:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,228:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,229:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,294:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,295:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,358:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,448:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,663:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,780:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:12,945:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,047:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,169:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,288:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,366:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,438:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,439:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,515:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,515:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,549:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,550:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,786:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,787:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,989:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:13,990:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,073:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,074:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,144:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,144:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,214:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,214:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,282:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,283:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,348:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,419:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,420:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,485:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,486:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,555:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,555:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,694:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,694:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,759:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,760:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,822:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,894:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:14,972:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,047:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,096:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,097:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,129:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,240:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,240:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,414:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,414:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,492:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,493:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,573:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,654:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,737:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,865:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:15,866:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,010:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,011:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,133:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,263:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,369:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,370:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,457:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,537:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,680:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,681:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,754:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,754:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,826:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,826:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:16,920:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,035:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,076:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,113:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,252:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,253:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,338:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,338:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,427:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,497:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,673:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,674:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,749:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:17,955:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,026:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,094:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,159:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,316:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,317:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,380:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,380:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,445:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,506:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,627:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,628:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,690:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,690:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,819:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,953:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:18,954:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,127:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,203:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,272:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,272:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,507:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,594:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,747:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,748:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,835:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,836:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,917:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:19,917:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,000:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,001:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,138:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,245:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,246:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,335:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,336:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,428:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,526:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,607:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,691:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,761:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,761:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,824:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,825:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,888:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,888:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,957:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:20,957:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,030:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,031:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,098:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,276:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,277:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,361:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,361:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,453:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,454:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,527:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,609:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,609:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,710:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,711:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,809:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,967:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:21,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,044:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,117:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,118:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,201:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,201:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,284:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,285:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,434:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,435:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,511:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,588:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,589:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,661:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,808:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,879:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,879:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:22,980:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,060:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,060:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,232:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,233:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,326:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,407:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,490:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,490:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,571:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,572:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,643:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,643:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,709:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,710:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,770:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,831:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,959:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:23,959:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,034:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,035:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,105:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,105:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,170:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,241:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,242:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,311:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,379:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,379:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,458:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,459:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,530:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,598:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,639:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,640:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,677:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,677:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,774:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,775:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,843:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,844:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,908:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:24,971:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,032:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,032:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,101:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,102:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,168:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,260:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,331:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,332:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,408:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,409:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,561:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,716:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,725:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,758:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,797:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,896:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,896:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,975:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:25,976:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,048:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,116:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,116:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,216:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,217:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,325:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,403:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,479:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,480:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,568:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,569:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,666:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,667:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,757:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,834:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,924:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,924:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,967:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:26,968:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,109:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,109:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,265:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,350:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,351:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,423:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,424:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,498:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,672:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,750:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,828:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,828:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,908:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,909:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,978:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:27,979:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,065:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,066:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,140:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,310:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,389:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,389:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,456:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,523:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,525:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,591:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,668:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,738:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,820:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,821:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,904:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,905:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,992:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:28,992:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,079:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,225:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,349:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,349:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,450:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,451:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,531:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,531:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,606:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,686:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,759:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,760:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,839:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,910:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,911:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:29,985:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,057:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,058:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,130:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,131:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,198:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,268:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,269:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,342:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,499:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,582:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,583:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,659:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,810:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,811:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,884:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,885:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:30,949:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,023:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,024:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,099:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,180:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,181:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,258:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,341:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,417:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,418:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,494:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,564:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,565:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,714:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,782:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,783:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,852:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,853:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:31,928:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,002:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,070:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,070:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,132:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,195:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,196:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,264:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,359:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,360:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,429:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,502:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,502:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,574:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,574:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,664:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,803:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,804:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,868:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,869:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,938:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:32,938:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,006:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,006:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,077:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,078:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,152:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,224:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,313:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,314:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,395:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,395:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,472:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,543:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,630:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,630:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,698:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,698:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,765:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,832:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,919:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,988:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:33,988:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,068:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,163:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,257:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,367:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,368:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,469:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,470:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,558:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,558:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,645:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,645:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,736:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,737:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,856:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,857:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,969:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:34,970:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,090:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,199:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,200:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,355:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,356:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,504:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,504:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,636:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,637:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,751:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,752:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,846:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,933:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:35,934:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,003:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,004:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,084:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,158:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,234:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,303:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,304:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,377:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,444:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,517:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,518:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,581:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,649:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,722:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,722:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,801:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,801:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,874:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,875:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,947:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:36,947:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,017:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,085:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,155:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,218:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,218:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,280:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,280:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,364:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,364:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,430:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,430:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,495:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,496:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,566:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:46:37,567:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 15:48:24,897:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\axisgrid.py:118: UserWarning: The figure layout has changed to tight
  self._figure.tight_layout(*args, **kwargs)

2024-03-16 15:59:05,156:INFO:PyCaret RegressionExperiment
2024-03-16 15:59:05,156:INFO:Logging name: reg-default-name
2024-03-16 15:59:05,157:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 15:59:05,157:INFO:version 3.3.0
2024-03-16 15:59:05,157:INFO:Initializing setup()
2024-03-16 15:59:05,158:INFO:self.USI: 7801
2024-03-16 15:59:05,158:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 15:59:05,158:INFO:Checking environment
2024-03-16 15:59:05,158:INFO:python_version: 3.11.5
2024-03-16 15:59:05,159:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 15:59:05,159:INFO:machine: AMD64
2024-03-16 15:59:05,159:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 15:59:05,159:INFO:Memory: svmem(total=34129678336, available=12649742336, percent=62.9, used=21479936000, free=12649742336)
2024-03-16 15:59:05,160:INFO:Physical Core: 6
2024-03-16 15:59:05,160:INFO:Logical Core: 12
2024-03-16 15:59:05,160:INFO:Checking libraries
2024-03-16 15:59:05,160:INFO:System:
2024-03-16 15:59:05,160:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 15:59:05,161:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 15:59:05,161:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 15:59:05,161:INFO:PyCaret required dependencies:
2024-03-16 15:59:05,162:INFO:                 pip: 24.0
2024-03-16 15:59:05,162:INFO:          setuptools: 68.0.0
2024-03-16 15:59:05,162:INFO:             pycaret: 3.3.0
2024-03-16 15:59:05,162:INFO:             IPython: 8.15.0
2024-03-16 15:59:05,162:INFO:          ipywidgets: 8.0.4
2024-03-16 15:59:05,163:INFO:                tqdm: 4.65.0
2024-03-16 15:59:05,163:INFO:               numpy: 1.24.3
2024-03-16 15:59:05,163:INFO:              pandas: 2.0.3
2024-03-16 15:59:05,163:INFO:              jinja2: 3.1.2
2024-03-16 15:59:05,164:INFO:               scipy: 1.11.1
2024-03-16 15:59:05,164:INFO:              joblib: 1.2.0
2024-03-16 15:59:05,164:INFO:             sklearn: 1.3.0
2024-03-16 15:59:05,164:INFO:                pyod: 1.1.3
2024-03-16 15:59:05,164:INFO:            imblearn: 0.10.1
2024-03-16 15:59:05,165:INFO:   category_encoders: 2.6.3
2024-03-16 15:59:05,165:INFO:            lightgbm: 4.3.0
2024-03-16 15:59:05,165:INFO:               numba: 0.57.1
2024-03-16 15:59:05,165:INFO:            requests: 2.31.0
2024-03-16 15:59:05,165:INFO:          matplotlib: 3.7.2
2024-03-16 15:59:05,165:INFO:          scikitplot: 0.3.7
2024-03-16 15:59:05,166:INFO:         yellowbrick: 1.5
2024-03-16 15:59:05,166:INFO:              plotly: 5.9.0
2024-03-16 15:59:05,166:INFO:    plotly-resampler: Not installed
2024-03-16 15:59:05,167:INFO:             kaleido: 0.2.1
2024-03-16 15:59:05,167:INFO:           schemdraw: 0.15
2024-03-16 15:59:05,167:INFO:         statsmodels: 0.14.0
2024-03-16 15:59:05,167:INFO:              sktime: 0.27.0
2024-03-16 15:59:05,167:INFO:               tbats: 1.1.3
2024-03-16 15:59:05,168:INFO:            pmdarima: 2.0.4
2024-03-16 15:59:05,168:INFO:              psutil: 5.9.0
2024-03-16 15:59:05,168:INFO:          markupsafe: 2.1.1
2024-03-16 15:59:05,168:INFO:             pickle5: Not installed
2024-03-16 15:59:05,168:INFO:         cloudpickle: 2.2.1
2024-03-16 15:59:05,168:INFO:         deprecation: 2.1.0
2024-03-16 15:59:05,169:INFO:              xxhash: 2.0.2
2024-03-16 15:59:05,169:INFO:           wurlitzer: Not installed
2024-03-16 15:59:05,169:INFO:PyCaret optional dependencies:
2024-03-16 15:59:05,170:INFO:                shap: Not installed
2024-03-16 15:59:05,170:INFO:           interpret: Not installed
2024-03-16 15:59:05,170:INFO:                umap: Not installed
2024-03-16 15:59:05,170:INFO:     ydata_profiling: Not installed
2024-03-16 15:59:05,171:INFO:  explainerdashboard: Not installed
2024-03-16 15:59:05,171:INFO:             autoviz: Not installed
2024-03-16 15:59:05,171:INFO:           fairlearn: Not installed
2024-03-16 15:59:05,171:INFO:          deepchecks: Not installed
2024-03-16 15:59:05,171:INFO:             xgboost: 2.0.3
2024-03-16 15:59:05,172:INFO:            catboost: Not installed
2024-03-16 15:59:05,172:INFO:              kmodes: Not installed
2024-03-16 15:59:05,172:INFO:             mlxtend: Not installed
2024-03-16 15:59:05,172:INFO:       statsforecast: Not installed
2024-03-16 15:59:05,172:INFO:        tune_sklearn: Not installed
2024-03-16 15:59:05,173:INFO:                 ray: Not installed
2024-03-16 15:59:05,173:INFO:            hyperopt: Not installed
2024-03-16 15:59:05,173:INFO:              optuna: Not installed
2024-03-16 15:59:05,173:INFO:               skopt: Not installed
2024-03-16 15:59:05,174:INFO:              mlflow: 2.11.1
2024-03-16 15:59:05,174:INFO:              gradio: Not installed
2024-03-16 15:59:05,174:INFO:             fastapi: Not installed
2024-03-16 15:59:05,174:INFO:             uvicorn: Not installed
2024-03-16 15:59:05,175:INFO:              m2cgen: Not installed
2024-03-16 15:59:05,175:INFO:           evidently: Not installed
2024-03-16 15:59:05,175:INFO:               fugue: Not installed
2024-03-16 15:59:05,176:INFO:           streamlit: Not installed
2024-03-16 15:59:05,176:INFO:             prophet: Not installed
2024-03-16 15:59:05,176:INFO:None
2024-03-16 15:59:05,177:INFO:Set up data.
2024-03-16 15:59:05,204:INFO:Set up folding strategy.
2024-03-16 15:59:05,205:INFO:Set up train/test split.
2024-03-16 15:59:05,229:INFO:Set up index.
2024-03-16 15:59:05,230:INFO:Assigning column types.
2024-03-16 15:59:05,263:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 15:59:05,264:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,283:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,546:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,551:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,561:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,571:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,739:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,740:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,744:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 15:59:05,751:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,757:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,905:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:05,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:05,914:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 15:59:05,920:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,057:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,057:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,062:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 15:59:06,073:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,213:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,388:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,392:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 15:59:06,494:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,562:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,714:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,802:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:06,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:06,807:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 15:59:06,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:06,996:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,102:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 15:59:07,178:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,187:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 15:59:07,563:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,822:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:07,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:07,830:INFO:Preparing preprocessing pipeline...
2024-03-16 15:59:07,830:INFO:Set up simple imputation.
2024-03-16 15:59:07,832:INFO:Set up column name cleaning.
2024-03-16 15:59:07,922:INFO:Finished creating preprocessing pipeline.
2024-03-16 15:59:07,932:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:59:07,933:INFO:Creating final display dataframe.
2024-03-16 15:59:08,180:INFO:Setup _display_container:                     Description             Value
0                    Session id              4281
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 37)
4        Transformed data shape        (1859, 37)
5   Transformed train set shape        (1301, 37)
6    Transformed test set shape         (558, 37)
7              Numeric features                36
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              7801
2024-03-16 15:59:08,355:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:08,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:08,507:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 15:59:08,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 15:59:08,511:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 15:59:08,512:INFO:Logging experiment in loggers
2024-03-16 15:59:08,581:INFO:SubProcess save_model() called ==================================
2024-03-16 15:59:08,595:INFO:Initializing save_model()
2024-03-16 15:59:08,595:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpwpkl8y_h\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 15:59:08,595:INFO:Adding model into prep_pipe
2024-03-16 15:59:08,595:WARNING:Only Model saved as it was a pipeline.
2024-03-16 15:59:08,598:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpwpkl8y_h\Transformation Pipeline.pkl saved in current working directory
2024-03-16 15:59:08,604:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay', 'BNS...
                                             'NORMNTN_arr_delay',
                                             'WKFLDWG_dep_delay',
                                             'WKFLDWG_stay',
                                             'WKFLDWG_scheduled_stay',
                                             'WKFLDWG_arr_delay', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 15:59:08,604:INFO:save_model() successfully completed......................................
2024-03-16 15:59:10,549:INFO:SubProcess save_model() end ==================================
2024-03-16 15:59:10,559:INFO:setup() successfully completed in 3.36s...............
2024-03-16 15:59:10,559:INFO:Initializing compare_models()
2024-03-16 15:59:10,560:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 15:59:10,560:INFO:Checking exceptions
2024-03-16 15:59:10,566:INFO:Preparing display monitor
2024-03-16 15:59:10,599:INFO:Initializing Linear Regression
2024-03-16 15:59:10,599:INFO:Total runtime is 0.0 minutes
2024-03-16 15:59:10,603:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:10,604:INFO:Initializing create_model()
2024-03-16 15:59:10,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:10,604:INFO:Checking exceptions
2024-03-16 15:59:10,604:INFO:Importing libraries
2024-03-16 15:59:10,604:INFO:Copying training dataset
2024-03-16 15:59:10,620:INFO:Defining folds
2024-03-16 15:59:10,621:INFO:Declaring metric variables
2024-03-16 15:59:10,625:INFO:Importing untrained model
2024-03-16 15:59:10,630:INFO:Linear Regression Imported successfully
2024-03-16 15:59:10,640:INFO:Starting cross validation
2024-03-16 15:59:10,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:32,413:INFO:Calculating mean and std
2024-03-16 15:59:32,415:INFO:Creating metrics dataframe
2024-03-16 15:59:32,418:INFO:Uploading results into container
2024-03-16 15:59:32,419:INFO:Uploading model into container now
2024-03-16 15:59:32,420:INFO:_master_model_container: 1
2024-03-16 15:59:32,420:INFO:_display_container: 2
2024-03-16 15:59:32,421:INFO:LinearRegression(n_jobs=-1)
2024-03-16 15:59:32,421:INFO:create_model() successfully completed......................................
2024-03-16 15:59:32,580:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:32,580:INFO:Creating metrics dataframe
2024-03-16 15:59:32,590:INFO:Initializing Lasso Regression
2024-03-16 15:59:32,590:INFO:Total runtime is 0.3665104349454244 minutes
2024-03-16 15:59:32,595:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:32,596:INFO:Initializing create_model()
2024-03-16 15:59:32,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:32,596:INFO:Checking exceptions
2024-03-16 15:59:32,596:INFO:Importing libraries
2024-03-16 15:59:32,596:INFO:Copying training dataset
2024-03-16 15:59:32,613:INFO:Defining folds
2024-03-16 15:59:32,614:INFO:Declaring metric variables
2024-03-16 15:59:32,619:INFO:Importing untrained model
2024-03-16 15:59:32,626:INFO:Lasso Regression Imported successfully
2024-03-16 15:59:32,642:INFO:Starting cross validation
2024-03-16 15:59:32,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:38,671:INFO:Calculating mean and std
2024-03-16 15:59:38,672:INFO:Creating metrics dataframe
2024-03-16 15:59:38,675:INFO:Uploading results into container
2024-03-16 15:59:38,676:INFO:Uploading model into container now
2024-03-16 15:59:38,677:INFO:_master_model_container: 2
2024-03-16 15:59:38,677:INFO:_display_container: 2
2024-03-16 15:59:38,678:INFO:Lasso(random_state=4281)
2024-03-16 15:59:38,678:INFO:create_model() successfully completed......................................
2024-03-16 15:59:38,829:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:38,830:INFO:Creating metrics dataframe
2024-03-16 15:59:38,840:INFO:Initializing Ridge Regression
2024-03-16 15:59:38,840:INFO:Total runtime is 0.4706844488779704 minutes
2024-03-16 15:59:38,846:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:38,846:INFO:Initializing create_model()
2024-03-16 15:59:38,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:38,847:INFO:Checking exceptions
2024-03-16 15:59:38,847:INFO:Importing libraries
2024-03-16 15:59:38,847:INFO:Copying training dataset
2024-03-16 15:59:38,864:INFO:Defining folds
2024-03-16 15:59:38,864:INFO:Declaring metric variables
2024-03-16 15:59:38,869:INFO:Importing untrained model
2024-03-16 15:59:38,875:INFO:Ridge Regression Imported successfully
2024-03-16 15:59:38,888:INFO:Starting cross validation
2024-03-16 15:59:38,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:38,961:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.03291e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 15:59:39,070:INFO:Calculating mean and std
2024-03-16 15:59:39,072:INFO:Creating metrics dataframe
2024-03-16 15:59:39,075:INFO:Uploading results into container
2024-03-16 15:59:39,076:INFO:Uploading model into container now
2024-03-16 15:59:39,077:INFO:_master_model_container: 3
2024-03-16 15:59:39,078:INFO:_display_container: 2
2024-03-16 15:59:39,079:INFO:Ridge(random_state=4281)
2024-03-16 15:59:39,079:INFO:create_model() successfully completed......................................
2024-03-16 15:59:39,234:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:39,234:INFO:Creating metrics dataframe
2024-03-16 15:59:39,245:INFO:Initializing Elastic Net
2024-03-16 15:59:39,246:INFO:Total runtime is 0.47744214932123824 minutes
2024-03-16 15:59:39,250:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:39,251:INFO:Initializing create_model()
2024-03-16 15:59:39,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:39,251:INFO:Checking exceptions
2024-03-16 15:59:39,251:INFO:Importing libraries
2024-03-16 15:59:39,252:INFO:Copying training dataset
2024-03-16 15:59:39,269:INFO:Defining folds
2024-03-16 15:59:39,269:INFO:Declaring metric variables
2024-03-16 15:59:39,274:INFO:Importing untrained model
2024-03-16 15:59:39,281:INFO:Elastic Net Imported successfully
2024-03-16 15:59:39,294:INFO:Starting cross validation
2024-03-16 15:59:39,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:39,496:INFO:Calculating mean and std
2024-03-16 15:59:39,498:INFO:Creating metrics dataframe
2024-03-16 15:59:39,500:INFO:Uploading results into container
2024-03-16 15:59:39,501:INFO:Uploading model into container now
2024-03-16 15:59:39,502:INFO:_master_model_container: 4
2024-03-16 15:59:39,502:INFO:_display_container: 2
2024-03-16 15:59:39,503:INFO:ElasticNet(random_state=4281)
2024-03-16 15:59:39,503:INFO:create_model() successfully completed......................................
2024-03-16 15:59:39,643:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:39,643:INFO:Creating metrics dataframe
2024-03-16 15:59:39,652:INFO:Initializing Least Angle Regression
2024-03-16 15:59:39,653:INFO:Total runtime is 0.4842224558194479 minutes
2024-03-16 15:59:39,657:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:39,657:INFO:Initializing create_model()
2024-03-16 15:59:39,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:39,658:INFO:Checking exceptions
2024-03-16 15:59:39,658:INFO:Importing libraries
2024-03-16 15:59:39,658:INFO:Copying training dataset
2024-03-16 15:59:39,672:INFO:Defining folds
2024-03-16 15:59:39,673:INFO:Declaring metric variables
2024-03-16 15:59:39,678:INFO:Importing untrained model
2024-03-16 15:59:39,683:INFO:Least Angle Regression Imported successfully
2024-03-16 15:59:39,693:INFO:Starting cross validation
2024-03-16 15:59:39,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:39,763:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.367e+00, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,764:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 27 iterations, i.e. alpha=1.770e+00, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,764:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=6.078e-01, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,765:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=5.571e-01, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,765:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.398e-04, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=1.930e-01, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.609e-02, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,766:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=1.135e-02, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,819:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 34 iterations, i.e. alpha=1.453e-05, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,843:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.746e-05, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 15:59:39,861:INFO:Calculating mean and std
2024-03-16 15:59:39,864:INFO:Creating metrics dataframe
2024-03-16 15:59:39,866:INFO:Uploading results into container
2024-03-16 15:59:39,867:INFO:Uploading model into container now
2024-03-16 15:59:39,868:INFO:_master_model_container: 5
2024-03-16 15:59:39,868:INFO:_display_container: 2
2024-03-16 15:59:39,868:INFO:Lars(random_state=4281)
2024-03-16 15:59:39,869:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,005:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,005:INFO:Creating metrics dataframe
2024-03-16 15:59:40,016:INFO:Initializing Lasso Least Angle Regression
2024-03-16 15:59:40,016:INFO:Total runtime is 0.49028316736221317 minutes
2024-03-16 15:59:40,022:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,022:INFO:Initializing create_model()
2024-03-16 15:59:40,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,022:INFO:Checking exceptions
2024-03-16 15:59:40,022:INFO:Importing libraries
2024-03-16 15:59:40,023:INFO:Copying training dataset
2024-03-16 15:59:40,040:INFO:Defining folds
2024-03-16 15:59:40,040:INFO:Declaring metric variables
2024-03-16 15:59:40,047:INFO:Importing untrained model
2024-03-16 15:59:40,053:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 15:59:40,061:INFO:Starting cross validation
2024-03-16 15:59:40,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:40,224:INFO:Calculating mean and std
2024-03-16 15:59:40,226:INFO:Creating metrics dataframe
2024-03-16 15:59:40,229:INFO:Uploading results into container
2024-03-16 15:59:40,229:INFO:Uploading model into container now
2024-03-16 15:59:40,230:INFO:_master_model_container: 6
2024-03-16 15:59:40,230:INFO:_display_container: 2
2024-03-16 15:59:40,230:INFO:LassoLars(random_state=4281)
2024-03-16 15:59:40,230:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,366:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,367:INFO:Creating metrics dataframe
2024-03-16 15:59:40,378:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 15:59:40,378:INFO:Total runtime is 0.49631245930989587 minutes
2024-03-16 15:59:40,386:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,386:INFO:Initializing create_model()
2024-03-16 15:59:40,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,387:INFO:Checking exceptions
2024-03-16 15:59:40,387:INFO:Importing libraries
2024-03-16 15:59:40,387:INFO:Copying training dataset
2024-03-16 15:59:40,406:INFO:Defining folds
2024-03-16 15:59:40,406:INFO:Declaring metric variables
2024-03-16 15:59:40,412:INFO:Importing untrained model
2024-03-16 15:59:40,417:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 15:59:40,427:INFO:Starting cross validation
2024-03-16 15:59:40,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:40,614:INFO:Calculating mean and std
2024-03-16 15:59:40,616:INFO:Creating metrics dataframe
2024-03-16 15:59:40,618:INFO:Uploading results into container
2024-03-16 15:59:40,619:INFO:Uploading model into container now
2024-03-16 15:59:40,619:INFO:_master_model_container: 7
2024-03-16 15:59:40,619:INFO:_display_container: 2
2024-03-16 15:59:40,620:INFO:OrthogonalMatchingPursuit()
2024-03-16 15:59:40,620:INFO:create_model() successfully completed......................................
2024-03-16 15:59:40,773:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:40,773:INFO:Creating metrics dataframe
2024-03-16 15:59:40,785:INFO:Initializing Bayesian Ridge
2024-03-16 15:59:40,786:INFO:Total runtime is 0.5031156579653422 minutes
2024-03-16 15:59:40,790:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:40,791:INFO:Initializing create_model()
2024-03-16 15:59:40,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:40,791:INFO:Checking exceptions
2024-03-16 15:59:40,792:INFO:Importing libraries
2024-03-16 15:59:40,792:INFO:Copying training dataset
2024-03-16 15:59:40,807:INFO:Defining folds
2024-03-16 15:59:40,808:INFO:Declaring metric variables
2024-03-16 15:59:40,814:INFO:Importing untrained model
2024-03-16 15:59:40,819:INFO:Bayesian Ridge Imported successfully
2024-03-16 15:59:40,830:INFO:Starting cross validation
2024-03-16 15:59:40,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,019:INFO:Calculating mean and std
2024-03-16 15:59:41,021:INFO:Creating metrics dataframe
2024-03-16 15:59:41,026:INFO:Uploading results into container
2024-03-16 15:59:41,027:INFO:Uploading model into container now
2024-03-16 15:59:41,028:INFO:_master_model_container: 8
2024-03-16 15:59:41,028:INFO:_display_container: 2
2024-03-16 15:59:41,029:INFO:BayesianRidge()
2024-03-16 15:59:41,029:INFO:create_model() successfully completed......................................
2024-03-16 15:59:41,168:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:41,168:INFO:Creating metrics dataframe
2024-03-16 15:59:41,178:INFO:Initializing Passive Aggressive Regressor
2024-03-16 15:59:41,178:INFO:Total runtime is 0.5096480369567871 minutes
2024-03-16 15:59:41,183:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:41,183:INFO:Initializing create_model()
2024-03-16 15:59:41,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:41,183:INFO:Checking exceptions
2024-03-16 15:59:41,184:INFO:Importing libraries
2024-03-16 15:59:41,184:INFO:Copying training dataset
2024-03-16 15:59:41,197:INFO:Defining folds
2024-03-16 15:59:41,198:INFO:Declaring metric variables
2024-03-16 15:59:41,202:INFO:Importing untrained model
2024-03-16 15:59:41,207:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 15:59:41,221:INFO:Starting cross validation
2024-03-16 15:59:41,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,453:INFO:Calculating mean and std
2024-03-16 15:59:41,455:INFO:Creating metrics dataframe
2024-03-16 15:59:41,458:INFO:Uploading results into container
2024-03-16 15:59:41,460:INFO:Uploading model into container now
2024-03-16 15:59:41,461:INFO:_master_model_container: 9
2024-03-16 15:59:41,461:INFO:_display_container: 2
2024-03-16 15:59:41,462:INFO:PassiveAggressiveRegressor(random_state=4281)
2024-03-16 15:59:41,462:INFO:create_model() successfully completed......................................
2024-03-16 15:59:41,634:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:41,634:INFO:Creating metrics dataframe
2024-03-16 15:59:41,650:INFO:Initializing Huber Regressor
2024-03-16 15:59:41,651:INFO:Total runtime is 0.5175297737121581 minutes
2024-03-16 15:59:41,656:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:41,657:INFO:Initializing create_model()
2024-03-16 15:59:41,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:41,658:INFO:Checking exceptions
2024-03-16 15:59:41,658:INFO:Importing libraries
2024-03-16 15:59:41,658:INFO:Copying training dataset
2024-03-16 15:59:41,681:INFO:Defining folds
2024-03-16 15:59:41,681:INFO:Declaring metric variables
2024-03-16 15:59:41,688:INFO:Importing untrained model
2024-03-16 15:59:41,695:INFO:Huber Regressor Imported successfully
2024-03-16 15:59:41,708:INFO:Starting cross validation
2024-03-16 15:59:41,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:41,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,980:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,984:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,984:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:41,999:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,016:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,049:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,083:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,094:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 15:59:42,113:INFO:Calculating mean and std
2024-03-16 15:59:42,115:INFO:Creating metrics dataframe
2024-03-16 15:59:42,119:INFO:Uploading results into container
2024-03-16 15:59:42,120:INFO:Uploading model into container now
2024-03-16 15:59:42,120:INFO:_master_model_container: 10
2024-03-16 15:59:42,121:INFO:_display_container: 2
2024-03-16 15:59:42,122:INFO:HuberRegressor()
2024-03-16 15:59:42,122:INFO:create_model() successfully completed......................................
2024-03-16 15:59:42,273:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:42,273:INFO:Creating metrics dataframe
2024-03-16 15:59:42,288:INFO:Initializing K Neighbors Regressor
2024-03-16 15:59:42,288:INFO:Total runtime is 0.5281545797983804 minutes
2024-03-16 15:59:42,294:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:42,295:INFO:Initializing create_model()
2024-03-16 15:59:42,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:42,295:INFO:Checking exceptions
2024-03-16 15:59:42,295:INFO:Importing libraries
2024-03-16 15:59:42,295:INFO:Copying training dataset
2024-03-16 15:59:42,312:INFO:Defining folds
2024-03-16 15:59:42,312:INFO:Declaring metric variables
2024-03-16 15:59:42,319:INFO:Importing untrained model
2024-03-16 15:59:42,324:INFO:K Neighbors Regressor Imported successfully
2024-03-16 15:59:42,337:INFO:Starting cross validation
2024-03-16 15:59:42,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:43,005:INFO:Calculating mean and std
2024-03-16 15:59:43,006:INFO:Creating metrics dataframe
2024-03-16 15:59:43,010:INFO:Uploading results into container
2024-03-16 15:59:43,012:INFO:Uploading model into container now
2024-03-16 15:59:43,012:INFO:_master_model_container: 11
2024-03-16 15:59:43,012:INFO:_display_container: 2
2024-03-16 15:59:43,013:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 15:59:43,013:INFO:create_model() successfully completed......................................
2024-03-16 15:59:43,161:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:43,161:INFO:Creating metrics dataframe
2024-03-16 15:59:43,174:INFO:Initializing Decision Tree Regressor
2024-03-16 15:59:43,175:INFO:Total runtime is 0.5429380138715107 minutes
2024-03-16 15:59:43,181:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:43,181:INFO:Initializing create_model()
2024-03-16 15:59:43,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:43,182:INFO:Checking exceptions
2024-03-16 15:59:43,182:INFO:Importing libraries
2024-03-16 15:59:43,182:INFO:Copying training dataset
2024-03-16 15:59:43,199:INFO:Defining folds
2024-03-16 15:59:43,199:INFO:Declaring metric variables
2024-03-16 15:59:43,204:INFO:Importing untrained model
2024-03-16 15:59:43,211:INFO:Decision Tree Regressor Imported successfully
2024-03-16 15:59:43,222:INFO:Starting cross validation
2024-03-16 15:59:43,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:43,479:INFO:Calculating mean and std
2024-03-16 15:59:43,480:INFO:Creating metrics dataframe
2024-03-16 15:59:43,483:INFO:Uploading results into container
2024-03-16 15:59:43,484:INFO:Uploading model into container now
2024-03-16 15:59:43,485:INFO:_master_model_container: 12
2024-03-16 15:59:43,486:INFO:_display_container: 2
2024-03-16 15:59:43,486:INFO:DecisionTreeRegressor(random_state=4281)
2024-03-16 15:59:43,486:INFO:create_model() successfully completed......................................
2024-03-16 15:59:43,631:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:43,631:INFO:Creating metrics dataframe
2024-03-16 15:59:43,644:INFO:Initializing Random Forest Regressor
2024-03-16 15:59:43,644:INFO:Total runtime is 0.5507510105768839 minutes
2024-03-16 15:59:43,649:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:43,649:INFO:Initializing create_model()
2024-03-16 15:59:43,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:43,649:INFO:Checking exceptions
2024-03-16 15:59:43,649:INFO:Importing libraries
2024-03-16 15:59:43,650:INFO:Copying training dataset
2024-03-16 15:59:43,665:INFO:Defining folds
2024-03-16 15:59:43,665:INFO:Declaring metric variables
2024-03-16 15:59:43,670:INFO:Importing untrained model
2024-03-16 15:59:43,676:INFO:Random Forest Regressor Imported successfully
2024-03-16 15:59:43,686:INFO:Starting cross validation
2024-03-16 15:59:43,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:51,470:INFO:Calculating mean and std
2024-03-16 15:59:51,475:INFO:Creating metrics dataframe
2024-03-16 15:59:51,482:INFO:Uploading results into container
2024-03-16 15:59:51,483:INFO:Uploading model into container now
2024-03-16 15:59:51,484:INFO:_master_model_container: 13
2024-03-16 15:59:51,484:INFO:_display_container: 2
2024-03-16 15:59:51,485:INFO:RandomForestRegressor(n_jobs=-1, random_state=4281)
2024-03-16 15:59:51,485:INFO:create_model() successfully completed......................................
2024-03-16 15:59:51,722:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:51,722:INFO:Creating metrics dataframe
2024-03-16 15:59:51,750:INFO:Initializing Extra Trees Regressor
2024-03-16 15:59:51,751:INFO:Total runtime is 0.6858483870824178 minutes
2024-03-16 15:59:51,758:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:51,760:INFO:Initializing create_model()
2024-03-16 15:59:51,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:51,760:INFO:Checking exceptions
2024-03-16 15:59:51,761:INFO:Importing libraries
2024-03-16 15:59:51,761:INFO:Copying training dataset
2024-03-16 15:59:51,796:INFO:Defining folds
2024-03-16 15:59:51,796:INFO:Declaring metric variables
2024-03-16 15:59:51,803:INFO:Importing untrained model
2024-03-16 15:59:51,814:INFO:Extra Trees Regressor Imported successfully
2024-03-16 15:59:51,833:INFO:Starting cross validation
2024-03-16 15:59:51,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:56,276:INFO:Calculating mean and std
2024-03-16 15:59:56,280:INFO:Creating metrics dataframe
2024-03-16 15:59:56,286:INFO:Uploading results into container
2024-03-16 15:59:56,287:INFO:Uploading model into container now
2024-03-16 15:59:56,288:INFO:_master_model_container: 14
2024-03-16 15:59:56,289:INFO:_display_container: 2
2024-03-16 15:59:56,290:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4281)
2024-03-16 15:59:56,291:INFO:create_model() successfully completed......................................
2024-03-16 15:59:56,493:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:56,494:INFO:Creating metrics dataframe
2024-03-16 15:59:56,529:INFO:Initializing AdaBoost Regressor
2024-03-16 15:59:56,530:INFO:Total runtime is 0.7655128995577494 minutes
2024-03-16 15:59:56,538:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:56,538:INFO:Initializing create_model()
2024-03-16 15:59:56,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:56,539:INFO:Checking exceptions
2024-03-16 15:59:56,539:INFO:Importing libraries
2024-03-16 15:59:56,539:INFO:Copying training dataset
2024-03-16 15:59:56,570:INFO:Defining folds
2024-03-16 15:59:56,571:INFO:Declaring metric variables
2024-03-16 15:59:56,583:INFO:Importing untrained model
2024-03-16 15:59:56,592:INFO:AdaBoost Regressor Imported successfully
2024-03-16 15:59:56,608:INFO:Starting cross validation
2024-03-16 15:59:56,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 15:59:57,520:INFO:Calculating mean and std
2024-03-16 15:59:57,523:INFO:Creating metrics dataframe
2024-03-16 15:59:57,531:INFO:Uploading results into container
2024-03-16 15:59:57,532:INFO:Uploading model into container now
2024-03-16 15:59:57,533:INFO:_master_model_container: 15
2024-03-16 15:59:57,533:INFO:_display_container: 2
2024-03-16 15:59:57,533:INFO:AdaBoostRegressor(random_state=4281)
2024-03-16 15:59:57,534:INFO:create_model() successfully completed......................................
2024-03-16 15:59:57,691:INFO:SubProcess create_model() end ==================================
2024-03-16 15:59:57,691:INFO:Creating metrics dataframe
2024-03-16 15:59:57,719:INFO:Initializing Gradient Boosting Regressor
2024-03-16 15:59:57,720:INFO:Total runtime is 0.7853522300720214 minutes
2024-03-16 15:59:57,726:INFO:SubProcess create_model() called ==================================
2024-03-16 15:59:57,727:INFO:Initializing create_model()
2024-03-16 15:59:57,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 15:59:57,727:INFO:Checking exceptions
2024-03-16 15:59:57,727:INFO:Importing libraries
2024-03-16 15:59:57,727:INFO:Copying training dataset
2024-03-16 15:59:57,748:INFO:Defining folds
2024-03-16 15:59:57,749:INFO:Declaring metric variables
2024-03-16 15:59:57,757:INFO:Importing untrained model
2024-03-16 15:59:57,765:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 15:59:57,780:INFO:Starting cross validation
2024-03-16 15:59:57,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:00,050:INFO:Calculating mean and std
2024-03-16 16:00:00,052:INFO:Creating metrics dataframe
2024-03-16 16:00:00,057:INFO:Uploading results into container
2024-03-16 16:00:00,058:INFO:Uploading model into container now
2024-03-16 16:00:00,060:INFO:_master_model_container: 16
2024-03-16 16:00:00,060:INFO:_display_container: 2
2024-03-16 16:00:00,061:INFO:GradientBoostingRegressor(random_state=4281)
2024-03-16 16:00:00,061:INFO:create_model() successfully completed......................................
2024-03-16 16:00:00,237:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:00,237:INFO:Creating metrics dataframe
2024-03-16 16:00:00,257:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:00:00,257:INFO:Total runtime is 0.8276241064071654 minutes
2024-03-16 16:00:00,264:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:00,265:INFO:Initializing create_model()
2024-03-16 16:00:00,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:00,266:INFO:Checking exceptions
2024-03-16 16:00:00,266:INFO:Importing libraries
2024-03-16 16:00:00,266:INFO:Copying training dataset
2024-03-16 16:00:00,282:INFO:Defining folds
2024-03-16 16:00:00,282:INFO:Declaring metric variables
2024-03-16 16:00:00,288:INFO:Importing untrained model
2024-03-16 16:00:00,296:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:00:00,311:INFO:Starting cross validation
2024-03-16 16:00:00,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:04,233:INFO:Calculating mean and std
2024-03-16 16:00:04,236:INFO:Creating metrics dataframe
2024-03-16 16:00:04,241:INFO:Uploading results into container
2024-03-16 16:00:04,243:INFO:Uploading model into container now
2024-03-16 16:00:04,244:INFO:_master_model_container: 17
2024-03-16 16:00:04,245:INFO:_display_container: 2
2024-03-16 16:00:04,248:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4281, ...)
2024-03-16 16:00:04,248:INFO:create_model() successfully completed......................................
2024-03-16 16:00:04,451:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:04,452:INFO:Creating metrics dataframe
2024-03-16 16:00:04,485:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:00:04,486:INFO:Total runtime is 0.8981006781260171 minutes
2024-03-16 16:00:04,496:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:04,497:INFO:Initializing create_model()
2024-03-16 16:00:04,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:04,497:INFO:Checking exceptions
2024-03-16 16:00:04,497:INFO:Importing libraries
2024-03-16 16:00:04,498:INFO:Copying training dataset
2024-03-16 16:00:04,532:INFO:Defining folds
2024-03-16 16:00:04,533:INFO:Declaring metric variables
2024-03-16 16:00:04,544:INFO:Importing untrained model
2024-03-16 16:00:04,558:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:00:04,584:INFO:Starting cross validation
2024-03-16 16:00:04,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:12,401:INFO:Calculating mean and std
2024-03-16 16:00:12,404:INFO:Creating metrics dataframe
2024-03-16 16:00:12,412:INFO:Uploading results into container
2024-03-16 16:00:12,414:INFO:Uploading model into container now
2024-03-16 16:00:12,415:INFO:_master_model_container: 18
2024-03-16 16:00:12,415:INFO:_display_container: 2
2024-03-16 16:00:12,417:INFO:LGBMRegressor(n_jobs=-1, random_state=4281)
2024-03-16 16:00:12,417:INFO:create_model() successfully completed......................................
2024-03-16 16:00:12,697:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:12,698:INFO:Creating metrics dataframe
2024-03-16 16:00:12,750:INFO:Initializing Dummy Regressor
2024-03-16 16:00:12,751:INFO:Total runtime is 1.035859433809916 minutes
2024-03-16 16:00:12,764:INFO:SubProcess create_model() called ==================================
2024-03-16 16:00:12,765:INFO:Initializing create_model()
2024-03-16 16:00:12,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B826FDB250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:12,767:INFO:Checking exceptions
2024-03-16 16:00:12,768:INFO:Importing libraries
2024-03-16 16:00:12,768:INFO:Copying training dataset
2024-03-16 16:00:12,814:INFO:Defining folds
2024-03-16 16:00:12,815:INFO:Declaring metric variables
2024-03-16 16:00:12,831:INFO:Importing untrained model
2024-03-16 16:00:12,845:INFO:Dummy Regressor Imported successfully
2024-03-16 16:00:12,868:INFO:Starting cross validation
2024-03-16 16:00:12,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:00:13,221:INFO:Calculating mean and std
2024-03-16 16:00:13,224:INFO:Creating metrics dataframe
2024-03-16 16:00:13,229:INFO:Uploading results into container
2024-03-16 16:00:13,230:INFO:Uploading model into container now
2024-03-16 16:00:13,231:INFO:_master_model_container: 19
2024-03-16 16:00:13,232:INFO:_display_container: 2
2024-03-16 16:00:13,232:INFO:DummyRegressor()
2024-03-16 16:00:13,233:INFO:create_model() successfully completed......................................
2024-03-16 16:00:13,419:INFO:SubProcess create_model() end ==================================
2024-03-16 16:00:13,419:INFO:Creating metrics dataframe
2024-03-16 16:00:13,451:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:00:13,472:INFO:Initializing create_model()
2024-03-16 16:00:13,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ElasticNet(random_state=4281), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:00:13,473:INFO:Checking exceptions
2024-03-16 16:00:13,477:INFO:Importing libraries
2024-03-16 16:00:13,478:INFO:Copying training dataset
2024-03-16 16:00:13,504:INFO:Defining folds
2024-03-16 16:00:13,504:INFO:Declaring metric variables
2024-03-16 16:00:13,505:INFO:Importing untrained model
2024-03-16 16:00:13,505:INFO:Declaring custom model
2024-03-16 16:00:13,506:INFO:Elastic Net Imported successfully
2024-03-16 16:00:13,508:INFO:Cross validation set to False
2024-03-16 16:00:13,508:INFO:Fitting Model
2024-03-16 16:00:13,554:INFO:ElasticNet(random_state=4281)
2024-03-16 16:00:13,554:INFO:create_model() successfully completed......................................
2024-03-16 16:00:13,788:INFO:Creating Dashboard logs
2024-03-16 16:00:13,800:INFO:Model: Elastic Net
2024-03-16 16:00:13,878:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4281, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:00:14,013:INFO:Initializing predict_model()
2024-03-16 16:00:14,013:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A248410>, estimator=ElasticNet(random_state=4281), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B85A341440>)
2024-03-16 16:00:14,014:INFO:Checking exceptions
2024-03-16 16:00:14,014:INFO:Preloading libraries
2024-03-16 16:00:14,167:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:00:14,538:INFO:Creating Dashboard logs
2024-03-16 16:00:14,544:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:00:14,595:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 4281, 'verbose': False}
2024-03-16 16:00:15,020:INFO:Creating Dashboard logs
2024-03-16 16:00:15,029:INFO:Model: Lasso Regression
2024-03-16 16:00:15,103:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4281, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:00:15,755:INFO:Creating Dashboard logs
2024-03-16 16:00:15,769:INFO:Model: Bayesian Ridge
2024-03-16 16:00:15,871:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:00:16,332:INFO:Creating Dashboard logs
2024-03-16 16:00:16,338:INFO:Model: Ridge Regression
2024-03-16 16:00:16,398:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 4281, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:00:16,839:INFO:Creating Dashboard logs
2024-03-16 16:00:16,852:INFO:Model: Linear Regression
2024-03-16 16:00:16,952:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:00:17,413:INFO:Creating Dashboard logs
2024-03-16 16:00:17,419:INFO:Model: Huber Regressor
2024-03-16 16:00:17,496:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:00:17,938:INFO:Creating Dashboard logs
2024-03-16 16:00:17,946:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:00:18,009:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:00:18,316:INFO:Creating Dashboard logs
2024-03-16 16:00:18,321:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:00:18,372:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 4281, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:18,729:INFO:Creating Dashboard logs
2024-03-16 16:00:18,734:INFO:Model: Random Forest Regressor
2024-03-16 16:00:18,805:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4281, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:19,163:INFO:Creating Dashboard logs
2024-03-16 16:00:19,168:INFO:Model: Extra Trees Regressor
2024-03-16 16:00:19,220:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4281, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:19,535:INFO:Creating Dashboard logs
2024-03-16 16:00:19,540:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:00:19,590:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 4281, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:00:19,977:INFO:Creating Dashboard logs
2024-03-16 16:00:19,984:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:00:20,050:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 4281, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:00:20,461:INFO:Creating Dashboard logs
2024-03-16 16:00:20,466:INFO:Model: K Neighbors Regressor
2024-03-16 16:00:20,517:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:00:20,829:INFO:Creating Dashboard logs
2024-03-16 16:00:20,835:INFO:Model: Decision Tree Regressor
2024-03-16 16:00:20,892:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4281, 'splitter': 'best'}
2024-03-16 16:00:21,333:INFO:Creating Dashboard logs
2024-03-16 16:00:21,347:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:00:21,450:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 4281, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:00:22,174:INFO:Creating Dashboard logs
2024-03-16 16:00:22,203:INFO:Model: AdaBoost Regressor
2024-03-16 16:00:22,336:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 4281}
2024-03-16 16:00:22,838:INFO:Creating Dashboard logs
2024-03-16 16:00:22,845:INFO:Model: Dummy Regressor
2024-03-16 16:00:22,912:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:00:23,275:INFO:Creating Dashboard logs
2024-03-16 16:00:23,282:INFO:Model: Least Angle Regression
2024-03-16 16:00:23,340:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 4281, 'verbose': False}
2024-03-16 16:00:23,658:INFO:_master_model_container: 19
2024-03-16 16:00:23,658:INFO:_display_container: 2
2024-03-16 16:00:23,659:INFO:ElasticNet(random_state=4281)
2024-03-16 16:00:23,659:INFO:compare_models() successfully completed......................................
2024-03-16 16:02:07,678:INFO:PyCaret RegressionExperiment
2024-03-16 16:02:07,678:INFO:Logging name: reg-default-name
2024-03-16 16:02:07,678:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:02:07,678:INFO:version 3.3.0
2024-03-16 16:02:07,679:INFO:Initializing setup()
2024-03-16 16:02:07,679:INFO:self.USI: 961c
2024-03-16 16:02:07,679:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:02:07,679:INFO:Checking environment
2024-03-16 16:02:07,679:INFO:python_version: 3.11.5
2024-03-16 16:02:07,679:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:02:07,679:INFO:machine: AMD64
2024-03-16 16:02:07,679:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:02:07,679:INFO:Memory: svmem(total=34129678336, available=11388399616, percent=66.6, used=22741278720, free=11388399616)
2024-03-16 16:02:07,679:INFO:Physical Core: 6
2024-03-16 16:02:07,680:INFO:Logical Core: 12
2024-03-16 16:02:07,680:INFO:Checking libraries
2024-03-16 16:02:07,680:INFO:System:
2024-03-16 16:02:07,680:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:02:07,680:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:02:07,680:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:02:07,680:INFO:PyCaret required dependencies:
2024-03-16 16:02:07,680:INFO:                 pip: 24.0
2024-03-16 16:02:07,681:INFO:          setuptools: 68.0.0
2024-03-16 16:02:07,681:INFO:             pycaret: 3.3.0
2024-03-16 16:02:07,681:INFO:             IPython: 8.15.0
2024-03-16 16:02:07,681:INFO:          ipywidgets: 8.0.4
2024-03-16 16:02:07,681:INFO:                tqdm: 4.65.0
2024-03-16 16:02:07,681:INFO:               numpy: 1.24.3
2024-03-16 16:02:07,681:INFO:              pandas: 2.0.3
2024-03-16 16:02:07,681:INFO:              jinja2: 3.1.2
2024-03-16 16:02:07,681:INFO:               scipy: 1.11.1
2024-03-16 16:02:07,681:INFO:              joblib: 1.2.0
2024-03-16 16:02:07,681:INFO:             sklearn: 1.3.0
2024-03-16 16:02:07,681:INFO:                pyod: 1.1.3
2024-03-16 16:02:07,681:INFO:            imblearn: 0.10.1
2024-03-16 16:02:07,682:INFO:   category_encoders: 2.6.3
2024-03-16 16:02:07,682:INFO:            lightgbm: 4.3.0
2024-03-16 16:02:07,682:INFO:               numba: 0.57.1
2024-03-16 16:02:07,682:INFO:            requests: 2.31.0
2024-03-16 16:02:07,682:INFO:          matplotlib: 3.7.2
2024-03-16 16:02:07,682:INFO:          scikitplot: 0.3.7
2024-03-16 16:02:07,682:INFO:         yellowbrick: 1.5
2024-03-16 16:02:07,682:INFO:              plotly: 5.9.0
2024-03-16 16:02:07,682:INFO:    plotly-resampler: Not installed
2024-03-16 16:02:07,682:INFO:             kaleido: 0.2.1
2024-03-16 16:02:07,682:INFO:           schemdraw: 0.15
2024-03-16 16:02:07,683:INFO:         statsmodels: 0.14.0
2024-03-16 16:02:07,683:INFO:              sktime: 0.27.0
2024-03-16 16:02:07,683:INFO:               tbats: 1.1.3
2024-03-16 16:02:07,683:INFO:            pmdarima: 2.0.4
2024-03-16 16:02:07,683:INFO:              psutil: 5.9.0
2024-03-16 16:02:07,683:INFO:          markupsafe: 2.1.1
2024-03-16 16:02:07,683:INFO:             pickle5: Not installed
2024-03-16 16:02:07,683:INFO:         cloudpickle: 2.2.1
2024-03-16 16:02:07,684:INFO:         deprecation: 2.1.0
2024-03-16 16:02:07,684:INFO:              xxhash: 2.0.2
2024-03-16 16:02:07,684:INFO:           wurlitzer: Not installed
2024-03-16 16:02:07,684:INFO:PyCaret optional dependencies:
2024-03-16 16:02:07,684:INFO:                shap: Not installed
2024-03-16 16:02:07,684:INFO:           interpret: Not installed
2024-03-16 16:02:07,684:INFO:                umap: Not installed
2024-03-16 16:02:07,685:INFO:     ydata_profiling: Not installed
2024-03-16 16:02:07,685:INFO:  explainerdashboard: Not installed
2024-03-16 16:02:07,685:INFO:             autoviz: Not installed
2024-03-16 16:02:07,685:INFO:           fairlearn: Not installed
2024-03-16 16:02:07,685:INFO:          deepchecks: Not installed
2024-03-16 16:02:07,685:INFO:             xgboost: 2.0.3
2024-03-16 16:02:07,685:INFO:            catboost: Not installed
2024-03-16 16:02:07,685:INFO:              kmodes: Not installed
2024-03-16 16:02:07,686:INFO:             mlxtend: Not installed
2024-03-16 16:02:07,686:INFO:       statsforecast: Not installed
2024-03-16 16:02:07,686:INFO:        tune_sklearn: Not installed
2024-03-16 16:02:07,686:INFO:                 ray: Not installed
2024-03-16 16:02:07,686:INFO:            hyperopt: Not installed
2024-03-16 16:02:07,686:INFO:              optuna: Not installed
2024-03-16 16:02:07,687:INFO:               skopt: Not installed
2024-03-16 16:02:07,687:INFO:              mlflow: 2.11.1
2024-03-16 16:02:07,687:INFO:              gradio: Not installed
2024-03-16 16:02:07,687:INFO:             fastapi: Not installed
2024-03-16 16:02:07,687:INFO:             uvicorn: Not installed
2024-03-16 16:02:07,687:INFO:              m2cgen: Not installed
2024-03-16 16:02:07,687:INFO:           evidently: Not installed
2024-03-16 16:02:07,687:INFO:               fugue: Not installed
2024-03-16 16:02:07,687:INFO:           streamlit: Not installed
2024-03-16 16:02:07,687:INFO:             prophet: Not installed
2024-03-16 16:02:07,688:INFO:None
2024-03-16 16:02:07,688:INFO:Set up data.
2024-03-16 16:02:07,703:INFO:Set up folding strategy.
2024-03-16 16:02:07,703:INFO:Set up train/test split.
2024-03-16 16:02:07,718:INFO:Set up index.
2024-03-16 16:02:07,718:INFO:Assigning column types.
2024-03-16 16:02:07,736:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:02:07,736:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,750:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:07,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:07,938:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,945:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:07,951:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,131:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,135:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:02:08,143:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,389:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,406:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,415:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,532:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,610:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,615:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:02:08,631:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,858:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:08,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:08,878:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:02:08,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,062:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,067:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:02:09,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,250:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,470:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,475:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:02:09,624:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,722:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:02:09,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:09,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:09,922:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:02:10,097:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,269:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,275:INFO:Preparing preprocessing pipeline...
2024-03-16 16:02:10,275:INFO:Set up simple imputation.
2024-03-16 16:02:10,277:INFO:Set up column name cleaning.
2024-03-16 16:02:10,342:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:02:10,350:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:02:10,350:INFO:Creating final display dataframe.
2024-03-16 16:02:10,597:INFO:Setup _display_container:                     Description             Value
0                    Session id              2617
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 38)
4        Transformed data shape        (1859, 38)
5   Transformed train set shape        (1301, 38)
6    Transformed test set shape         (558, 38)
7              Numeric features                30
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              961c
2024-03-16 16:02:10,770:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,944:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:02:10,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:02:10,948:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:02:10,948:INFO:Logging experiment in loggers
2024-03-16 16:02:11,030:INFO:SubProcess save_model() called ==================================
2024-03-16 16:02:11,057:INFO:Initializing save_model()
2024-03-16 16:02:11,057:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp34brmoh0\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:02:11,057:INFO:Adding model into prep_pipe
2024-03-16 16:02:11,057:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:02:11,061:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp34brmoh0\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:02:11,069:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WKFLDKG_presence',
                                             'NORMNTN_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'WKFLDKG_dep_delay',
                                             'WKFLDKG_arr_delay',
                                             'BNSLY_dep_delay',
                                             'BNSLY_arr_delay',
                                             'MEADWHL_dep_delay',
                                             'MEADW...
                                             'WKFLDWG_stay_subtract', 'Hour',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:02:11,069:INFO:save_model() successfully completed......................................
2024-03-16 16:02:11,240:INFO:SubProcess save_model() end ==================================
2024-03-16 16:02:11,260:INFO:setup() successfully completed in 3.27s...............
2024-03-16 16:02:11,260:INFO:Initializing compare_models()
2024-03-16 16:02:11,261:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:02:11,261:INFO:Checking exceptions
2024-03-16 16:02:11,267:INFO:Preparing display monitor
2024-03-16 16:02:11,311:INFO:Initializing Linear Regression
2024-03-16 16:02:11,312:INFO:Total runtime is 1.6458829243977864e-05 minutes
2024-03-16 16:02:11,319:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:11,320:INFO:Initializing create_model()
2024-03-16 16:02:11,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:11,320:INFO:Checking exceptions
2024-03-16 16:02:11,321:INFO:Importing libraries
2024-03-16 16:02:11,321:INFO:Copying training dataset
2024-03-16 16:02:11,344:INFO:Defining folds
2024-03-16 16:02:11,344:INFO:Declaring metric variables
2024-03-16 16:02:11,350:INFO:Importing untrained model
2024-03-16 16:02:11,358:INFO:Linear Regression Imported successfully
2024-03-16 16:02:11,375:INFO:Starting cross validation
2024-03-16 16:02:11,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:11,712:INFO:Calculating mean and std
2024-03-16 16:02:11,714:INFO:Creating metrics dataframe
2024-03-16 16:02:11,719:INFO:Uploading results into container
2024-03-16 16:02:11,721:INFO:Uploading model into container now
2024-03-16 16:02:11,723:INFO:_master_model_container: 1
2024-03-16 16:02:11,723:INFO:_display_container: 2
2024-03-16 16:02:11,724:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:02:11,724:INFO:create_model() successfully completed......................................
2024-03-16 16:02:11,935:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:11,935:INFO:Creating metrics dataframe
2024-03-16 16:02:11,957:INFO:Initializing Lasso Regression
2024-03-16 16:02:11,958:INFO:Total runtime is 0.010783437887827554 minutes
2024-03-16 16:02:11,969:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:11,970:INFO:Initializing create_model()
2024-03-16 16:02:11,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:11,971:INFO:Checking exceptions
2024-03-16 16:02:11,971:INFO:Importing libraries
2024-03-16 16:02:11,972:INFO:Copying training dataset
2024-03-16 16:02:12,011:INFO:Defining folds
2024-03-16 16:02:12,011:INFO:Declaring metric variables
2024-03-16 16:02:12,050:INFO:Importing untrained model
2024-03-16 16:02:12,064:INFO:Lasso Regression Imported successfully
2024-03-16 16:02:12,091:INFO:Starting cross validation
2024-03-16 16:02:12,094:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:12,270:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.773e+05, tolerance: 1.158e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,296:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.275e+06, tolerance: 1.264e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,364:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.602e+04, tolerance: 1.238e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.288e+04, tolerance: 1.212e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,507:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.787e+04, tolerance: 1.228e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,551:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.599e+06, tolerance: 1.201e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,590:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.837e+04, tolerance: 1.122e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:12,654:INFO:Calculating mean and std
2024-03-16 16:02:12,659:INFO:Creating metrics dataframe
2024-03-16 16:02:12,668:INFO:Uploading results into container
2024-03-16 16:02:12,670:INFO:Uploading model into container now
2024-03-16 16:02:12,672:INFO:_master_model_container: 2
2024-03-16 16:02:12,673:INFO:_display_container: 2
2024-03-16 16:02:12,674:INFO:Lasso(random_state=2617)
2024-03-16 16:02:12,675:INFO:create_model() successfully completed......................................
2024-03-16 16:02:13,013:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:13,014:INFO:Creating metrics dataframe
2024-03-16 16:02:13,042:INFO:Initializing Ridge Regression
2024-03-16 16:02:13,042:INFO:Total runtime is 0.0288560152053833 minutes
2024-03-16 16:02:13,057:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:13,058:INFO:Initializing create_model()
2024-03-16 16:02:13,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:13,059:INFO:Checking exceptions
2024-03-16 16:02:13,059:INFO:Importing libraries
2024-03-16 16:02:13,060:INFO:Copying training dataset
2024-03-16 16:02:13,124:INFO:Defining folds
2024-03-16 16:02:13,124:INFO:Declaring metric variables
2024-03-16 16:02:13,143:INFO:Importing untrained model
2024-03-16 16:02:13,157:INFO:Ridge Regression Imported successfully
2024-03-16 16:02:13,187:INFO:Starting cross validation
2024-03-16 16:02:13,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:13,628:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.63601e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:02:13,728:INFO:Calculating mean and std
2024-03-16 16:02:13,731:INFO:Creating metrics dataframe
2024-03-16 16:02:13,738:INFO:Uploading results into container
2024-03-16 16:02:13,741:INFO:Uploading model into container now
2024-03-16 16:02:13,742:INFO:_master_model_container: 3
2024-03-16 16:02:13,742:INFO:_display_container: 2
2024-03-16 16:02:13,744:INFO:Ridge(random_state=2617)
2024-03-16 16:02:13,744:INFO:create_model() successfully completed......................................
2024-03-16 16:02:14,036:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:14,037:INFO:Creating metrics dataframe
2024-03-16 16:02:14,067:INFO:Initializing Elastic Net
2024-03-16 16:02:14,068:INFO:Total runtime is 0.0459550937016805 minutes
2024-03-16 16:02:14,081:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:14,082:INFO:Initializing create_model()
2024-03-16 16:02:14,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:14,082:INFO:Checking exceptions
2024-03-16 16:02:14,083:INFO:Importing libraries
2024-03-16 16:02:14,083:INFO:Copying training dataset
2024-03-16 16:02:14,115:INFO:Defining folds
2024-03-16 16:02:14,115:INFO:Declaring metric variables
2024-03-16 16:02:14,128:INFO:Importing untrained model
2024-03-16 16:02:14,144:INFO:Elastic Net Imported successfully
2024-03-16 16:02:14,170:INFO:Starting cross validation
2024-03-16 16:02:14,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:14,337:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.994e+06, tolerance: 1.158e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,387:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.848e+06, tolerance: 1.264e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,390:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.066e+06, tolerance: 1.204e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,422:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.469e+06, tolerance: 1.282e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,482:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.459e+06, tolerance: 1.238e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,485:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.344e+06, tolerance: 1.240e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,505:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.918e+06, tolerance: 1.212e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,533:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.741e+06, tolerance: 1.228e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,547:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.329e+06, tolerance: 1.201e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,599:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.061e+04, tolerance: 1.122e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:14,640:INFO:Calculating mean and std
2024-03-16 16:02:14,643:INFO:Creating metrics dataframe
2024-03-16 16:02:14,648:INFO:Uploading results into container
2024-03-16 16:02:14,650:INFO:Uploading model into container now
2024-03-16 16:02:14,651:INFO:_master_model_container: 4
2024-03-16 16:02:14,651:INFO:_display_container: 2
2024-03-16 16:02:14,652:INFO:ElasticNet(random_state=2617)
2024-03-16 16:02:14,653:INFO:create_model() successfully completed......................................
2024-03-16 16:02:14,944:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:14,945:INFO:Creating metrics dataframe
2024-03-16 16:02:14,980:INFO:Initializing Least Angle Regression
2024-03-16 16:02:14,981:INFO:Total runtime is 0.06116394201914469 minutes
2024-03-16 16:02:14,992:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:14,994:INFO:Initializing create_model()
2024-03-16 16:02:14,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:14,994:INFO:Checking exceptions
2024-03-16 16:02:14,995:INFO:Importing libraries
2024-03-16 16:02:14,995:INFO:Copying training dataset
2024-03-16 16:02:15,066:INFO:Defining folds
2024-03-16 16:02:15,066:INFO:Declaring metric variables
2024-03-16 16:02:15,081:INFO:Importing untrained model
2024-03-16 16:02:15,095:INFO:Least Angle Regression Imported successfully
2024-03-16 16:02:15,116:INFO:Starting cross validation
2024-03-16 16:02:15,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:15,351:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.710e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,401:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=5.547e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,413:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 31 iterations, i.e. alpha=7.838e-01, with an active set of 27 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,415:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=5.295e-01, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=2.367e-01, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,417:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 35 iterations, i.e. alpha=2.948e-01, with an active set of 30 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,419:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=1.045e-01, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,423:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=5.010e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,424:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=2.999e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,428:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=3.755e-01, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=1.895e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=2.607e-02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=5.054e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,431:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=7.440e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,432:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=2.039e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,473:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=5.975e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,478:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=2.264e+00, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,480:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=9.489e-01, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,483:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=1.247e+01, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,484:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 39 iterations, i.e. alpha=2.633e+00, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,485:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=8.876e-01, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,486:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=5.453e-01, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,487:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=8.534e-02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,489:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=2.790e-02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,490:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=3.086e-03, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,566:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=7.412e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,581:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=1.371e+05, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,582:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=5.904e+02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,583:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=4.682e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,584:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=1.930e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,585:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 46 iterations, i.e. alpha=1.837e+00, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,585:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 46 iterations, i.e. alpha=5.760e-03, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,594:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 27 iterations, i.e. alpha=1.478e+00, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,596:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=3.105e-01, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,599:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 38 iterations, i.e. alpha=1.663e-01, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,600:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=8.713e-02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,601:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=5.641e-02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,602:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=1.450e-02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,604:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=6.924e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,604:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=1.352e-03, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,605:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=1.044e-04, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:02:15,642:INFO:Calculating mean and std
2024-03-16 16:02:15,644:INFO:Creating metrics dataframe
2024-03-16 16:02:15,650:INFO:Uploading results into container
2024-03-16 16:02:15,651:INFO:Uploading model into container now
2024-03-16 16:02:15,653:INFO:_master_model_container: 5
2024-03-16 16:02:15,653:INFO:_display_container: 2
2024-03-16 16:02:15,655:INFO:Lars(random_state=2617)
2024-03-16 16:02:15,656:INFO:create_model() successfully completed......................................
2024-03-16 16:02:15,867:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:15,868:INFO:Creating metrics dataframe
2024-03-16 16:02:15,886:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:02:15,887:INFO:Total runtime is 0.07626310984293619 minutes
2024-03-16 16:02:15,898:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:15,899:INFO:Initializing create_model()
2024-03-16 16:02:15,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:15,899:INFO:Checking exceptions
2024-03-16 16:02:15,899:INFO:Importing libraries
2024-03-16 16:02:15,899:INFO:Copying training dataset
2024-03-16 16:02:15,939:INFO:Defining folds
2024-03-16 16:02:15,939:INFO:Declaring metric variables
2024-03-16 16:02:15,948:INFO:Importing untrained model
2024-03-16 16:02:15,960:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:02:15,979:INFO:Starting cross validation
2024-03-16 16:02:15,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:16,353:INFO:Calculating mean and std
2024-03-16 16:02:16,357:INFO:Creating metrics dataframe
2024-03-16 16:02:16,361:INFO:Uploading results into container
2024-03-16 16:02:16,363:INFO:Uploading model into container now
2024-03-16 16:02:16,364:INFO:_master_model_container: 6
2024-03-16 16:02:16,364:INFO:_display_container: 2
2024-03-16 16:02:16,365:INFO:LassoLars(random_state=2617)
2024-03-16 16:02:16,365:INFO:create_model() successfully completed......................................
2024-03-16 16:02:16,590:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:16,591:INFO:Creating metrics dataframe
2024-03-16 16:02:16,618:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:02:16,619:INFO:Total runtime is 0.08847272793451944 minutes
2024-03-16 16:02:16,631:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:16,632:INFO:Initializing create_model()
2024-03-16 16:02:16,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:16,633:INFO:Checking exceptions
2024-03-16 16:02:16,633:INFO:Importing libraries
2024-03-16 16:02:16,633:INFO:Copying training dataset
2024-03-16 16:02:16,669:INFO:Defining folds
2024-03-16 16:02:16,670:INFO:Declaring metric variables
2024-03-16 16:02:16,682:INFO:Importing untrained model
2024-03-16 16:02:16,694:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:02:16,713:INFO:Starting cross validation
2024-03-16 16:02:16,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:17,134:INFO:Calculating mean and std
2024-03-16 16:02:17,138:INFO:Creating metrics dataframe
2024-03-16 16:02:17,143:INFO:Uploading results into container
2024-03-16 16:02:17,144:INFO:Uploading model into container now
2024-03-16 16:02:17,146:INFO:_master_model_container: 7
2024-03-16 16:02:17,146:INFO:_display_container: 2
2024-03-16 16:02:17,147:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:02:17,148:INFO:create_model() successfully completed......................................
2024-03-16 16:02:17,399:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:17,399:INFO:Creating metrics dataframe
2024-03-16 16:02:17,429:INFO:Initializing Bayesian Ridge
2024-03-16 16:02:17,429:INFO:Total runtime is 0.10196714003880818 minutes
2024-03-16 16:02:17,440:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:17,441:INFO:Initializing create_model()
2024-03-16 16:02:17,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:17,442:INFO:Checking exceptions
2024-03-16 16:02:17,443:INFO:Importing libraries
2024-03-16 16:02:17,444:INFO:Copying training dataset
2024-03-16 16:02:17,486:INFO:Defining folds
2024-03-16 16:02:17,486:INFO:Declaring metric variables
2024-03-16 16:02:17,500:INFO:Importing untrained model
2024-03-16 16:02:17,511:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:02:17,528:INFO:Starting cross validation
2024-03-16 16:02:17,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:17,851:INFO:Calculating mean and std
2024-03-16 16:02:17,853:INFO:Creating metrics dataframe
2024-03-16 16:02:17,857:INFO:Uploading results into container
2024-03-16 16:02:17,858:INFO:Uploading model into container now
2024-03-16 16:02:17,859:INFO:_master_model_container: 8
2024-03-16 16:02:17,859:INFO:_display_container: 2
2024-03-16 16:02:17,861:INFO:BayesianRidge()
2024-03-16 16:02:17,861:INFO:create_model() successfully completed......................................
2024-03-16 16:02:18,029:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:18,029:INFO:Creating metrics dataframe
2024-03-16 16:02:18,043:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:02:18,043:INFO:Total runtime is 0.11219647328058878 minutes
2024-03-16 16:02:18,048:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:18,049:INFO:Initializing create_model()
2024-03-16 16:02:18,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:18,050:INFO:Checking exceptions
2024-03-16 16:02:18,050:INFO:Importing libraries
2024-03-16 16:02:18,050:INFO:Copying training dataset
2024-03-16 16:02:18,069:INFO:Defining folds
2024-03-16 16:02:18,070:INFO:Declaring metric variables
2024-03-16 16:02:18,077:INFO:Importing untrained model
2024-03-16 16:02:18,084:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:02:18,096:INFO:Starting cross validation
2024-03-16 16:02:18,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:18,304:INFO:Calculating mean and std
2024-03-16 16:02:18,306:INFO:Creating metrics dataframe
2024-03-16 16:02:18,310:INFO:Uploading results into container
2024-03-16 16:02:18,311:INFO:Uploading model into container now
2024-03-16 16:02:18,312:INFO:_master_model_container: 9
2024-03-16 16:02:18,312:INFO:_display_container: 2
2024-03-16 16:02:18,313:INFO:PassiveAggressiveRegressor(random_state=2617)
2024-03-16 16:02:18,314:INFO:create_model() successfully completed......................................
2024-03-16 16:02:18,481:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:18,481:INFO:Creating metrics dataframe
2024-03-16 16:02:18,496:INFO:Initializing Huber Regressor
2024-03-16 16:02:18,497:INFO:Total runtime is 0.11977464358011881 minutes
2024-03-16 16:02:18,504:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:18,505:INFO:Initializing create_model()
2024-03-16 16:02:18,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:18,505:INFO:Checking exceptions
2024-03-16 16:02:18,506:INFO:Importing libraries
2024-03-16 16:02:18,506:INFO:Copying training dataset
2024-03-16 16:02:18,526:INFO:Defining folds
2024-03-16 16:02:18,527:INFO:Declaring metric variables
2024-03-16 16:02:18,535:INFO:Importing untrained model
2024-03-16 16:02:18,543:INFO:Huber Regressor Imported successfully
2024-03-16 16:02:18,560:INFO:Starting cross validation
2024-03-16 16:02:18,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:18,951:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,055:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,072:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,112:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,137:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,171:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,241:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,260:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:02:19,302:INFO:Calculating mean and std
2024-03-16 16:02:19,306:INFO:Creating metrics dataframe
2024-03-16 16:02:19,311:INFO:Uploading results into container
2024-03-16 16:02:19,312:INFO:Uploading model into container now
2024-03-16 16:02:19,314:INFO:_master_model_container: 10
2024-03-16 16:02:19,314:INFO:_display_container: 2
2024-03-16 16:02:19,315:INFO:HuberRegressor()
2024-03-16 16:02:19,315:INFO:create_model() successfully completed......................................
2024-03-16 16:02:19,523:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:19,523:INFO:Creating metrics dataframe
2024-03-16 16:02:19,553:INFO:Initializing K Neighbors Regressor
2024-03-16 16:02:19,554:INFO:Total runtime is 0.13739320437113445 minutes
2024-03-16 16:02:19,565:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:19,567:INFO:Initializing create_model()
2024-03-16 16:02:19,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:19,568:INFO:Checking exceptions
2024-03-16 16:02:19,568:INFO:Importing libraries
2024-03-16 16:02:19,569:INFO:Copying training dataset
2024-03-16 16:02:19,604:INFO:Defining folds
2024-03-16 16:02:19,604:INFO:Declaring metric variables
2024-03-16 16:02:19,613:INFO:Importing untrained model
2024-03-16 16:02:19,626:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:02:19,646:INFO:Starting cross validation
2024-03-16 16:02:19,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:20,660:INFO:Calculating mean and std
2024-03-16 16:02:20,662:INFO:Creating metrics dataframe
2024-03-16 16:02:20,668:INFO:Uploading results into container
2024-03-16 16:02:20,669:INFO:Uploading model into container now
2024-03-16 16:02:20,670:INFO:_master_model_container: 11
2024-03-16 16:02:20,671:INFO:_display_container: 2
2024-03-16 16:02:20,671:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:02:20,672:INFO:create_model() successfully completed......................................
2024-03-16 16:02:20,882:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:20,882:INFO:Creating metrics dataframe
2024-03-16 16:02:20,910:INFO:Initializing Decision Tree Regressor
2024-03-16 16:02:20,911:INFO:Total runtime is 0.16000935633977253 minutes
2024-03-16 16:02:20,920:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:20,921:INFO:Initializing create_model()
2024-03-16 16:02:20,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:20,922:INFO:Checking exceptions
2024-03-16 16:02:20,923:INFO:Importing libraries
2024-03-16 16:02:20,923:INFO:Copying training dataset
2024-03-16 16:02:20,959:INFO:Defining folds
2024-03-16 16:02:20,959:INFO:Declaring metric variables
2024-03-16 16:02:20,972:INFO:Importing untrained model
2024-03-16 16:02:20,985:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:02:21,005:INFO:Starting cross validation
2024-03-16 16:02:21,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:21,565:INFO:Calculating mean and std
2024-03-16 16:02:21,570:INFO:Creating metrics dataframe
2024-03-16 16:02:21,578:INFO:Uploading results into container
2024-03-16 16:02:21,580:INFO:Uploading model into container now
2024-03-16 16:02:21,582:INFO:_master_model_container: 12
2024-03-16 16:02:21,583:INFO:_display_container: 2
2024-03-16 16:02:21,584:INFO:DecisionTreeRegressor(random_state=2617)
2024-03-16 16:02:21,585:INFO:create_model() successfully completed......................................
2024-03-16 16:02:21,912:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:21,913:INFO:Creating metrics dataframe
2024-03-16 16:02:21,961:INFO:Initializing Random Forest Regressor
2024-03-16 16:02:21,962:INFO:Total runtime is 0.17751604715983071 minutes
2024-03-16 16:02:21,973:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:21,975:INFO:Initializing create_model()
2024-03-16 16:02:21,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:21,976:INFO:Checking exceptions
2024-03-16 16:02:21,976:INFO:Importing libraries
2024-03-16 16:02:21,976:INFO:Copying training dataset
2024-03-16 16:02:22,025:INFO:Defining folds
2024-03-16 16:02:22,026:INFO:Declaring metric variables
2024-03-16 16:02:22,039:INFO:Importing untrained model
2024-03-16 16:02:22,050:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:02:22,071:INFO:Starting cross validation
2024-03-16 16:02:22,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:31,674:INFO:Calculating mean and std
2024-03-16 16:02:31,679:INFO:Creating metrics dataframe
2024-03-16 16:02:31,684:INFO:Uploading results into container
2024-03-16 16:02:31,686:INFO:Uploading model into container now
2024-03-16 16:02:31,688:INFO:_master_model_container: 13
2024-03-16 16:02:31,688:INFO:_display_container: 2
2024-03-16 16:02:31,689:INFO:RandomForestRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:31,690:INFO:create_model() successfully completed......................................
2024-03-16 16:02:31,940:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:31,941:INFO:Creating metrics dataframe
2024-03-16 16:02:31,964:INFO:Initializing Extra Trees Regressor
2024-03-16 16:02:31,965:INFO:Total runtime is 0.34424404303232825 minutes
2024-03-16 16:02:31,976:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:31,977:INFO:Initializing create_model()
2024-03-16 16:02:31,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:31,978:INFO:Checking exceptions
2024-03-16 16:02:31,978:INFO:Importing libraries
2024-03-16 16:02:31,978:INFO:Copying training dataset
2024-03-16 16:02:32,015:INFO:Defining folds
2024-03-16 16:02:32,016:INFO:Declaring metric variables
2024-03-16 16:02:32,029:INFO:Importing untrained model
2024-03-16 16:02:32,041:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:02:32,063:INFO:Starting cross validation
2024-03-16 16:02:32,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:37,950:INFO:Calculating mean and std
2024-03-16 16:02:37,956:INFO:Creating metrics dataframe
2024-03-16 16:02:37,960:INFO:Uploading results into container
2024-03-16 16:02:37,961:INFO:Uploading model into container now
2024-03-16 16:02:37,962:INFO:_master_model_container: 14
2024-03-16 16:02:37,963:INFO:_display_container: 2
2024-03-16 16:02:37,965:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:37,965:INFO:create_model() successfully completed......................................
2024-03-16 16:02:38,176:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:38,176:INFO:Creating metrics dataframe
2024-03-16 16:02:38,204:INFO:Initializing AdaBoost Regressor
2024-03-16 16:02:38,205:INFO:Total runtime is 0.4482420643170674 minutes
2024-03-16 16:02:38,212:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:38,212:INFO:Initializing create_model()
2024-03-16 16:02:38,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:38,213:INFO:Checking exceptions
2024-03-16 16:02:38,213:INFO:Importing libraries
2024-03-16 16:02:38,214:INFO:Copying training dataset
2024-03-16 16:02:38,240:INFO:Defining folds
2024-03-16 16:02:38,243:INFO:Declaring metric variables
2024-03-16 16:02:38,252:INFO:Importing untrained model
2024-03-16 16:02:38,264:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:02:38,281:INFO:Starting cross validation
2024-03-16 16:02:38,285:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:39,480:INFO:Calculating mean and std
2024-03-16 16:02:39,482:INFO:Creating metrics dataframe
2024-03-16 16:02:39,488:INFO:Uploading results into container
2024-03-16 16:02:39,489:INFO:Uploading model into container now
2024-03-16 16:02:39,490:INFO:_master_model_container: 15
2024-03-16 16:02:39,491:INFO:_display_container: 2
2024-03-16 16:02:39,491:INFO:AdaBoostRegressor(random_state=2617)
2024-03-16 16:02:39,492:INFO:create_model() successfully completed......................................
2024-03-16 16:02:39,761:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:39,762:INFO:Creating metrics dataframe
2024-03-16 16:02:39,788:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:02:39,789:INFO:Total runtime is 0.4746328035990397 minutes
2024-03-16 16:02:39,799:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:39,800:INFO:Initializing create_model()
2024-03-16 16:02:39,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:39,801:INFO:Checking exceptions
2024-03-16 16:02:39,801:INFO:Importing libraries
2024-03-16 16:02:39,801:INFO:Copying training dataset
2024-03-16 16:02:39,857:INFO:Defining folds
2024-03-16 16:02:39,857:INFO:Declaring metric variables
2024-03-16 16:02:39,865:INFO:Importing untrained model
2024-03-16 16:02:39,880:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:02:39,904:INFO:Starting cross validation
2024-03-16 16:02:39,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:42,366:INFO:Calculating mean and std
2024-03-16 16:02:42,369:INFO:Creating metrics dataframe
2024-03-16 16:02:42,374:INFO:Uploading results into container
2024-03-16 16:02:42,375:INFO:Uploading model into container now
2024-03-16 16:02:42,376:INFO:_master_model_container: 16
2024-03-16 16:02:42,376:INFO:_display_container: 2
2024-03-16 16:02:42,378:INFO:GradientBoostingRegressor(random_state=2617)
2024-03-16 16:02:42,378:INFO:create_model() successfully completed......................................
2024-03-16 16:02:42,551:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:42,551:INFO:Creating metrics dataframe
2024-03-16 16:02:42,576:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:02:42,576:INFO:Total runtime is 0.5210813601811727 minutes
2024-03-16 16:02:42,582:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:42,583:INFO:Initializing create_model()
2024-03-16 16:02:42,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:42,583:INFO:Checking exceptions
2024-03-16 16:02:42,583:INFO:Importing libraries
2024-03-16 16:02:42,583:INFO:Copying training dataset
2024-03-16 16:02:42,603:INFO:Defining folds
2024-03-16 16:02:42,603:INFO:Declaring metric variables
2024-03-16 16:02:42,611:INFO:Importing untrained model
2024-03-16 16:02:42,618:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:02:42,637:INFO:Starting cross validation
2024-03-16 16:02:42,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:45,000:INFO:Calculating mean and std
2024-03-16 16:02:45,003:INFO:Creating metrics dataframe
2024-03-16 16:02:45,007:INFO:Uploading results into container
2024-03-16 16:02:45,008:INFO:Uploading model into container now
2024-03-16 16:02:45,009:INFO:_master_model_container: 17
2024-03-16 16:02:45,009:INFO:_display_container: 2
2024-03-16 16:02:45,011:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2617, ...)
2024-03-16 16:02:45,012:INFO:create_model() successfully completed......................................
2024-03-16 16:02:45,197:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:45,197:INFO:Creating metrics dataframe
2024-03-16 16:02:45,221:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:02:45,222:INFO:Total runtime is 0.5651868581771851 minutes
2024-03-16 16:02:45,228:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:45,229:INFO:Initializing create_model()
2024-03-16 16:02:45,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:45,229:INFO:Checking exceptions
2024-03-16 16:02:45,230:INFO:Importing libraries
2024-03-16 16:02:45,230:INFO:Copying training dataset
2024-03-16 16:02:45,249:INFO:Defining folds
2024-03-16 16:02:45,250:INFO:Declaring metric variables
2024-03-16 16:02:45,258:INFO:Importing untrained model
2024-03-16 16:02:45,264:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:02:45,280:INFO:Starting cross validation
2024-03-16 16:02:45,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:51,138:INFO:Calculating mean and std
2024-03-16 16:02:51,141:INFO:Creating metrics dataframe
2024-03-16 16:02:51,149:INFO:Uploading results into container
2024-03-16 16:02:51,151:INFO:Uploading model into container now
2024-03-16 16:02:51,152:INFO:_master_model_container: 18
2024-03-16 16:02:51,152:INFO:_display_container: 2
2024-03-16 16:02:51,154:INFO:LGBMRegressor(n_jobs=-1, random_state=2617)
2024-03-16 16:02:51,155:INFO:create_model() successfully completed......................................
2024-03-16 16:02:51,373:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:51,374:INFO:Creating metrics dataframe
2024-03-16 16:02:51,402:INFO:Initializing Dummy Regressor
2024-03-16 16:02:51,403:INFO:Total runtime is 0.6682009855906168 minutes
2024-03-16 16:02:51,412:INFO:SubProcess create_model() called ==================================
2024-03-16 16:02:51,413:INFO:Initializing create_model()
2024-03-16 16:02:51,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8541C9250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:51,413:INFO:Checking exceptions
2024-03-16 16:02:51,413:INFO:Importing libraries
2024-03-16 16:02:51,414:INFO:Copying training dataset
2024-03-16 16:02:51,434:INFO:Defining folds
2024-03-16 16:02:51,434:INFO:Declaring metric variables
2024-03-16 16:02:51,443:INFO:Importing untrained model
2024-03-16 16:02:51,449:INFO:Dummy Regressor Imported successfully
2024-03-16 16:02:51,462:INFO:Starting cross validation
2024-03-16 16:02:51,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:02:51,766:INFO:Calculating mean and std
2024-03-16 16:02:51,769:INFO:Creating metrics dataframe
2024-03-16 16:02:51,773:INFO:Uploading results into container
2024-03-16 16:02:51,774:INFO:Uploading model into container now
2024-03-16 16:02:51,774:INFO:_master_model_container: 19
2024-03-16 16:02:51,775:INFO:_display_container: 2
2024-03-16 16:02:51,775:INFO:DummyRegressor()
2024-03-16 16:02:51,776:INFO:create_model() successfully completed......................................
2024-03-16 16:02:51,962:INFO:SubProcess create_model() end ==================================
2024-03-16 16:02:51,962:INFO:Creating metrics dataframe
2024-03-16 16:02:51,995:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:02:52,015:INFO:Initializing create_model()
2024-03-16 16:02:52,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ElasticNet(random_state=2617), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:02:52,015:INFO:Checking exceptions
2024-03-16 16:02:52,018:INFO:Importing libraries
2024-03-16 16:02:52,018:INFO:Copying training dataset
2024-03-16 16:02:52,042:INFO:Defining folds
2024-03-16 16:02:52,042:INFO:Declaring metric variables
2024-03-16 16:02:52,043:INFO:Importing untrained model
2024-03-16 16:02:52,043:INFO:Declaring custom model
2024-03-16 16:02:52,044:INFO:Elastic Net Imported successfully
2024-03-16 16:02:52,046:INFO:Cross validation set to False
2024-03-16 16:02:52,046:INFO:Fitting Model
2024-03-16 16:02:52,150:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.067e+06, tolerance: 1.350e+04
  model = cd_fast.enet_coordinate_descent(

2024-03-16 16:02:52,152:INFO:ElasticNet(random_state=2617)
2024-03-16 16:02:52,152:INFO:create_model() successfully completed......................................
2024-03-16 16:02:52,409:INFO:Creating Dashboard logs
2024-03-16 16:02:52,418:INFO:Model: Elastic Net
2024-03-16 16:02:52,482:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 2617, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:02:52,659:INFO:Initializing predict_model()
2024-03-16 16:02:52,660:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A3EC110>, estimator=ElasticNet(random_state=2617), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B85A83A5C0>)
2024-03-16 16:02:52,660:INFO:Checking exceptions
2024-03-16 16:02:52,661:INFO:Preloading libraries
2024-03-16 16:02:53,083:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:02:53,534:INFO:Creating Dashboard logs
2024-03-16 16:02:53,540:INFO:Model: Bayesian Ridge
2024-03-16 16:02:53,610:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:02:54,071:INFO:Creating Dashboard logs
2024-03-16 16:02:54,079:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:02:54,152:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 2617, 'verbose': False}
2024-03-16 16:02:54,495:INFO:Creating Dashboard logs
2024-03-16 16:02:54,500:INFO:Model: Lasso Regression
2024-03-16 16:02:54,553:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 2617, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:02:54,938:INFO:Creating Dashboard logs
2024-03-16 16:02:54,949:INFO:Model: Ridge Regression
2024-03-16 16:02:55,073:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 2617, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:02:55,485:INFO:Creating Dashboard logs
2024-03-16 16:02:55,490:INFO:Model: Linear Regression
2024-03-16 16:02:55,544:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:02:55,830:INFO:Creating Dashboard logs
2024-03-16 16:02:55,835:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:02:55,888:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:02:56,146:INFO:Creating Dashboard logs
2024-03-16 16:02:56,151:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:02:56,195:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 2617, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:56,513:INFO:Creating Dashboard logs
2024-03-16 16:02:56,520:INFO:Model: Huber Regressor
2024-03-16 16:02:56,581:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:02:56,903:INFO:Creating Dashboard logs
2024-03-16 16:02:56,909:INFO:Model: Random Forest Regressor
2024-03-16 16:02:56,972:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 2617, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:57,343:INFO:Creating Dashboard logs
2024-03-16 16:02:57,348:INFO:Model: Extra Trees Regressor
2024-03-16 16:02:57,405:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 2617, 'verbose': 0, 'warm_start': False}
2024-03-16 16:02:57,856:INFO:Creating Dashboard logs
2024-03-16 16:02:57,862:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:02:57,923:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 2617, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:02:58,327:INFO:Creating Dashboard logs
2024-03-16 16:02:58,333:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:02:58,389:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 2617, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:02:58,763:INFO:Creating Dashboard logs
2024-03-16 16:02:58,767:INFO:Model: K Neighbors Regressor
2024-03-16 16:02:58,814:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:02:59,142:INFO:Creating Dashboard logs
2024-03-16 16:02:59,147:INFO:Model: AdaBoost Regressor
2024-03-16 16:02:59,212:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 2617}
2024-03-16 16:02:59,484:INFO:Creating Dashboard logs
2024-03-16 16:02:59,489:INFO:Model: Decision Tree Regressor
2024-03-16 16:02:59,530:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 2617, 'splitter': 'best'}
2024-03-16 16:02:59,815:INFO:Creating Dashboard logs
2024-03-16 16:02:59,822:INFO:Model: Dummy Regressor
2024-03-16 16:02:59,866:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:03:00,197:INFO:Creating Dashboard logs
2024-03-16 16:03:00,204:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:03:00,268:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 2617, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:03:00,578:INFO:Creating Dashboard logs
2024-03-16 16:03:00,582:INFO:Model: Least Angle Regression
2024-03-16 16:03:00,633:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 2617, 'verbose': False}
2024-03-16 16:03:01,047:INFO:_master_model_container: 19
2024-03-16 16:03:01,047:INFO:_display_container: 2
2024-03-16 16:03:01,048:INFO:ElasticNet(random_state=2617)
2024-03-16 16:03:01,048:INFO:compare_models() successfully completed......................................
2024-03-16 16:03:42,167:INFO:PyCaret RegressionExperiment
2024-03-16 16:03:42,167:INFO:Logging name: reg-default-name
2024-03-16 16:03:42,167:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:03:42,167:INFO:version 3.3.0
2024-03-16 16:03:42,167:INFO:Initializing setup()
2024-03-16 16:03:42,168:INFO:self.USI: 94fd
2024-03-16 16:03:42,168:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:03:42,168:INFO:Checking environment
2024-03-16 16:03:42,168:INFO:python_version: 3.11.5
2024-03-16 16:03:42,168:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:03:42,168:INFO:machine: AMD64
2024-03-16 16:03:42,168:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:03:42,168:INFO:Memory: svmem(total=34129678336, available=11868643328, percent=65.2, used=22261035008, free=11868643328)
2024-03-16 16:03:42,168:INFO:Physical Core: 6
2024-03-16 16:03:42,169:INFO:Logical Core: 12
2024-03-16 16:03:42,169:INFO:Checking libraries
2024-03-16 16:03:42,169:INFO:System:
2024-03-16 16:03:42,169:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:03:42,169:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:03:42,169:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:03:42,169:INFO:PyCaret required dependencies:
2024-03-16 16:03:42,169:INFO:                 pip: 24.0
2024-03-16 16:03:42,169:INFO:          setuptools: 68.0.0
2024-03-16 16:03:42,170:INFO:             pycaret: 3.3.0
2024-03-16 16:03:42,170:INFO:             IPython: 8.15.0
2024-03-16 16:03:42,170:INFO:          ipywidgets: 8.0.4
2024-03-16 16:03:42,170:INFO:                tqdm: 4.65.0
2024-03-16 16:03:42,170:INFO:               numpy: 1.24.3
2024-03-16 16:03:42,170:INFO:              pandas: 2.0.3
2024-03-16 16:03:42,170:INFO:              jinja2: 3.1.2
2024-03-16 16:03:42,170:INFO:               scipy: 1.11.1
2024-03-16 16:03:42,170:INFO:              joblib: 1.2.0
2024-03-16 16:03:42,170:INFO:             sklearn: 1.3.0
2024-03-16 16:03:42,170:INFO:                pyod: 1.1.3
2024-03-16 16:03:42,171:INFO:            imblearn: 0.10.1
2024-03-16 16:03:42,171:INFO:   category_encoders: 2.6.3
2024-03-16 16:03:42,171:INFO:            lightgbm: 4.3.0
2024-03-16 16:03:42,171:INFO:               numba: 0.57.1
2024-03-16 16:03:42,171:INFO:            requests: 2.31.0
2024-03-16 16:03:42,171:INFO:          matplotlib: 3.7.2
2024-03-16 16:03:42,171:INFO:          scikitplot: 0.3.7
2024-03-16 16:03:42,171:INFO:         yellowbrick: 1.5
2024-03-16 16:03:42,171:INFO:              plotly: 5.9.0
2024-03-16 16:03:42,171:INFO:    plotly-resampler: Not installed
2024-03-16 16:03:42,171:INFO:             kaleido: 0.2.1
2024-03-16 16:03:42,171:INFO:           schemdraw: 0.15
2024-03-16 16:03:42,171:INFO:         statsmodels: 0.14.0
2024-03-16 16:03:42,172:INFO:              sktime: 0.27.0
2024-03-16 16:03:42,172:INFO:               tbats: 1.1.3
2024-03-16 16:03:42,172:INFO:            pmdarima: 2.0.4
2024-03-16 16:03:42,172:INFO:              psutil: 5.9.0
2024-03-16 16:03:42,172:INFO:          markupsafe: 2.1.1
2024-03-16 16:03:42,172:INFO:             pickle5: Not installed
2024-03-16 16:03:42,172:INFO:         cloudpickle: 2.2.1
2024-03-16 16:03:42,172:INFO:         deprecation: 2.1.0
2024-03-16 16:03:42,172:INFO:              xxhash: 2.0.2
2024-03-16 16:03:42,172:INFO:           wurlitzer: Not installed
2024-03-16 16:03:42,172:INFO:PyCaret optional dependencies:
2024-03-16 16:03:42,173:INFO:                shap: Not installed
2024-03-16 16:03:42,173:INFO:           interpret: Not installed
2024-03-16 16:03:42,173:INFO:                umap: Not installed
2024-03-16 16:03:42,173:INFO:     ydata_profiling: Not installed
2024-03-16 16:03:42,173:INFO:  explainerdashboard: Not installed
2024-03-16 16:03:42,173:INFO:             autoviz: Not installed
2024-03-16 16:03:42,173:INFO:           fairlearn: Not installed
2024-03-16 16:03:42,173:INFO:          deepchecks: Not installed
2024-03-16 16:03:42,173:INFO:             xgboost: 2.0.3
2024-03-16 16:03:42,174:INFO:            catboost: Not installed
2024-03-16 16:03:42,174:INFO:              kmodes: Not installed
2024-03-16 16:03:42,174:INFO:             mlxtend: Not installed
2024-03-16 16:03:42,174:INFO:       statsforecast: Not installed
2024-03-16 16:03:42,174:INFO:        tune_sklearn: Not installed
2024-03-16 16:03:42,174:INFO:                 ray: Not installed
2024-03-16 16:03:42,174:INFO:            hyperopt: Not installed
2024-03-16 16:03:42,174:INFO:              optuna: Not installed
2024-03-16 16:03:42,174:INFO:               skopt: Not installed
2024-03-16 16:03:42,174:INFO:              mlflow: 2.11.1
2024-03-16 16:03:42,175:INFO:              gradio: Not installed
2024-03-16 16:03:42,175:INFO:             fastapi: Not installed
2024-03-16 16:03:42,175:INFO:             uvicorn: Not installed
2024-03-16 16:03:42,175:INFO:              m2cgen: Not installed
2024-03-16 16:03:42,175:INFO:           evidently: Not installed
2024-03-16 16:03:42,175:INFO:               fugue: Not installed
2024-03-16 16:03:42,175:INFO:           streamlit: Not installed
2024-03-16 16:03:42,175:INFO:             prophet: Not installed
2024-03-16 16:03:42,175:INFO:None
2024-03-16 16:03:42,175:INFO:Set up data.
2024-03-16 16:03:42,188:INFO:Set up folding strategy.
2024-03-16 16:03:42,188:INFO:Set up train/test split.
2024-03-16 16:03:42,199:INFO:Set up index.
2024-03-16 16:03:42,199:INFO:Assigning column types.
2024-03-16 16:03:42,212:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:03:42,212:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,219:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,392:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,397:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,404:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,411:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,570:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,574:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:03:42,581:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,776:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,787:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,795:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:42,949:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:42,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:42,954:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:03:42,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,141:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,159:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,308:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,312:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:03:43,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,503:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,617:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,681:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:03:43,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:43,851:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:43,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:43,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:03:44,099:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,105:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:03:44,283:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,463:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:44,468:INFO:Preparing preprocessing pipeline...
2024-03-16 16:03:44,468:INFO:Set up simple imputation.
2024-03-16 16:03:44,470:INFO:Set up column name cleaning.
2024-03-16 16:03:44,520:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:03:44,528:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:03:44,528:INFO:Creating final display dataframe.
2024-03-16 16:03:44,732:INFO:Setup _display_container:                     Description             Value
0                    Session id              3606
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 28)
4        Transformed data shape        (1859, 28)
5   Transformed train set shape        (1301, 28)
6    Transformed test set shape         (558, 28)
7              Numeric features                27
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              94fd
2024-03-16 16:03:44,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:44,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:45,100:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:03:45,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:03:45,104:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:03:45,104:INFO:Logging experiment in loggers
2024-03-16 16:03:45,180:INFO:SubProcess save_model() called ==================================
2024-03-16 16:03:45,196:INFO:Initializing save_model()
2024-03-16 16:03:45,196:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp8owjozmw\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:03:45,196:INFO:Adding model into prep_pipe
2024-03-16 16:03:45,196:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:03:45,200:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp8owjozmw\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:03:45,208:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:03:45,208:INFO:save_model() successfully completed......................................
2024-03-16 16:03:45,347:INFO:SubProcess save_model() end ==================================
2024-03-16 16:03:45,366:INFO:setup() successfully completed in 2.94s...............
2024-03-16 16:03:45,366:INFO:Initializing compare_models()
2024-03-16 16:03:45,366:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:03:45,366:INFO:Checking exceptions
2024-03-16 16:03:45,370:INFO:Preparing display monitor
2024-03-16 16:03:45,407:INFO:Initializing Linear Regression
2024-03-16 16:03:45,407:INFO:Total runtime is 1.6697247823079427e-05 minutes
2024-03-16 16:03:45,412:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:45,413:INFO:Initializing create_model()
2024-03-16 16:03:45,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:45,413:INFO:Checking exceptions
2024-03-16 16:03:45,413:INFO:Importing libraries
2024-03-16 16:03:45,413:INFO:Copying training dataset
2024-03-16 16:03:45,434:INFO:Defining folds
2024-03-16 16:03:45,434:INFO:Declaring metric variables
2024-03-16 16:03:45,440:INFO:Importing untrained model
2024-03-16 16:03:45,447:INFO:Linear Regression Imported successfully
2024-03-16 16:03:45,457:INFO:Starting cross validation
2024-03-16 16:03:45,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:45,642:INFO:Calculating mean and std
2024-03-16 16:03:45,642:INFO:Creating metrics dataframe
2024-03-16 16:03:45,646:INFO:Uploading results into container
2024-03-16 16:03:45,647:INFO:Uploading model into container now
2024-03-16 16:03:45,647:INFO:_master_model_container: 1
2024-03-16 16:03:45,648:INFO:_display_container: 2
2024-03-16 16:03:45,648:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:03:45,648:INFO:create_model() successfully completed......................................
2024-03-16 16:03:45,793:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:45,793:INFO:Creating metrics dataframe
2024-03-16 16:03:45,804:INFO:Initializing Lasso Regression
2024-03-16 16:03:45,804:INFO:Total runtime is 0.006628155708312988 minutes
2024-03-16 16:03:45,809:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:45,810:INFO:Initializing create_model()
2024-03-16 16:03:45,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:45,810:INFO:Checking exceptions
2024-03-16 16:03:45,810:INFO:Importing libraries
2024-03-16 16:03:45,810:INFO:Copying training dataset
2024-03-16 16:03:45,824:INFO:Defining folds
2024-03-16 16:03:45,824:INFO:Declaring metric variables
2024-03-16 16:03:45,829:INFO:Importing untrained model
2024-03-16 16:03:45,836:INFO:Lasso Regression Imported successfully
2024-03-16 16:03:45,847:INFO:Starting cross validation
2024-03-16 16:03:45,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,014:INFO:Calculating mean and std
2024-03-16 16:03:46,015:INFO:Creating metrics dataframe
2024-03-16 16:03:46,018:INFO:Uploading results into container
2024-03-16 16:03:46,019:INFO:Uploading model into container now
2024-03-16 16:03:46,019:INFO:_master_model_container: 2
2024-03-16 16:03:46,019:INFO:_display_container: 2
2024-03-16 16:03:46,020:INFO:Lasso(random_state=3606)
2024-03-16 16:03:46,020:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,191:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,191:INFO:Creating metrics dataframe
2024-03-16 16:03:46,202:INFO:Initializing Ridge Regression
2024-03-16 16:03:46,202:INFO:Total runtime is 0.01326359510421753 minutes
2024-03-16 16:03:46,208:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:46,209:INFO:Initializing create_model()
2024-03-16 16:03:46,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:46,210:INFO:Checking exceptions
2024-03-16 16:03:46,210:INFO:Importing libraries
2024-03-16 16:03:46,210:INFO:Copying training dataset
2024-03-16 16:03:46,224:INFO:Defining folds
2024-03-16 16:03:46,224:INFO:Declaring metric variables
2024-03-16 16:03:46,230:INFO:Importing untrained model
2024-03-16 16:03:46,238:INFO:Ridge Regression Imported successfully
2024-03-16 16:03:46,252:INFO:Starting cross validation
2024-03-16 16:03:46,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,315:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.47597e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,331:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.39978e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,341:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.48754e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,362:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.44382e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,376:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.462e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,385:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.69887e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,402:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.40025e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,413:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.5402e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,422:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.65e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,431:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.60122e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:03:46,448:INFO:Calculating mean and std
2024-03-16 16:03:46,450:INFO:Creating metrics dataframe
2024-03-16 16:03:46,453:INFO:Uploading results into container
2024-03-16 16:03:46,454:INFO:Uploading model into container now
2024-03-16 16:03:46,455:INFO:_master_model_container: 3
2024-03-16 16:03:46,455:INFO:_display_container: 2
2024-03-16 16:03:46,456:INFO:Ridge(random_state=3606)
2024-03-16 16:03:46,456:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,604:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,604:INFO:Creating metrics dataframe
2024-03-16 16:03:46,615:INFO:Initializing Elastic Net
2024-03-16 16:03:46,615:INFO:Total runtime is 0.02013799746831258 minutes
2024-03-16 16:03:46,621:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:46,622:INFO:Initializing create_model()
2024-03-16 16:03:46,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:46,622:INFO:Checking exceptions
2024-03-16 16:03:46,622:INFO:Importing libraries
2024-03-16 16:03:46,622:INFO:Copying training dataset
2024-03-16 16:03:46,636:INFO:Defining folds
2024-03-16 16:03:46,637:INFO:Declaring metric variables
2024-03-16 16:03:46,643:INFO:Importing untrained model
2024-03-16 16:03:46,648:INFO:Elastic Net Imported successfully
2024-03-16 16:03:46,659:INFO:Starting cross validation
2024-03-16 16:03:46,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:46,823:INFO:Calculating mean and std
2024-03-16 16:03:46,824:INFO:Creating metrics dataframe
2024-03-16 16:03:46,828:INFO:Uploading results into container
2024-03-16 16:03:46,829:INFO:Uploading model into container now
2024-03-16 16:03:46,830:INFO:_master_model_container: 4
2024-03-16 16:03:46,830:INFO:_display_container: 2
2024-03-16 16:03:46,830:INFO:ElasticNet(random_state=3606)
2024-03-16 16:03:46,831:INFO:create_model() successfully completed......................................
2024-03-16 16:03:46,991:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:46,991:INFO:Creating metrics dataframe
2024-03-16 16:03:47,005:INFO:Initializing Least Angle Regression
2024-03-16 16:03:47,006:INFO:Total runtime is 0.026662973562876384 minutes
2024-03-16 16:03:47,011:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,011:INFO:Initializing create_model()
2024-03-16 16:03:47,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,013:INFO:Checking exceptions
2024-03-16 16:03:47,013:INFO:Importing libraries
2024-03-16 16:03:47,013:INFO:Copying training dataset
2024-03-16 16:03:47,031:INFO:Defining folds
2024-03-16 16:03:47,032:INFO:Declaring metric variables
2024-03-16 16:03:47,037:INFO:Importing untrained model
2024-03-16 16:03:47,043:INFO:Least Angle Regression Imported successfully
2024-03-16 16:03:47,055:INFO:Starting cross validation
2024-03-16 16:03:47,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:47,259:INFO:Calculating mean and std
2024-03-16 16:03:47,261:INFO:Creating metrics dataframe
2024-03-16 16:03:47,264:INFO:Uploading results into container
2024-03-16 16:03:47,265:INFO:Uploading model into container now
2024-03-16 16:03:47,266:INFO:_master_model_container: 5
2024-03-16 16:03:47,267:INFO:_display_container: 2
2024-03-16 16:03:47,268:INFO:Lars(random_state=3606)
2024-03-16 16:03:47,268:INFO:create_model() successfully completed......................................
2024-03-16 16:03:47,491:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:47,491:INFO:Creating metrics dataframe
2024-03-16 16:03:47,510:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:03:47,510:INFO:Total runtime is 0.03505577246348063 minutes
2024-03-16 16:03:47,516:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,517:INFO:Initializing create_model()
2024-03-16 16:03:47,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,518:INFO:Checking exceptions
2024-03-16 16:03:47,518:INFO:Importing libraries
2024-03-16 16:03:47,518:INFO:Copying training dataset
2024-03-16 16:03:47,534:INFO:Defining folds
2024-03-16 16:03:47,534:INFO:Declaring metric variables
2024-03-16 16:03:47,543:INFO:Importing untrained model
2024-03-16 16:03:47,549:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:03:47,563:INFO:Starting cross validation
2024-03-16 16:03:47,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:47,763:INFO:Calculating mean and std
2024-03-16 16:03:47,765:INFO:Creating metrics dataframe
2024-03-16 16:03:47,770:INFO:Uploading results into container
2024-03-16 16:03:47,771:INFO:Uploading model into container now
2024-03-16 16:03:47,772:INFO:_master_model_container: 6
2024-03-16 16:03:47,772:INFO:_display_container: 2
2024-03-16 16:03:47,773:INFO:LassoLars(random_state=3606)
2024-03-16 16:03:47,774:INFO:create_model() successfully completed......................................
2024-03-16 16:03:47,927:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:47,928:INFO:Creating metrics dataframe
2024-03-16 16:03:47,939:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:03:47,940:INFO:Total runtime is 0.04222753445307413 minutes
2024-03-16 16:03:47,945:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:47,946:INFO:Initializing create_model()
2024-03-16 16:03:47,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:47,946:INFO:Checking exceptions
2024-03-16 16:03:47,946:INFO:Importing libraries
2024-03-16 16:03:47,946:INFO:Copying training dataset
2024-03-16 16:03:47,959:INFO:Defining folds
2024-03-16 16:03:47,960:INFO:Declaring metric variables
2024-03-16 16:03:47,965:INFO:Importing untrained model
2024-03-16 16:03:47,973:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:03:47,985:INFO:Starting cross validation
2024-03-16 16:03:47,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,164:INFO:Calculating mean and std
2024-03-16 16:03:48,165:INFO:Creating metrics dataframe
2024-03-16 16:03:48,168:INFO:Uploading results into container
2024-03-16 16:03:48,169:INFO:Uploading model into container now
2024-03-16 16:03:48,170:INFO:_master_model_container: 7
2024-03-16 16:03:48,171:INFO:_display_container: 2
2024-03-16 16:03:48,172:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:03:48,172:INFO:create_model() successfully completed......................................
2024-03-16 16:03:48,319:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:48,319:INFO:Creating metrics dataframe
2024-03-16 16:03:48,331:INFO:Initializing Bayesian Ridge
2024-03-16 16:03:48,331:INFO:Total runtime is 0.0487462560335795 minutes
2024-03-16 16:03:48,336:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:48,336:INFO:Initializing create_model()
2024-03-16 16:03:48,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:48,337:INFO:Checking exceptions
2024-03-16 16:03:48,337:INFO:Importing libraries
2024-03-16 16:03:48,337:INFO:Copying training dataset
2024-03-16 16:03:48,351:INFO:Defining folds
2024-03-16 16:03:48,351:INFO:Declaring metric variables
2024-03-16 16:03:48,358:INFO:Importing untrained model
2024-03-16 16:03:48,365:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:03:48,382:INFO:Starting cross validation
2024-03-16 16:03:48,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,566:INFO:Calculating mean and std
2024-03-16 16:03:48,569:INFO:Creating metrics dataframe
2024-03-16 16:03:48,571:INFO:Uploading results into container
2024-03-16 16:03:48,572:INFO:Uploading model into container now
2024-03-16 16:03:48,574:INFO:_master_model_container: 8
2024-03-16 16:03:48,574:INFO:_display_container: 2
2024-03-16 16:03:48,575:INFO:BayesianRidge()
2024-03-16 16:03:48,576:INFO:create_model() successfully completed......................................
2024-03-16 16:03:48,739:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:48,739:INFO:Creating metrics dataframe
2024-03-16 16:03:48,755:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:03:48,755:INFO:Total runtime is 0.055818124612172434 minutes
2024-03-16 16:03:48,761:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:48,761:INFO:Initializing create_model()
2024-03-16 16:03:48,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:48,762:INFO:Checking exceptions
2024-03-16 16:03:48,762:INFO:Importing libraries
2024-03-16 16:03:48,762:INFO:Copying training dataset
2024-03-16 16:03:48,775:INFO:Defining folds
2024-03-16 16:03:48,776:INFO:Declaring metric variables
2024-03-16 16:03:48,781:INFO:Importing untrained model
2024-03-16 16:03:48,789:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:03:48,801:INFO:Starting cross validation
2024-03-16 16:03:48,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:48,981:INFO:Calculating mean and std
2024-03-16 16:03:48,983:INFO:Creating metrics dataframe
2024-03-16 16:03:48,986:INFO:Uploading results into container
2024-03-16 16:03:48,987:INFO:Uploading model into container now
2024-03-16 16:03:48,988:INFO:_master_model_container: 9
2024-03-16 16:03:48,988:INFO:_display_container: 2
2024-03-16 16:03:48,989:INFO:PassiveAggressiveRegressor(random_state=3606)
2024-03-16 16:03:48,990:INFO:create_model() successfully completed......................................
2024-03-16 16:03:49,148:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:49,148:INFO:Creating metrics dataframe
2024-03-16 16:03:49,161:INFO:Initializing Huber Regressor
2024-03-16 16:03:49,162:INFO:Total runtime is 0.06258682409922281 minutes
2024-03-16 16:03:49,167:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:49,167:INFO:Initializing create_model()
2024-03-16 16:03:49,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:49,168:INFO:Checking exceptions
2024-03-16 16:03:49,168:INFO:Importing libraries
2024-03-16 16:03:49,168:INFO:Copying training dataset
2024-03-16 16:03:49,185:INFO:Defining folds
2024-03-16 16:03:49,186:INFO:Declaring metric variables
2024-03-16 16:03:49,192:INFO:Importing untrained model
2024-03-16 16:03:49,198:INFO:Huber Regressor Imported successfully
2024-03-16 16:03:49,211:INFO:Starting cross validation
2024-03-16 16:03:49,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:49,395:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,416:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,448:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,460:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,464:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,479:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,498:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,522:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,523:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,535:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:03:49,557:INFO:Calculating mean and std
2024-03-16 16:03:49,560:INFO:Creating metrics dataframe
2024-03-16 16:03:49,563:INFO:Uploading results into container
2024-03-16 16:03:49,564:INFO:Uploading model into container now
2024-03-16 16:03:49,565:INFO:_master_model_container: 10
2024-03-16 16:03:49,566:INFO:_display_container: 2
2024-03-16 16:03:49,567:INFO:HuberRegressor()
2024-03-16 16:03:49,567:INFO:create_model() successfully completed......................................
2024-03-16 16:03:49,739:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:49,739:INFO:Creating metrics dataframe
2024-03-16 16:03:49,760:INFO:Initializing K Neighbors Regressor
2024-03-16 16:03:49,760:INFO:Total runtime is 0.07255718708038329 minutes
2024-03-16 16:03:49,767:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:49,768:INFO:Initializing create_model()
2024-03-16 16:03:49,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:49,768:INFO:Checking exceptions
2024-03-16 16:03:49,769:INFO:Importing libraries
2024-03-16 16:03:49,769:INFO:Copying training dataset
2024-03-16 16:03:49,784:INFO:Defining folds
2024-03-16 16:03:49,784:INFO:Declaring metric variables
2024-03-16 16:03:49,792:INFO:Importing untrained model
2024-03-16 16:03:49,799:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:03:49,812:INFO:Starting cross validation
2024-03-16 16:03:49,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:50,250:INFO:Calculating mean and std
2024-03-16 16:03:50,252:INFO:Creating metrics dataframe
2024-03-16 16:03:50,256:INFO:Uploading results into container
2024-03-16 16:03:50,256:INFO:Uploading model into container now
2024-03-16 16:03:50,258:INFO:_master_model_container: 11
2024-03-16 16:03:50,258:INFO:_display_container: 2
2024-03-16 16:03:50,259:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:03:50,259:INFO:create_model() successfully completed......................................
2024-03-16 16:03:50,446:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:50,446:INFO:Creating metrics dataframe
2024-03-16 16:03:50,468:INFO:Initializing Decision Tree Regressor
2024-03-16 16:03:50,469:INFO:Total runtime is 0.08435679674148559 minutes
2024-03-16 16:03:50,474:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:50,475:INFO:Initializing create_model()
2024-03-16 16:03:50,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:50,476:INFO:Checking exceptions
2024-03-16 16:03:50,476:INFO:Importing libraries
2024-03-16 16:03:50,476:INFO:Copying training dataset
2024-03-16 16:03:50,493:INFO:Defining folds
2024-03-16 16:03:50,494:INFO:Declaring metric variables
2024-03-16 16:03:50,501:INFO:Importing untrained model
2024-03-16 16:03:50,508:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:03:50,519:INFO:Starting cross validation
2024-03-16 16:03:50,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:50,789:INFO:Calculating mean and std
2024-03-16 16:03:50,791:INFO:Creating metrics dataframe
2024-03-16 16:03:50,794:INFO:Uploading results into container
2024-03-16 16:03:50,795:INFO:Uploading model into container now
2024-03-16 16:03:50,796:INFO:_master_model_container: 12
2024-03-16 16:03:50,796:INFO:_display_container: 2
2024-03-16 16:03:50,797:INFO:DecisionTreeRegressor(random_state=3606)
2024-03-16 16:03:50,797:INFO:create_model() successfully completed......................................
2024-03-16 16:03:50,968:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:50,969:INFO:Creating metrics dataframe
2024-03-16 16:03:50,987:INFO:Initializing Random Forest Regressor
2024-03-16 16:03:50,987:INFO:Total runtime is 0.09300813674926757 minutes
2024-03-16 16:03:50,996:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:50,996:INFO:Initializing create_model()
2024-03-16 16:03:50,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:50,997:INFO:Checking exceptions
2024-03-16 16:03:50,997:INFO:Importing libraries
2024-03-16 16:03:50,997:INFO:Copying training dataset
2024-03-16 16:03:51,014:INFO:Defining folds
2024-03-16 16:03:51,015:INFO:Declaring metric variables
2024-03-16 16:03:51,023:INFO:Importing untrained model
2024-03-16 16:03:51,029:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:03:51,041:INFO:Starting cross validation
2024-03-16 16:03:51,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:03:57,279:INFO:Calculating mean and std
2024-03-16 16:03:57,283:INFO:Creating metrics dataframe
2024-03-16 16:03:57,289:INFO:Uploading results into container
2024-03-16 16:03:57,291:INFO:Uploading model into container now
2024-03-16 16:03:57,292:INFO:_master_model_container: 13
2024-03-16 16:03:57,292:INFO:_display_container: 2
2024-03-16 16:03:57,293:INFO:RandomForestRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:03:57,294:INFO:create_model() successfully completed......................................
2024-03-16 16:03:57,526:INFO:SubProcess create_model() end ==================================
2024-03-16 16:03:57,526:INFO:Creating metrics dataframe
2024-03-16 16:03:57,555:INFO:Initializing Extra Trees Regressor
2024-03-16 16:03:57,555:INFO:Total runtime is 0.20248432556788126 minutes
2024-03-16 16:03:57,565:INFO:SubProcess create_model() called ==================================
2024-03-16 16:03:57,566:INFO:Initializing create_model()
2024-03-16 16:03:57,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:03:57,567:INFO:Checking exceptions
2024-03-16 16:03:57,567:INFO:Importing libraries
2024-03-16 16:03:57,567:INFO:Copying training dataset
2024-03-16 16:03:57,589:INFO:Defining folds
2024-03-16 16:03:57,589:INFO:Declaring metric variables
2024-03-16 16:03:57,599:INFO:Importing untrained model
2024-03-16 16:03:57,608:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:03:57,626:INFO:Starting cross validation
2024-03-16 16:03:57,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:01,384:INFO:Calculating mean and std
2024-03-16 16:04:01,388:INFO:Creating metrics dataframe
2024-03-16 16:04:01,394:INFO:Uploading results into container
2024-03-16 16:04:01,396:INFO:Uploading model into container now
2024-03-16 16:04:01,397:INFO:_master_model_container: 14
2024-03-16 16:04:01,397:INFO:_display_container: 2
2024-03-16 16:04:01,399:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:04:01,399:INFO:create_model() successfully completed......................................
2024-03-16 16:04:01,652:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:01,652:INFO:Creating metrics dataframe
2024-03-16 16:04:01,696:INFO:Initializing AdaBoost Regressor
2024-03-16 16:04:01,697:INFO:Total runtime is 0.2714920560518901 minutes
2024-03-16 16:04:01,709:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:01,710:INFO:Initializing create_model()
2024-03-16 16:04:01,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:01,711:INFO:Checking exceptions
2024-03-16 16:04:01,711:INFO:Importing libraries
2024-03-16 16:04:01,711:INFO:Copying training dataset
2024-03-16 16:04:01,745:INFO:Defining folds
2024-03-16 16:04:01,745:INFO:Declaring metric variables
2024-03-16 16:04:01,761:INFO:Importing untrained model
2024-03-16 16:04:01,773:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:04:01,799:INFO:Starting cross validation
2024-03-16 16:04:01,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:03,146:INFO:Calculating mean and std
2024-03-16 16:04:03,148:INFO:Creating metrics dataframe
2024-03-16 16:04:03,156:INFO:Uploading results into container
2024-03-16 16:04:03,158:INFO:Uploading model into container now
2024-03-16 16:04:03,160:INFO:_master_model_container: 15
2024-03-16 16:04:03,160:INFO:_display_container: 2
2024-03-16 16:04:03,162:INFO:AdaBoostRegressor(random_state=3606)
2024-03-16 16:04:03,162:INFO:create_model() successfully completed......................................
2024-03-16 16:04:03,353:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:03,353:INFO:Creating metrics dataframe
2024-03-16 16:04:03,376:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:04:03,376:INFO:Total runtime is 0.2994999368985494 minutes
2024-03-16 16:04:03,384:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:03,385:INFO:Initializing create_model()
2024-03-16 16:04:03,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:03,385:INFO:Checking exceptions
2024-03-16 16:04:03,385:INFO:Importing libraries
2024-03-16 16:04:03,386:INFO:Copying training dataset
2024-03-16 16:04:03,406:INFO:Defining folds
2024-03-16 16:04:03,408:INFO:Declaring metric variables
2024-03-16 16:04:03,417:INFO:Importing untrained model
2024-03-16 16:04:03,430:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:04:03,448:INFO:Starting cross validation
2024-03-16 16:04:03,450:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:05,338:INFO:Calculating mean and std
2024-03-16 16:04:05,340:INFO:Creating metrics dataframe
2024-03-16 16:04:05,344:INFO:Uploading results into container
2024-03-16 16:04:05,346:INFO:Uploading model into container now
2024-03-16 16:04:05,347:INFO:_master_model_container: 16
2024-03-16 16:04:05,347:INFO:_display_container: 2
2024-03-16 16:04:05,349:INFO:GradientBoostingRegressor(random_state=3606)
2024-03-16 16:04:05,350:INFO:create_model() successfully completed......................................
2024-03-16 16:04:05,528:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:05,528:INFO:Creating metrics dataframe
2024-03-16 16:04:05,554:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:04:05,555:INFO:Total runtime is 0.33580631812413536 minutes
2024-03-16 16:04:05,562:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:05,562:INFO:Initializing create_model()
2024-03-16 16:04:05,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:05,563:INFO:Checking exceptions
2024-03-16 16:04:05,563:INFO:Importing libraries
2024-03-16 16:04:05,563:INFO:Copying training dataset
2024-03-16 16:04:05,581:INFO:Defining folds
2024-03-16 16:04:05,581:INFO:Declaring metric variables
2024-03-16 16:04:05,590:INFO:Importing untrained model
2024-03-16 16:04:05,598:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:04:05,613:INFO:Starting cross validation
2024-03-16 16:04:05,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:07,620:INFO:Calculating mean and std
2024-03-16 16:04:07,625:INFO:Creating metrics dataframe
2024-03-16 16:04:07,634:INFO:Uploading results into container
2024-03-16 16:04:07,638:INFO:Uploading model into container now
2024-03-16 16:04:07,642:INFO:_master_model_container: 17
2024-03-16 16:04:07,642:INFO:_display_container: 2
2024-03-16 16:04:07,647:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3606, ...)
2024-03-16 16:04:07,647:INFO:create_model() successfully completed......................................
2024-03-16 16:04:07,845:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:07,845:INFO:Creating metrics dataframe
2024-03-16 16:04:07,874:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:04:07,875:INFO:Total runtime is 0.3744811137517294 minutes
2024-03-16 16:04:07,881:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:07,882:INFO:Initializing create_model()
2024-03-16 16:04:07,883:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:07,883:INFO:Checking exceptions
2024-03-16 16:04:07,883:INFO:Importing libraries
2024-03-16 16:04:07,884:INFO:Copying training dataset
2024-03-16 16:04:07,904:INFO:Defining folds
2024-03-16 16:04:07,904:INFO:Declaring metric variables
2024-03-16 16:04:07,911:INFO:Importing untrained model
2024-03-16 16:04:07,919:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:04:07,941:INFO:Starting cross validation
2024-03-16 16:04:07,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:12,800:INFO:Calculating mean and std
2024-03-16 16:04:12,804:INFO:Creating metrics dataframe
2024-03-16 16:04:12,810:INFO:Uploading results into container
2024-03-16 16:04:12,812:INFO:Uploading model into container now
2024-03-16 16:04:12,813:INFO:_master_model_container: 18
2024-03-16 16:04:12,813:INFO:_display_container: 2
2024-03-16 16:04:12,815:INFO:LGBMRegressor(n_jobs=-1, random_state=3606)
2024-03-16 16:04:12,815:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,013:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:13,013:INFO:Creating metrics dataframe
2024-03-16 16:04:13,034:INFO:Initializing Dummy Regressor
2024-03-16 16:04:13,034:INFO:Total runtime is 0.4604688445727031 minutes
2024-03-16 16:04:13,042:INFO:SubProcess create_model() called ==================================
2024-03-16 16:04:13,043:INFO:Initializing create_model()
2024-03-16 16:04:13,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546F97D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:13,043:INFO:Checking exceptions
2024-03-16 16:04:13,043:INFO:Importing libraries
2024-03-16 16:04:13,043:INFO:Copying training dataset
2024-03-16 16:04:13,061:INFO:Defining folds
2024-03-16 16:04:13,061:INFO:Declaring metric variables
2024-03-16 16:04:13,071:INFO:Importing untrained model
2024-03-16 16:04:13,079:INFO:Dummy Regressor Imported successfully
2024-03-16 16:04:13,093:INFO:Starting cross validation
2024-03-16 16:04:13,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:04:13,293:INFO:Calculating mean and std
2024-03-16 16:04:13,295:INFO:Creating metrics dataframe
2024-03-16 16:04:13,298:INFO:Uploading results into container
2024-03-16 16:04:13,299:INFO:Uploading model into container now
2024-03-16 16:04:13,300:INFO:_master_model_container: 19
2024-03-16 16:04:13,301:INFO:_display_container: 2
2024-03-16 16:04:13,301:INFO:DummyRegressor()
2024-03-16 16:04:13,302:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,453:INFO:SubProcess create_model() end ==================================
2024-03-16 16:04:13,453:INFO:Creating metrics dataframe
2024-03-16 16:04:13,472:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:04:13,488:INFO:Initializing create_model()
2024-03-16 16:04:13,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:04:13,488:INFO:Checking exceptions
2024-03-16 16:04:13,491:INFO:Importing libraries
2024-03-16 16:04:13,491:INFO:Copying training dataset
2024-03-16 16:04:13,504:INFO:Defining folds
2024-03-16 16:04:13,504:INFO:Declaring metric variables
2024-03-16 16:04:13,504:INFO:Importing untrained model
2024-03-16 16:04:13,504:INFO:Declaring custom model
2024-03-16 16:04:13,505:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:04:13,506:INFO:Cross validation set to False
2024-03-16 16:04:13,506:INFO:Fitting Model
2024-03-16 16:04:13,527:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:04:13,527:INFO:create_model() successfully completed......................................
2024-03-16 16:04:13,731:INFO:Creating Dashboard logs
2024-03-16 16:04:13,740:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:04:13,806:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:04:13,902:INFO:Initializing predict_model()
2024-03-16 16:04:13,902:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B8541C9610>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D4B9A80>)
2024-03-16 16:04:13,902:INFO:Checking exceptions
2024-03-16 16:04:13,902:INFO:Preloading libraries
2024-03-16 16:04:14,014:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:04:14,345:INFO:Creating Dashboard logs
2024-03-16 16:04:14,349:INFO:Model: Ridge Regression
2024-03-16 16:04:14,388:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3606, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:04:14,633:INFO:Creating Dashboard logs
2024-03-16 16:04:14,637:INFO:Model: Lasso Regression
2024-03-16 16:04:14,682:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3606, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:04:14,944:INFO:Creating Dashboard logs
2024-03-16 16:04:14,948:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:04:14,997:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3606, 'verbose': False}
2024-03-16 16:04:15,361:INFO:Creating Dashboard logs
2024-03-16 16:04:15,366:INFO:Model: Linear Regression
2024-03-16 16:04:15,408:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:04:15,670:INFO:Creating Dashboard logs
2024-03-16 16:04:15,674:INFO:Model: Elastic Net
2024-03-16 16:04:15,720:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3606, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:04:16,006:INFO:Creating Dashboard logs
2024-03-16 16:04:16,011:INFO:Model: Bayesian Ridge
2024-03-16 16:04:16,059:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:04:16,356:INFO:Creating Dashboard logs
2024-03-16 16:04:16,361:INFO:Model: Least Angle Regression
2024-03-16 16:04:16,415:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3606, 'verbose': False}
2024-03-16 16:04:16,727:INFO:Creating Dashboard logs
2024-03-16 16:04:16,732:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:04:16,785:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3606, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:17,146:INFO:Creating Dashboard logs
2024-03-16 16:04:17,152:INFO:Model: Huber Regressor
2024-03-16 16:04:17,202:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:04:17,497:INFO:Creating Dashboard logs
2024-03-16 16:04:17,505:INFO:Model: Extra Trees Regressor
2024-03-16 16:04:17,557:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3606, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:17,933:INFO:Creating Dashboard logs
2024-03-16 16:04:17,940:INFO:Model: Random Forest Regressor
2024-03-16 16:04:17,994:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3606, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:18,347:INFO:Creating Dashboard logs
2024-03-16 16:04:18,354:INFO:Model: K Neighbors Regressor
2024-03-16 16:04:18,418:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:04:18,717:INFO:Creating Dashboard logs
2024-03-16 16:04:18,722:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:04:18,771:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3606, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:04:19,104:INFO:Creating Dashboard logs
2024-03-16 16:04:19,110:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:04:19,164:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3606, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:04:19,471:INFO:Creating Dashboard logs
2024-03-16 16:04:19,476:INFO:Model: AdaBoost Regressor
2024-03-16 16:04:19,525:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3606}
2024-03-16 16:04:19,790:INFO:Creating Dashboard logs
2024-03-16 16:04:19,796:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:04:19,842:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3606, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:04:20,113:INFO:Creating Dashboard logs
2024-03-16 16:04:20,121:INFO:Model: Decision Tree Regressor
2024-03-16 16:04:20,179:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3606, 'splitter': 'best'}
2024-03-16 16:04:20,482:INFO:Creating Dashboard logs
2024-03-16 16:04:20,489:INFO:Model: Dummy Regressor
2024-03-16 16:04:20,541:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:04:20,898:INFO:_master_model_container: 19
2024-03-16 16:04:20,899:INFO:_display_container: 2
2024-03-16 16:04:20,900:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:04:20,900:INFO:compare_models() successfully completed......................................
2024-03-16 16:13:41,592:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,593:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,728:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,729:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,730:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,881:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,882:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:41,883:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,051:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,052:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,053:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,235:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,236:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,237:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,491:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,491:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:13:42,492:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,633:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,634:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:19:29,635:WARNING:d:\Code\Anaconda\Lib\site-packages\seaborn\_oldcore.py:1498: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if pd.api.types.is_categorical_dtype(vector):

2024-03-16 16:37:40,475:INFO:PyCaret RegressionExperiment
2024-03-16 16:37:40,475:INFO:Logging name: reg-default-name
2024-03-16 16:37:40,475:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:37:40,475:INFO:version 3.3.0
2024-03-16 16:37:40,475:INFO:Initializing setup()
2024-03-16 16:37:40,476:INFO:self.USI: 17b7
2024-03-16 16:37:40,476:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:37:40,476:INFO:Checking environment
2024-03-16 16:37:40,476:INFO:python_version: 3.11.5
2024-03-16 16:37:40,476:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:37:40,476:INFO:machine: AMD64
2024-03-16 16:37:40,476:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:37:40,476:INFO:Memory: svmem(total=34129678336, available=15341006848, percent=55.1, used=18788671488, free=15341006848)
2024-03-16 16:37:40,476:INFO:Physical Core: 6
2024-03-16 16:37:40,476:INFO:Logical Core: 12
2024-03-16 16:37:40,476:INFO:Checking libraries
2024-03-16 16:37:40,476:INFO:System:
2024-03-16 16:37:40,476:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:37:40,476:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:37:40,476:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:37:40,477:INFO:PyCaret required dependencies:
2024-03-16 16:37:40,477:INFO:                 pip: 24.0
2024-03-16 16:37:40,477:INFO:          setuptools: 68.0.0
2024-03-16 16:37:40,477:INFO:             pycaret: 3.3.0
2024-03-16 16:37:40,477:INFO:             IPython: 8.15.0
2024-03-16 16:37:40,477:INFO:          ipywidgets: 8.0.4
2024-03-16 16:37:40,477:INFO:                tqdm: 4.65.0
2024-03-16 16:37:40,477:INFO:               numpy: 1.24.3
2024-03-16 16:37:40,477:INFO:              pandas: 2.0.3
2024-03-16 16:37:40,477:INFO:              jinja2: 3.1.2
2024-03-16 16:37:40,477:INFO:               scipy: 1.11.1
2024-03-16 16:37:40,477:INFO:              joblib: 1.2.0
2024-03-16 16:37:40,477:INFO:             sklearn: 1.3.0
2024-03-16 16:37:40,477:INFO:                pyod: 1.1.3
2024-03-16 16:37:40,477:INFO:            imblearn: 0.10.1
2024-03-16 16:37:40,477:INFO:   category_encoders: 2.6.3
2024-03-16 16:37:40,477:INFO:            lightgbm: 4.3.0
2024-03-16 16:37:40,477:INFO:               numba: 0.57.1
2024-03-16 16:37:40,478:INFO:            requests: 2.31.0
2024-03-16 16:37:40,478:INFO:          matplotlib: 3.7.2
2024-03-16 16:37:40,478:INFO:          scikitplot: 0.3.7
2024-03-16 16:37:40,478:INFO:         yellowbrick: 1.5
2024-03-16 16:37:40,478:INFO:              plotly: 5.9.0
2024-03-16 16:37:40,478:INFO:    plotly-resampler: Not installed
2024-03-16 16:37:40,478:INFO:             kaleido: 0.2.1
2024-03-16 16:37:40,478:INFO:           schemdraw: 0.15
2024-03-16 16:37:40,478:INFO:         statsmodels: 0.14.0
2024-03-16 16:37:40,478:INFO:              sktime: 0.27.0
2024-03-16 16:37:40,478:INFO:               tbats: 1.1.3
2024-03-16 16:37:40,478:INFO:            pmdarima: 2.0.4
2024-03-16 16:37:40,478:INFO:              psutil: 5.9.0
2024-03-16 16:37:40,478:INFO:          markupsafe: 2.1.1
2024-03-16 16:37:40,478:INFO:             pickle5: Not installed
2024-03-16 16:37:40,478:INFO:         cloudpickle: 2.2.1
2024-03-16 16:37:40,478:INFO:         deprecation: 2.1.0
2024-03-16 16:37:40,478:INFO:              xxhash: 2.0.2
2024-03-16 16:37:40,478:INFO:           wurlitzer: Not installed
2024-03-16 16:37:40,478:INFO:PyCaret optional dependencies:
2024-03-16 16:37:40,479:INFO:                shap: Not installed
2024-03-16 16:37:40,479:INFO:           interpret: Not installed
2024-03-16 16:37:40,479:INFO:                umap: Not installed
2024-03-16 16:37:40,479:INFO:     ydata_profiling: Not installed
2024-03-16 16:37:40,479:INFO:  explainerdashboard: Not installed
2024-03-16 16:37:40,479:INFO:             autoviz: Not installed
2024-03-16 16:37:40,479:INFO:           fairlearn: Not installed
2024-03-16 16:37:40,479:INFO:          deepchecks: Not installed
2024-03-16 16:37:40,479:INFO:             xgboost: 2.0.3
2024-03-16 16:37:40,479:INFO:            catboost: Not installed
2024-03-16 16:37:40,479:INFO:              kmodes: Not installed
2024-03-16 16:37:40,479:INFO:             mlxtend: Not installed
2024-03-16 16:37:40,479:INFO:       statsforecast: Not installed
2024-03-16 16:37:40,479:INFO:        tune_sklearn: Not installed
2024-03-16 16:37:40,479:INFO:                 ray: Not installed
2024-03-16 16:37:40,479:INFO:            hyperopt: Not installed
2024-03-16 16:37:40,479:INFO:              optuna: Not installed
2024-03-16 16:37:40,479:INFO:               skopt: Not installed
2024-03-16 16:37:40,479:INFO:              mlflow: 2.11.1
2024-03-16 16:37:40,479:INFO:              gradio: Not installed
2024-03-16 16:37:40,480:INFO:             fastapi: Not installed
2024-03-16 16:37:40,480:INFO:             uvicorn: Not installed
2024-03-16 16:37:40,480:INFO:              m2cgen: Not installed
2024-03-16 16:37:40,480:INFO:           evidently: Not installed
2024-03-16 16:37:40,480:INFO:               fugue: Not installed
2024-03-16 16:37:40,480:INFO:           streamlit: Not installed
2024-03-16 16:37:40,480:INFO:             prophet: Not installed
2024-03-16 16:37:40,480:INFO:None
2024-03-16 16:37:40,480:INFO:Set up data.
2024-03-16 16:37:40,488:INFO:Set up folding strategy.
2024-03-16 16:37:40,489:INFO:Set up train/test split.
2024-03-16 16:37:40,495:INFO:Set up index.
2024-03-16 16:37:40,495:INFO:Assigning column types.
2024-03-16 16:37:40,500:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:37:40,501:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,506:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,510:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,611:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:40,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:40,614:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,618:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,623:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,724:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:40,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:40,726:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:37:40,731:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,735:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,838:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:40,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:40,845:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,916:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:40,963:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:40,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:40,966:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:37:40,975:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,035:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,079:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,094:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,197:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,200:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:37:41,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,314:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,393:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,458:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,460:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,462:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:37:41,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,581:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:37:41,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,707:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:37:41,820:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,939:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:41,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:41,943:INFO:Preparing preprocessing pipeline...
2024-03-16 16:37:41,943:INFO:Set up simple imputation.
2024-03-16 16:37:41,947:INFO:Set up encoding of categorical features.
2024-03-16 16:37:41,948:INFO:Set up column name cleaning.
2024-03-16 16:37:42,064:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:37:42,074:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:37:42,075:INFO:Creating final display dataframe.
2024-03-16 16:37:42,475:INFO:Setup _display_container:                     Description             Value
0                    Session id              1551
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 18)
4        Transformed data shape        (1859, 18)
5   Transformed train set shape        (1301, 18)
6    Transformed test set shape         (558, 18)
7              Numeric features                 8
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment      MlflowLogger
20              Experiment Name  reg-default-name
21                          USI              17b7
2024-03-16 16:37:42,633:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:42,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:42,769:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:37:42,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:37:42,773:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:37:42,773:INFO:Logging experiment in loggers
2024-03-16 16:37:42,840:INFO:SubProcess save_model() called ==================================
2024-03-16 16:37:42,859:INFO:Initializing save_model()
2024-03-16 16:37:42,859:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpbvuwknan\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:37:42,859:INFO:Adding model into prep_pipe
2024-03-16 16:37:42,859:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:37:42,867:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpbvuwknan\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:37:42,875:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:37:42,876:INFO:save_model() successfully completed......................................
2024-03-16 16:37:43,039:INFO:SubProcess save_model() end ==================================
2024-03-16 16:37:43,051:INFO:setup() successfully completed in 2.3s...............
2024-03-16 16:37:43,052:INFO:Initializing compare_models()
2024-03-16 16:37:43,052:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:37:43,052:INFO:Checking exceptions
2024-03-16 16:37:43,057:INFO:Preparing display monitor
2024-03-16 16:37:43,092:INFO:Initializing Linear Regression
2024-03-16 16:37:43,092:INFO:Total runtime is 0.0 minutes
2024-03-16 16:37:43,097:INFO:SubProcess create_model() called ==================================
2024-03-16 16:37:43,098:INFO:Initializing create_model()
2024-03-16 16:37:43,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:37:43,098:INFO:Checking exceptions
2024-03-16 16:37:43,098:INFO:Importing libraries
2024-03-16 16:37:43,098:INFO:Copying training dataset
2024-03-16 16:37:43,112:INFO:Defining folds
2024-03-16 16:37:43,113:INFO:Declaring metric variables
2024-03-16 16:37:43,119:INFO:Importing untrained model
2024-03-16 16:37:43,127:INFO:Linear Regression Imported successfully
2024-03-16 16:37:43,137:INFO:Starting cross validation
2024-03-16 16:37:43,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:00,573:INFO:Calculating mean and std
2024-03-16 16:38:00,576:INFO:Creating metrics dataframe
2024-03-16 16:38:00,581:INFO:Uploading results into container
2024-03-16 16:38:00,582:INFO:Uploading model into container now
2024-03-16 16:38:00,583:INFO:_master_model_container: 1
2024-03-16 16:38:00,584:INFO:_display_container: 2
2024-03-16 16:38:00,585:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:38:00,585:INFO:create_model() successfully completed......................................
2024-03-16 16:38:00,789:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:00,789:INFO:Creating metrics dataframe
2024-03-16 16:38:00,798:INFO:Initializing Lasso Regression
2024-03-16 16:38:00,799:INFO:Total runtime is 0.29512224197387693 minutes
2024-03-16 16:38:00,806:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:00,806:INFO:Initializing create_model()
2024-03-16 16:38:00,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:00,806:INFO:Checking exceptions
2024-03-16 16:38:00,807:INFO:Importing libraries
2024-03-16 16:38:00,807:INFO:Copying training dataset
2024-03-16 16:38:00,816:INFO:Defining folds
2024-03-16 16:38:00,817:INFO:Declaring metric variables
2024-03-16 16:38:00,824:INFO:Importing untrained model
2024-03-16 16:38:00,829:INFO:Lasso Regression Imported successfully
2024-03-16 16:38:00,839:INFO:Starting cross validation
2024-03-16 16:38:00,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:05,237:INFO:Calculating mean and std
2024-03-16 16:38:05,239:INFO:Creating metrics dataframe
2024-03-16 16:38:05,241:INFO:Uploading results into container
2024-03-16 16:38:05,242:INFO:Uploading model into container now
2024-03-16 16:38:05,242:INFO:_master_model_container: 2
2024-03-16 16:38:05,242:INFO:_display_container: 2
2024-03-16 16:38:05,243:INFO:Lasso(random_state=1551)
2024-03-16 16:38:05,243:INFO:create_model() successfully completed......................................
2024-03-16 16:38:05,387:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:05,388:INFO:Creating metrics dataframe
2024-03-16 16:38:05,396:INFO:Initializing Ridge Regression
2024-03-16 16:38:05,396:INFO:Total runtime is 0.3717355569203694 minutes
2024-03-16 16:38:05,400:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:05,400:INFO:Initializing create_model()
2024-03-16 16:38:05,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:05,400:INFO:Checking exceptions
2024-03-16 16:38:05,400:INFO:Importing libraries
2024-03-16 16:38:05,401:INFO:Copying training dataset
2024-03-16 16:38:05,409:INFO:Defining folds
2024-03-16 16:38:05,410:INFO:Declaring metric variables
2024-03-16 16:38:05,414:INFO:Importing untrained model
2024-03-16 16:38:05,421:INFO:Ridge Regression Imported successfully
2024-03-16 16:38:05,431:INFO:Starting cross validation
2024-03-16 16:38:05,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:05,656:INFO:Calculating mean and std
2024-03-16 16:38:05,657:INFO:Creating metrics dataframe
2024-03-16 16:38:05,660:INFO:Uploading results into container
2024-03-16 16:38:05,661:INFO:Uploading model into container now
2024-03-16 16:38:05,662:INFO:_master_model_container: 3
2024-03-16 16:38:05,662:INFO:_display_container: 2
2024-03-16 16:38:05,663:INFO:Ridge(random_state=1551)
2024-03-16 16:38:05,663:INFO:create_model() successfully completed......................................
2024-03-16 16:38:05,808:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:05,808:INFO:Creating metrics dataframe
2024-03-16 16:38:05,816:INFO:Initializing Elastic Net
2024-03-16 16:38:05,817:INFO:Total runtime is 0.37874854405721026 minutes
2024-03-16 16:38:05,821:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:05,821:INFO:Initializing create_model()
2024-03-16 16:38:05,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:05,822:INFO:Checking exceptions
2024-03-16 16:38:05,822:INFO:Importing libraries
2024-03-16 16:38:05,822:INFO:Copying training dataset
2024-03-16 16:38:05,830:INFO:Defining folds
2024-03-16 16:38:05,830:INFO:Declaring metric variables
2024-03-16 16:38:05,836:INFO:Importing untrained model
2024-03-16 16:38:05,841:INFO:Elastic Net Imported successfully
2024-03-16 16:38:05,849:INFO:Starting cross validation
2024-03-16 16:38:05,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:06,106:INFO:Calculating mean and std
2024-03-16 16:38:06,107:INFO:Creating metrics dataframe
2024-03-16 16:38:06,110:INFO:Uploading results into container
2024-03-16 16:38:06,111:INFO:Uploading model into container now
2024-03-16 16:38:06,111:INFO:_master_model_container: 4
2024-03-16 16:38:06,111:INFO:_display_container: 2
2024-03-16 16:38:06,112:INFO:ElasticNet(random_state=1551)
2024-03-16 16:38:06,112:INFO:create_model() successfully completed......................................
2024-03-16 16:38:06,255:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:06,255:INFO:Creating metrics dataframe
2024-03-16 16:38:06,265:INFO:Initializing Least Angle Regression
2024-03-16 16:38:06,265:INFO:Total runtime is 0.38621908823649087 minutes
2024-03-16 16:38:06,271:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:06,271:INFO:Initializing create_model()
2024-03-16 16:38:06,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:06,271:INFO:Checking exceptions
2024-03-16 16:38:06,271:INFO:Importing libraries
2024-03-16 16:38:06,271:INFO:Copying training dataset
2024-03-16 16:38:06,280:INFO:Defining folds
2024-03-16 16:38:06,281:INFO:Declaring metric variables
2024-03-16 16:38:06,285:INFO:Importing untrained model
2024-03-16 16:38:06,290:INFO:Least Angle Regression Imported successfully
2024-03-16 16:38:06,299:INFO:Starting cross validation
2024-03-16 16:38:06,301:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:06,517:INFO:Calculating mean and std
2024-03-16 16:38:06,518:INFO:Creating metrics dataframe
2024-03-16 16:38:06,521:INFO:Uploading results into container
2024-03-16 16:38:06,522:INFO:Uploading model into container now
2024-03-16 16:38:06,523:INFO:_master_model_container: 5
2024-03-16 16:38:06,523:INFO:_display_container: 2
2024-03-16 16:38:06,524:INFO:Lars(random_state=1551)
2024-03-16 16:38:06,524:INFO:create_model() successfully completed......................................
2024-03-16 16:38:06,666:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:06,666:INFO:Creating metrics dataframe
2024-03-16 16:38:06,677:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:38:06,677:INFO:Total runtime is 0.3930903792381287 minutes
2024-03-16 16:38:06,680:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:06,681:INFO:Initializing create_model()
2024-03-16 16:38:06,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:06,681:INFO:Checking exceptions
2024-03-16 16:38:06,681:INFO:Importing libraries
2024-03-16 16:38:06,681:INFO:Copying training dataset
2024-03-16 16:38:06,689:INFO:Defining folds
2024-03-16 16:38:06,689:INFO:Declaring metric variables
2024-03-16 16:38:06,693:INFO:Importing untrained model
2024-03-16 16:38:06,697:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:38:06,705:INFO:Starting cross validation
2024-03-16 16:38:06,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:06,925:INFO:Calculating mean and std
2024-03-16 16:38:06,927:INFO:Creating metrics dataframe
2024-03-16 16:38:06,929:INFO:Uploading results into container
2024-03-16 16:38:06,930:INFO:Uploading model into container now
2024-03-16 16:38:06,930:INFO:_master_model_container: 6
2024-03-16 16:38:06,930:INFO:_display_container: 2
2024-03-16 16:38:06,931:INFO:LassoLars(random_state=1551)
2024-03-16 16:38:06,931:INFO:create_model() successfully completed......................................
2024-03-16 16:38:07,073:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:07,073:INFO:Creating metrics dataframe
2024-03-16 16:38:07,082:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:38:07,082:INFO:Total runtime is 0.399839448928833 minutes
2024-03-16 16:38:07,087:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:07,088:INFO:Initializing create_model()
2024-03-16 16:38:07,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:07,088:INFO:Checking exceptions
2024-03-16 16:38:07,088:INFO:Importing libraries
2024-03-16 16:38:07,088:INFO:Copying training dataset
2024-03-16 16:38:07,096:INFO:Defining folds
2024-03-16 16:38:07,096:INFO:Declaring metric variables
2024-03-16 16:38:07,100:INFO:Importing untrained model
2024-03-16 16:38:07,105:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:38:07,113:INFO:Starting cross validation
2024-03-16 16:38:07,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:07,338:INFO:Calculating mean and std
2024-03-16 16:38:07,340:INFO:Creating metrics dataframe
2024-03-16 16:38:07,342:INFO:Uploading results into container
2024-03-16 16:38:07,343:INFO:Uploading model into container now
2024-03-16 16:38:07,343:INFO:_master_model_container: 7
2024-03-16 16:38:07,344:INFO:_display_container: 2
2024-03-16 16:38:07,344:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:38:07,344:INFO:create_model() successfully completed......................................
2024-03-16 16:38:07,490:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:07,490:INFO:Creating metrics dataframe
2024-03-16 16:38:07,501:INFO:Initializing Bayesian Ridge
2024-03-16 16:38:07,501:INFO:Total runtime is 0.40682913462320963 minutes
2024-03-16 16:38:07,506:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:07,507:INFO:Initializing create_model()
2024-03-16 16:38:07,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:07,507:INFO:Checking exceptions
2024-03-16 16:38:07,507:INFO:Importing libraries
2024-03-16 16:38:07,507:INFO:Copying training dataset
2024-03-16 16:38:07,516:INFO:Defining folds
2024-03-16 16:38:07,516:INFO:Declaring metric variables
2024-03-16 16:38:07,520:INFO:Importing untrained model
2024-03-16 16:38:07,525:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:38:07,537:INFO:Starting cross validation
2024-03-16 16:38:07,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:07,817:INFO:Calculating mean and std
2024-03-16 16:38:07,818:INFO:Creating metrics dataframe
2024-03-16 16:38:07,821:INFO:Uploading results into container
2024-03-16 16:38:07,822:INFO:Uploading model into container now
2024-03-16 16:38:07,823:INFO:_master_model_container: 8
2024-03-16 16:38:07,823:INFO:_display_container: 2
2024-03-16 16:38:07,824:INFO:BayesianRidge()
2024-03-16 16:38:07,824:INFO:create_model() successfully completed......................................
2024-03-16 16:38:07,972:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:07,972:INFO:Creating metrics dataframe
2024-03-16 16:38:07,982:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:38:07,982:INFO:Total runtime is 0.4148447553316752 minutes
2024-03-16 16:38:07,987:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:07,987:INFO:Initializing create_model()
2024-03-16 16:38:07,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:07,987:INFO:Checking exceptions
2024-03-16 16:38:07,988:INFO:Importing libraries
2024-03-16 16:38:07,988:INFO:Copying training dataset
2024-03-16 16:38:07,997:INFO:Defining folds
2024-03-16 16:38:07,997:INFO:Declaring metric variables
2024-03-16 16:38:08,002:INFO:Importing untrained model
2024-03-16 16:38:08,008:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:38:08,016:INFO:Starting cross validation
2024-03-16 16:38:08,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:08,281:INFO:Calculating mean and std
2024-03-16 16:38:08,283:INFO:Creating metrics dataframe
2024-03-16 16:38:08,286:INFO:Uploading results into container
2024-03-16 16:38:08,287:INFO:Uploading model into container now
2024-03-16 16:38:08,287:INFO:_master_model_container: 9
2024-03-16 16:38:08,288:INFO:_display_container: 2
2024-03-16 16:38:08,288:INFO:PassiveAggressiveRegressor(random_state=1551)
2024-03-16 16:38:08,288:INFO:create_model() successfully completed......................................
2024-03-16 16:38:08,435:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:08,436:INFO:Creating metrics dataframe
2024-03-16 16:38:08,447:INFO:Initializing Huber Regressor
2024-03-16 16:38:08,447:INFO:Total runtime is 0.42259217500686647 minutes
2024-03-16 16:38:08,451:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:08,451:INFO:Initializing create_model()
2024-03-16 16:38:08,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:08,452:INFO:Checking exceptions
2024-03-16 16:38:08,452:INFO:Importing libraries
2024-03-16 16:38:08,452:INFO:Copying training dataset
2024-03-16 16:38:08,460:INFO:Defining folds
2024-03-16 16:38:08,460:INFO:Declaring metric variables
2024-03-16 16:38:08,463:INFO:Importing untrained model
2024-03-16 16:38:08,469:INFO:Huber Regressor Imported successfully
2024-03-16 16:38:08,478:INFO:Starting cross validation
2024-03-16 16:38:08,480:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:08,658:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,678:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,689:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,699:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,709:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,725:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,750:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,755:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,758:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,778:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:38:08,815:INFO:Calculating mean and std
2024-03-16 16:38:08,817:INFO:Creating metrics dataframe
2024-03-16 16:38:08,820:INFO:Uploading results into container
2024-03-16 16:38:08,821:INFO:Uploading model into container now
2024-03-16 16:38:08,821:INFO:_master_model_container: 10
2024-03-16 16:38:08,821:INFO:_display_container: 2
2024-03-16 16:38:08,822:INFO:HuberRegressor()
2024-03-16 16:38:08,822:INFO:create_model() successfully completed......................................
2024-03-16 16:38:08,969:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:08,969:INFO:Creating metrics dataframe
2024-03-16 16:38:08,980:INFO:Initializing K Neighbors Regressor
2024-03-16 16:38:08,980:INFO:Total runtime is 0.4314634958902995 minutes
2024-03-16 16:38:08,985:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:08,986:INFO:Initializing create_model()
2024-03-16 16:38:08,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:08,987:INFO:Checking exceptions
2024-03-16 16:38:08,987:INFO:Importing libraries
2024-03-16 16:38:08,987:INFO:Copying training dataset
2024-03-16 16:38:08,995:INFO:Defining folds
2024-03-16 16:38:08,995:INFO:Declaring metric variables
2024-03-16 16:38:08,999:INFO:Importing untrained model
2024-03-16 16:38:09,004:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:38:09,011:INFO:Starting cross validation
2024-03-16 16:38:09,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:09,588:INFO:Calculating mean and std
2024-03-16 16:38:09,589:INFO:Creating metrics dataframe
2024-03-16 16:38:09,592:INFO:Uploading results into container
2024-03-16 16:38:09,593:INFO:Uploading model into container now
2024-03-16 16:38:09,594:INFO:_master_model_container: 11
2024-03-16 16:38:09,594:INFO:_display_container: 2
2024-03-16 16:38:09,595:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:38:09,595:INFO:create_model() successfully completed......................................
2024-03-16 16:38:09,749:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:09,749:INFO:Creating metrics dataframe
2024-03-16 16:38:09,761:INFO:Initializing Decision Tree Regressor
2024-03-16 16:38:09,761:INFO:Total runtime is 0.44449309905370077 minutes
2024-03-16 16:38:09,766:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:09,766:INFO:Initializing create_model()
2024-03-16 16:38:09,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:09,766:INFO:Checking exceptions
2024-03-16 16:38:09,766:INFO:Importing libraries
2024-03-16 16:38:09,766:INFO:Copying training dataset
2024-03-16 16:38:09,775:INFO:Defining folds
2024-03-16 16:38:09,775:INFO:Declaring metric variables
2024-03-16 16:38:09,780:INFO:Importing untrained model
2024-03-16 16:38:09,784:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:38:09,794:INFO:Starting cross validation
2024-03-16 16:38:09,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:10,066:INFO:Calculating mean and std
2024-03-16 16:38:10,068:INFO:Creating metrics dataframe
2024-03-16 16:38:10,071:INFO:Uploading results into container
2024-03-16 16:38:10,071:INFO:Uploading model into container now
2024-03-16 16:38:10,072:INFO:_master_model_container: 12
2024-03-16 16:38:10,072:INFO:_display_container: 2
2024-03-16 16:38:10,072:INFO:DecisionTreeRegressor(random_state=1551)
2024-03-16 16:38:10,073:INFO:create_model() successfully completed......................................
2024-03-16 16:38:10,220:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:10,220:INFO:Creating metrics dataframe
2024-03-16 16:38:10,232:INFO:Initializing Random Forest Regressor
2024-03-16 16:38:10,232:INFO:Total runtime is 0.4523387551307678 minutes
2024-03-16 16:38:10,237:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:10,237:INFO:Initializing create_model()
2024-03-16 16:38:10,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:10,237:INFO:Checking exceptions
2024-03-16 16:38:10,237:INFO:Importing libraries
2024-03-16 16:38:10,237:INFO:Copying training dataset
2024-03-16 16:38:10,246:INFO:Defining folds
2024-03-16 16:38:10,246:INFO:Declaring metric variables
2024-03-16 16:38:10,250:INFO:Importing untrained model
2024-03-16 16:38:10,255:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:38:10,263:INFO:Starting cross validation
2024-03-16 16:38:10,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:13,818:INFO:Calculating mean and std
2024-03-16 16:38:13,821:INFO:Creating metrics dataframe
2024-03-16 16:38:13,826:INFO:Uploading results into container
2024-03-16 16:38:13,827:INFO:Uploading model into container now
2024-03-16 16:38:13,827:INFO:_master_model_container: 13
2024-03-16 16:38:13,828:INFO:_display_container: 2
2024-03-16 16:38:13,829:INFO:RandomForestRegressor(n_jobs=-1, random_state=1551)
2024-03-16 16:38:13,829:INFO:create_model() successfully completed......................................
2024-03-16 16:38:14,042:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:14,042:INFO:Creating metrics dataframe
2024-03-16 16:38:14,058:INFO:Initializing Extra Trees Regressor
2024-03-16 16:38:14,058:INFO:Total runtime is 0.5161035259564718 minutes
2024-03-16 16:38:14,063:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:14,064:INFO:Initializing create_model()
2024-03-16 16:38:14,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:14,064:INFO:Checking exceptions
2024-03-16 16:38:14,065:INFO:Importing libraries
2024-03-16 16:38:14,065:INFO:Copying training dataset
2024-03-16 16:38:14,075:INFO:Defining folds
2024-03-16 16:38:14,075:INFO:Declaring metric variables
2024-03-16 16:38:14,081:INFO:Importing untrained model
2024-03-16 16:38:14,086:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:38:14,099:INFO:Starting cross validation
2024-03-16 16:38:14,103:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:16,177:INFO:Calculating mean and std
2024-03-16 16:38:16,179:INFO:Creating metrics dataframe
2024-03-16 16:38:16,182:INFO:Uploading results into container
2024-03-16 16:38:16,184:INFO:Uploading model into container now
2024-03-16 16:38:16,185:INFO:_master_model_container: 14
2024-03-16 16:38:16,185:INFO:_display_container: 2
2024-03-16 16:38:16,187:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1551)
2024-03-16 16:38:16,187:INFO:create_model() successfully completed......................................
2024-03-16 16:38:16,374:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:16,374:INFO:Creating metrics dataframe
2024-03-16 16:38:16,389:INFO:Initializing AdaBoost Regressor
2024-03-16 16:38:16,389:INFO:Total runtime is 0.5549593488375346 minutes
2024-03-16 16:38:16,394:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:16,394:INFO:Initializing create_model()
2024-03-16 16:38:16,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:16,394:INFO:Checking exceptions
2024-03-16 16:38:16,394:INFO:Importing libraries
2024-03-16 16:38:16,394:INFO:Copying training dataset
2024-03-16 16:38:16,405:INFO:Defining folds
2024-03-16 16:38:16,406:INFO:Declaring metric variables
2024-03-16 16:38:16,410:INFO:Importing untrained model
2024-03-16 16:38:16,416:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:38:16,429:INFO:Starting cross validation
2024-03-16 16:38:16,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:17,172:INFO:Calculating mean and std
2024-03-16 16:38:17,175:INFO:Creating metrics dataframe
2024-03-16 16:38:17,181:INFO:Uploading results into container
2024-03-16 16:38:17,182:INFO:Uploading model into container now
2024-03-16 16:38:17,184:INFO:_master_model_container: 15
2024-03-16 16:38:17,184:INFO:_display_container: 2
2024-03-16 16:38:17,185:INFO:AdaBoostRegressor(random_state=1551)
2024-03-16 16:38:17,185:INFO:create_model() successfully completed......................................
2024-03-16 16:38:17,385:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:17,386:INFO:Creating metrics dataframe
2024-03-16 16:38:17,404:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:38:17,405:INFO:Total runtime is 0.5718647797902425 minutes
2024-03-16 16:38:17,410:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:17,411:INFO:Initializing create_model()
2024-03-16 16:38:17,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:17,412:INFO:Checking exceptions
2024-03-16 16:38:17,412:INFO:Importing libraries
2024-03-16 16:38:17,412:INFO:Copying training dataset
2024-03-16 16:38:17,424:INFO:Defining folds
2024-03-16 16:38:17,424:INFO:Declaring metric variables
2024-03-16 16:38:17,431:INFO:Importing untrained model
2024-03-16 16:38:17,439:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:38:17,452:INFO:Starting cross validation
2024-03-16 16:38:17,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:18,692:INFO:Calculating mean and std
2024-03-16 16:38:18,693:INFO:Creating metrics dataframe
2024-03-16 16:38:18,696:INFO:Uploading results into container
2024-03-16 16:38:18,697:INFO:Uploading model into container now
2024-03-16 16:38:18,698:INFO:_master_model_container: 16
2024-03-16 16:38:18,699:INFO:_display_container: 2
2024-03-16 16:38:18,701:INFO:GradientBoostingRegressor(random_state=1551)
2024-03-16 16:38:18,701:INFO:create_model() successfully completed......................................
2024-03-16 16:38:18,948:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:18,948:INFO:Creating metrics dataframe
2024-03-16 16:38:18,966:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:38:18,966:INFO:Total runtime is 0.5979077498118083 minutes
2024-03-16 16:38:18,973:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:18,974:INFO:Initializing create_model()
2024-03-16 16:38:18,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:18,974:INFO:Checking exceptions
2024-03-16 16:38:18,974:INFO:Importing libraries
2024-03-16 16:38:18,975:INFO:Copying training dataset
2024-03-16 16:38:18,986:INFO:Defining folds
2024-03-16 16:38:18,986:INFO:Declaring metric variables
2024-03-16 16:38:18,993:INFO:Importing untrained model
2024-03-16 16:38:19,000:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:38:19,015:INFO:Starting cross validation
2024-03-16 16:38:19,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:21,338:INFO:Calculating mean and std
2024-03-16 16:38:21,342:INFO:Creating metrics dataframe
2024-03-16 16:38:21,347:INFO:Uploading results into container
2024-03-16 16:38:21,348:INFO:Uploading model into container now
2024-03-16 16:38:21,349:INFO:_master_model_container: 17
2024-03-16 16:38:21,349:INFO:_display_container: 2
2024-03-16 16:38:21,354:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=1551, ...)
2024-03-16 16:38:21,355:INFO:create_model() successfully completed......................................
2024-03-16 16:38:21,563:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:21,563:INFO:Creating metrics dataframe
2024-03-16 16:38:21,587:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:38:21,587:INFO:Total runtime is 0.641588008403778 minutes
2024-03-16 16:38:21,594:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:21,594:INFO:Initializing create_model()
2024-03-16 16:38:21,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:21,595:INFO:Checking exceptions
2024-03-16 16:38:21,595:INFO:Importing libraries
2024-03-16 16:38:21,595:INFO:Copying training dataset
2024-03-16 16:38:21,606:INFO:Defining folds
2024-03-16 16:38:21,606:INFO:Declaring metric variables
2024-03-16 16:38:21,612:INFO:Importing untrained model
2024-03-16 16:38:21,618:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:38:21,634:INFO:Starting cross validation
2024-03-16 16:38:21,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:26,329:INFO:Calculating mean and std
2024-03-16 16:38:26,332:INFO:Creating metrics dataframe
2024-03-16 16:38:26,339:INFO:Uploading results into container
2024-03-16 16:38:26,340:INFO:Uploading model into container now
2024-03-16 16:38:26,342:INFO:_master_model_container: 18
2024-03-16 16:38:26,342:INFO:_display_container: 2
2024-03-16 16:38:26,344:INFO:LGBMRegressor(n_jobs=-1, random_state=1551)
2024-03-16 16:38:26,344:INFO:create_model() successfully completed......................................
2024-03-16 16:38:26,572:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:26,572:INFO:Creating metrics dataframe
2024-03-16 16:38:26,595:INFO:Initializing Dummy Regressor
2024-03-16 16:38:26,596:INFO:Total runtime is 0.72505997021993 minutes
2024-03-16 16:38:26,602:INFO:SubProcess create_model() called ==================================
2024-03-16 16:38:26,602:INFO:Initializing create_model()
2024-03-16 16:38:26,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8568269D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:26,603:INFO:Checking exceptions
2024-03-16 16:38:26,603:INFO:Importing libraries
2024-03-16 16:38:26,603:INFO:Copying training dataset
2024-03-16 16:38:26,614:INFO:Defining folds
2024-03-16 16:38:26,615:INFO:Declaring metric variables
2024-03-16 16:38:26,622:INFO:Importing untrained model
2024-03-16 16:38:26,628:INFO:Dummy Regressor Imported successfully
2024-03-16 16:38:26,639:INFO:Starting cross validation
2024-03-16 16:38:26,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:38:26,928:INFO:Calculating mean and std
2024-03-16 16:38:27,000:INFO:Creating metrics dataframe
2024-03-16 16:38:27,003:INFO:Uploading results into container
2024-03-16 16:38:27,004:INFO:Uploading model into container now
2024-03-16 16:38:27,005:INFO:_master_model_container: 19
2024-03-16 16:38:27,005:INFO:_display_container: 2
2024-03-16 16:38:27,006:INFO:DummyRegressor()
2024-03-16 16:38:27,006:INFO:create_model() successfully completed......................................
2024-03-16 16:38:27,156:INFO:SubProcess create_model() end ==================================
2024-03-16 16:38:27,156:INFO:Creating metrics dataframe
2024-03-16 16:38:27,173:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:38:27,185:INFO:Initializing create_model()
2024-03-16 16:38:27,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:38:27,186:INFO:Checking exceptions
2024-03-16 16:38:27,188:INFO:Importing libraries
2024-03-16 16:38:27,188:INFO:Copying training dataset
2024-03-16 16:38:27,195:INFO:Defining folds
2024-03-16 16:38:27,195:INFO:Declaring metric variables
2024-03-16 16:38:27,196:INFO:Importing untrained model
2024-03-16 16:38:27,196:INFO:Declaring custom model
2024-03-16 16:38:27,196:INFO:Dummy Regressor Imported successfully
2024-03-16 16:38:27,197:INFO:Cross validation set to False
2024-03-16 16:38:27,197:INFO:Fitting Model
2024-03-16 16:38:27,244:INFO:DummyRegressor()
2024-03-16 16:38:27,244:INFO:create_model() successfully completed......................................
2024-03-16 16:38:27,388:INFO:Creating Dashboard logs
2024-03-16 16:38:27,393:INFO:Model: Dummy Regressor
2024-03-16 16:38:28,436:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:38:28,498:INFO:Initializing predict_model()
2024-03-16 16:38:28,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B854546F90>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B8542087C0>)
2024-03-16 16:38:28,498:INFO:Checking exceptions
2024-03-16 16:38:28,498:INFO:Preloading libraries
2024-03-16 16:38:28,691:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:38:30,842:INFO:Creating Dashboard logs
2024-03-16 16:38:30,846:INFO:Model: K Neighbors Regressor
2024-03-16 16:38:33,661:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:38:34,657:INFO:Creating Dashboard logs
2024-03-16 16:38:34,662:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:38:35,137:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 1551, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:38:35,457:INFO:Creating Dashboard logs
2024-03-16 16:38:35,461:INFO:Model: AdaBoost Regressor
2024-03-16 16:38:35,511:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 1551}
2024-03-16 16:38:35,817:INFO:Creating Dashboard logs
2024-03-16 16:38:35,822:INFO:Model: Extra Trees Regressor
2024-03-16 16:38:35,874:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 1551, 'verbose': 0, 'warm_start': False}
2024-03-16 16:38:36,291:INFO:Creating Dashboard logs
2024-03-16 16:38:36,298:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:38:36,436:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 1551, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:38:36,886:INFO:Creating Dashboard logs
2024-03-16 16:38:36,892:INFO:Model: Random Forest Regressor
2024-03-16 16:38:36,945:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 1551, 'verbose': 0, 'warm_start': False}
2024-03-16 16:38:37,259:INFO:Creating Dashboard logs
2024-03-16 16:38:37,263:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:38:37,309:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 1551, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:38:37,603:INFO:Creating Dashboard logs
2024-03-16 16:38:37,608:INFO:Model: Decision Tree Regressor
2024-03-16 16:38:37,659:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 1551, 'splitter': 'best'}
2024-03-16 16:38:38,063:INFO:Creating Dashboard logs
2024-03-16 16:38:38,068:INFO:Model: Linear Regression
2024-03-16 16:38:38,113:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:38:38,361:INFO:Creating Dashboard logs
2024-03-16 16:38:38,365:INFO:Model: Ridge Regression
2024-03-16 16:38:38,409:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 1551, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:38:38,674:INFO:Creating Dashboard logs
2024-03-16 16:38:38,678:INFO:Model: Least Angle Regression
2024-03-16 16:38:38,721:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 1551, 'verbose': False}
2024-03-16 16:38:38,998:INFO:Creating Dashboard logs
2024-03-16 16:38:39,002:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:38:39,204:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 1551, 'verbose': False}
2024-03-16 16:38:39,431:INFO:Creating Dashboard logs
2024-03-16 16:38:39,435:INFO:Model: Lasso Regression
2024-03-16 16:38:39,468:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 1551, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:38:39,701:INFO:Creating Dashboard logs
2024-03-16 16:38:39,705:INFO:Model: Elastic Net
2024-03-16 16:38:39,747:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 1551, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:38:40,000:INFO:Creating Dashboard logs
2024-03-16 16:38:40,004:INFO:Model: Bayesian Ridge
2024-03-16 16:38:40,047:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:38:40,303:INFO:Creating Dashboard logs
2024-03-16 16:38:40,307:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:38:40,357:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:38:40,611:INFO:Creating Dashboard logs
2024-03-16 16:38:40,614:INFO:Model: Huber Regressor
2024-03-16 16:38:40,661:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:38:40,929:INFO:Creating Dashboard logs
2024-03-16 16:38:40,933:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:38:40,969:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 1551, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:38:41,243:INFO:_master_model_container: 19
2024-03-16 16:38:41,243:INFO:_display_container: 2
2024-03-16 16:38:41,244:INFO:DummyRegressor()
2024-03-16 16:38:41,244:INFO:compare_models() successfully completed......................................
2024-03-16 16:38:41,572:WARNING:d:\Code\Anaconda\Lib\site-packages\scipy\stats\_stats_py.py:4133: DegenerateDataWarning: at least one input has length 0
  warnings.warn(stats.DegenerateDataWarning('at least one input '

2024-03-16 16:40:07,602:INFO:PyCaret RegressionExperiment
2024-03-16 16:40:07,603:INFO:Logging name: reg-default-name
2024-03-16 16:40:07,603:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:40:07,603:INFO:version 3.3.0
2024-03-16 16:40:07,603:INFO:Initializing setup()
2024-03-16 16:40:07,603:INFO:self.USI: 6c12
2024-03-16 16:40:07,603:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:40:07,603:INFO:Checking environment
2024-03-16 16:40:07,603:INFO:python_version: 3.11.5
2024-03-16 16:40:07,603:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:40:07,603:INFO:machine: AMD64
2024-03-16 16:40:07,603:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:40:07,603:INFO:Memory: svmem(total=34129678336, available=12812234752, percent=62.5, used=21317443584, free=12812234752)
2024-03-16 16:40:07,604:INFO:Physical Core: 6
2024-03-16 16:40:07,604:INFO:Logical Core: 12
2024-03-16 16:40:07,604:INFO:Checking libraries
2024-03-16 16:40:07,604:INFO:System:
2024-03-16 16:40:07,604:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:40:07,604:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:40:07,604:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:40:07,604:INFO:PyCaret required dependencies:
2024-03-16 16:40:07,604:INFO:                 pip: 24.0
2024-03-16 16:40:07,604:INFO:          setuptools: 68.0.0
2024-03-16 16:40:07,604:INFO:             pycaret: 3.3.0
2024-03-16 16:40:07,604:INFO:             IPython: 8.15.0
2024-03-16 16:40:07,605:INFO:          ipywidgets: 8.0.4
2024-03-16 16:40:07,605:INFO:                tqdm: 4.65.0
2024-03-16 16:40:07,605:INFO:               numpy: 1.24.3
2024-03-16 16:40:07,605:INFO:              pandas: 2.0.3
2024-03-16 16:40:07,605:INFO:              jinja2: 3.1.2
2024-03-16 16:40:07,605:INFO:               scipy: 1.11.1
2024-03-16 16:40:07,605:INFO:              joblib: 1.2.0
2024-03-16 16:40:07,605:INFO:             sklearn: 1.3.0
2024-03-16 16:40:07,605:INFO:                pyod: 1.1.3
2024-03-16 16:40:07,605:INFO:            imblearn: 0.10.1
2024-03-16 16:40:07,605:INFO:   category_encoders: 2.6.3
2024-03-16 16:40:07,605:INFO:            lightgbm: 4.3.0
2024-03-16 16:40:07,605:INFO:               numba: 0.57.1
2024-03-16 16:40:07,605:INFO:            requests: 2.31.0
2024-03-16 16:40:07,605:INFO:          matplotlib: 3.7.2
2024-03-16 16:40:07,606:INFO:          scikitplot: 0.3.7
2024-03-16 16:40:07,606:INFO:         yellowbrick: 1.5
2024-03-16 16:40:07,606:INFO:              plotly: 5.9.0
2024-03-16 16:40:07,606:INFO:    plotly-resampler: Not installed
2024-03-16 16:40:07,606:INFO:             kaleido: 0.2.1
2024-03-16 16:40:07,606:INFO:           schemdraw: 0.15
2024-03-16 16:40:07,606:INFO:         statsmodels: 0.14.0
2024-03-16 16:40:07,606:INFO:              sktime: 0.27.0
2024-03-16 16:40:07,606:INFO:               tbats: 1.1.3
2024-03-16 16:40:07,606:INFO:            pmdarima: 2.0.4
2024-03-16 16:40:07,606:INFO:              psutil: 5.9.0
2024-03-16 16:40:07,606:INFO:          markupsafe: 2.1.1
2024-03-16 16:40:07,606:INFO:             pickle5: Not installed
2024-03-16 16:40:07,606:INFO:         cloudpickle: 2.2.1
2024-03-16 16:40:07,606:INFO:         deprecation: 2.1.0
2024-03-16 16:40:07,607:INFO:              xxhash: 2.0.2
2024-03-16 16:40:07,607:INFO:           wurlitzer: Not installed
2024-03-16 16:40:07,607:INFO:PyCaret optional dependencies:
2024-03-16 16:40:07,607:INFO:                shap: Not installed
2024-03-16 16:40:07,607:INFO:           interpret: Not installed
2024-03-16 16:40:07,607:INFO:                umap: Not installed
2024-03-16 16:40:07,607:INFO:     ydata_profiling: Not installed
2024-03-16 16:40:07,607:INFO:  explainerdashboard: Not installed
2024-03-16 16:40:07,607:INFO:             autoviz: Not installed
2024-03-16 16:40:07,607:INFO:           fairlearn: Not installed
2024-03-16 16:40:07,607:INFO:          deepchecks: Not installed
2024-03-16 16:40:07,607:INFO:             xgboost: 2.0.3
2024-03-16 16:40:07,607:INFO:            catboost: Not installed
2024-03-16 16:40:07,607:INFO:              kmodes: Not installed
2024-03-16 16:40:07,607:INFO:             mlxtend: Not installed
2024-03-16 16:40:07,608:INFO:       statsforecast: Not installed
2024-03-16 16:40:07,608:INFO:        tune_sklearn: Not installed
2024-03-16 16:40:07,608:INFO:                 ray: Not installed
2024-03-16 16:40:07,608:INFO:            hyperopt: Not installed
2024-03-16 16:40:07,608:INFO:              optuna: Not installed
2024-03-16 16:40:07,608:INFO:               skopt: Not installed
2024-03-16 16:40:07,608:INFO:              mlflow: 2.11.1
2024-03-16 16:40:07,608:INFO:              gradio: Not installed
2024-03-16 16:40:07,608:INFO:             fastapi: Not installed
2024-03-16 16:40:07,608:INFO:             uvicorn: Not installed
2024-03-16 16:40:07,608:INFO:              m2cgen: Not installed
2024-03-16 16:40:07,608:INFO:           evidently: Not installed
2024-03-16 16:40:07,608:INFO:               fugue: Not installed
2024-03-16 16:40:07,608:INFO:           streamlit: Not installed
2024-03-16 16:40:07,608:INFO:             prophet: Not installed
2024-03-16 16:40:07,609:INFO:None
2024-03-16 16:40:07,609:INFO:Set up data.
2024-03-16 16:40:07,620:INFO:Set up folding strategy.
2024-03-16 16:40:07,620:INFO:Set up train/test split.
2024-03-16 16:40:07,629:INFO:Set up index.
2024-03-16 16:40:07,630:INFO:Assigning column types.
2024-03-16 16:40:07,637:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:40:07,637:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,644:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,657:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,747:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,821:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:07,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:07,830:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,838:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,847:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:07,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,007:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:08,011:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:40:08,018:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,032:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,127:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,215:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:08,226:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,233:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,402:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:08,406:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:40:08,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,507:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,567:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,569:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:08,585:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,664:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,729:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,730:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:08,735:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:40:08,840:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:08,900:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:08,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,007:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:09,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:40:09,068:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:09,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,074:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:40:09,171:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:09,243:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:09,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,367:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:40:09,441:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:09,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,445:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:40:09,612:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:09,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,780:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:09,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:09,786:INFO:Preparing preprocessing pipeline...
2024-03-16 16:40:09,786:INFO:Set up simple imputation.
2024-03-16 16:40:09,791:INFO:Set up encoding of categorical features.
2024-03-16 16:40:09,792:INFO:Set up column name cleaning.
2024-03-16 16:40:09,949:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:40:09,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:40:09,968:INFO:Creating final display dataframe.
2024-03-16 16:40:10,395:INFO:Setup _display_container:                     Description             Value
0                    Session id              3066
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 18)
4        Transformed data shape        (1859, 18)
5   Transformed train set shape        (1301, 18)
6    Transformed test set shape         (558, 18)
7              Numeric features                 8
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment      MlflowLogger
20              Experiment Name  reg-default-name
21                          USI              6c12
2024-03-16 16:40:10,570:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:10,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:10,725:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:40:10,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:40:10,729:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:40:10,729:INFO:Logging experiment in loggers
2024-03-16 16:40:10,803:INFO:SubProcess save_model() called ==================================
2024-03-16 16:40:10,826:INFO:Initializing save_model()
2024-03-16 16:40:10,826:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpv1w8z7wz\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:40:10,826:INFO:Adding model into prep_pipe
2024-03-16 16:40:10,826:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:40:10,835:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpv1w8z7wz\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:40:10,852:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'train_code.code',
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(i...=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:40:10,852:INFO:save_model() successfully completed......................................
2024-03-16 16:40:11,001:INFO:SubProcess save_model() end ==================================
2024-03-16 16:40:11,017:INFO:setup() successfully completed in 3.13s...............
2024-03-16 16:40:11,017:INFO:Initializing compare_models()
2024-03-16 16:40:11,017:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:40:11,017:INFO:Checking exceptions
2024-03-16 16:40:11,021:INFO:Preparing display monitor
2024-03-16 16:40:11,061:INFO:Initializing Linear Regression
2024-03-16 16:40:11,062:INFO:Total runtime is 1.668532689412435e-05 minutes
2024-03-16 16:40:11,069:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:11,070:INFO:Initializing create_model()
2024-03-16 16:40:11,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:11,071:INFO:Checking exceptions
2024-03-16 16:40:11,071:INFO:Importing libraries
2024-03-16 16:40:11,071:INFO:Copying training dataset
2024-03-16 16:40:11,080:INFO:Defining folds
2024-03-16 16:40:11,080:INFO:Declaring metric variables
2024-03-16 16:40:11,087:INFO:Importing untrained model
2024-03-16 16:40:11,095:INFO:Linear Regression Imported successfully
2024-03-16 16:40:11,110:INFO:Starting cross validation
2024-03-16 16:40:11,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:11,450:INFO:Calculating mean and std
2024-03-16 16:40:11,451:INFO:Creating metrics dataframe
2024-03-16 16:40:11,454:INFO:Uploading results into container
2024-03-16 16:40:11,455:INFO:Uploading model into container now
2024-03-16 16:40:11,456:INFO:_master_model_container: 1
2024-03-16 16:40:11,456:INFO:_display_container: 2
2024-03-16 16:40:11,456:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:40:11,456:INFO:create_model() successfully completed......................................
2024-03-16 16:40:11,691:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:11,691:INFO:Creating metrics dataframe
2024-03-16 16:40:11,702:INFO:Initializing Lasso Regression
2024-03-16 16:40:11,702:INFO:Total runtime is 0.010697801907857258 minutes
2024-03-16 16:40:11,709:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:11,710:INFO:Initializing create_model()
2024-03-16 16:40:11,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:11,711:INFO:Checking exceptions
2024-03-16 16:40:11,711:INFO:Importing libraries
2024-03-16 16:40:11,711:INFO:Copying training dataset
2024-03-16 16:40:11,728:INFO:Defining folds
2024-03-16 16:40:11,728:INFO:Declaring metric variables
2024-03-16 16:40:11,737:INFO:Importing untrained model
2024-03-16 16:40:11,749:INFO:Lasso Regression Imported successfully
2024-03-16 16:40:11,767:INFO:Starting cross validation
2024-03-16 16:40:11,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:12,260:INFO:Calculating mean and std
2024-03-16 16:40:12,265:INFO:Creating metrics dataframe
2024-03-16 16:40:12,271:INFO:Uploading results into container
2024-03-16 16:40:12,272:INFO:Uploading model into container now
2024-03-16 16:40:12,274:INFO:_master_model_container: 2
2024-03-16 16:40:12,274:INFO:_display_container: 2
2024-03-16 16:40:12,275:INFO:Lasso(random_state=3066)
2024-03-16 16:40:12,275:INFO:create_model() successfully completed......................................
2024-03-16 16:40:12,497:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:12,497:INFO:Creating metrics dataframe
2024-03-16 16:40:12,512:INFO:Initializing Ridge Regression
2024-03-16 16:40:12,512:INFO:Total runtime is 0.02419563929239909 minutes
2024-03-16 16:40:12,520:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:12,521:INFO:Initializing create_model()
2024-03-16 16:40:12,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:12,521:INFO:Checking exceptions
2024-03-16 16:40:12,522:INFO:Importing libraries
2024-03-16 16:40:12,522:INFO:Copying training dataset
2024-03-16 16:40:12,534:INFO:Defining folds
2024-03-16 16:40:12,535:INFO:Declaring metric variables
2024-03-16 16:40:12,543:INFO:Importing untrained model
2024-03-16 16:40:12,550:INFO:Ridge Regression Imported successfully
2024-03-16 16:40:12,564:INFO:Starting cross validation
2024-03-16 16:40:12,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:12,965:INFO:Calculating mean and std
2024-03-16 16:40:12,968:INFO:Creating metrics dataframe
2024-03-16 16:40:12,974:INFO:Uploading results into container
2024-03-16 16:40:12,975:INFO:Uploading model into container now
2024-03-16 16:40:12,976:INFO:_master_model_container: 3
2024-03-16 16:40:12,977:INFO:_display_container: 2
2024-03-16 16:40:12,978:INFO:Ridge(random_state=3066)
2024-03-16 16:40:12,979:INFO:create_model() successfully completed......................................
2024-03-16 16:40:13,243:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:13,243:INFO:Creating metrics dataframe
2024-03-16 16:40:13,265:INFO:Initializing Elastic Net
2024-03-16 16:40:13,266:INFO:Total runtime is 0.03674552043279012 minutes
2024-03-16 16:40:13,273:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:13,275:INFO:Initializing create_model()
2024-03-16 16:40:13,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:13,275:INFO:Checking exceptions
2024-03-16 16:40:13,275:INFO:Importing libraries
2024-03-16 16:40:13,275:INFO:Copying training dataset
2024-03-16 16:40:13,291:INFO:Defining folds
2024-03-16 16:40:13,291:INFO:Declaring metric variables
2024-03-16 16:40:13,299:INFO:Importing untrained model
2024-03-16 16:40:13,308:INFO:Elastic Net Imported successfully
2024-03-16 16:40:13,327:INFO:Starting cross validation
2024-03-16 16:40:13,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:13,792:INFO:Calculating mean and std
2024-03-16 16:40:13,795:INFO:Creating metrics dataframe
2024-03-16 16:40:13,800:INFO:Uploading results into container
2024-03-16 16:40:13,801:INFO:Uploading model into container now
2024-03-16 16:40:13,802:INFO:_master_model_container: 4
2024-03-16 16:40:13,803:INFO:_display_container: 2
2024-03-16 16:40:13,803:INFO:ElasticNet(random_state=3066)
2024-03-16 16:40:13,804:INFO:create_model() successfully completed......................................
2024-03-16 16:40:14,033:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:14,033:INFO:Creating metrics dataframe
2024-03-16 16:40:14,051:INFO:Initializing Least Angle Regression
2024-03-16 16:40:14,052:INFO:Total runtime is 0.049833261966705324 minutes
2024-03-16 16:40:14,060:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:14,061:INFO:Initializing create_model()
2024-03-16 16:40:14,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:14,061:INFO:Checking exceptions
2024-03-16 16:40:14,062:INFO:Importing libraries
2024-03-16 16:40:14,062:INFO:Copying training dataset
2024-03-16 16:40:14,082:INFO:Defining folds
2024-03-16 16:40:14,083:INFO:Declaring metric variables
2024-03-16 16:40:14,092:INFO:Importing untrained model
2024-03-16 16:40:14,100:INFO:Least Angle Regression Imported successfully
2024-03-16 16:40:14,112:INFO:Starting cross validation
2024-03-16 16:40:14,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:14,471:INFO:Calculating mean and std
2024-03-16 16:40:14,473:INFO:Creating metrics dataframe
2024-03-16 16:40:14,477:INFO:Uploading results into container
2024-03-16 16:40:14,478:INFO:Uploading model into container now
2024-03-16 16:40:14,479:INFO:_master_model_container: 5
2024-03-16 16:40:14,479:INFO:_display_container: 2
2024-03-16 16:40:14,481:INFO:Lars(random_state=3066)
2024-03-16 16:40:14,481:INFO:create_model() successfully completed......................................
2024-03-16 16:40:14,659:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:14,659:INFO:Creating metrics dataframe
2024-03-16 16:40:14,670:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:40:14,670:INFO:Total runtime is 0.06014886697133382 minutes
2024-03-16 16:40:14,676:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:14,677:INFO:Initializing create_model()
2024-03-16 16:40:14,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:14,677:INFO:Checking exceptions
2024-03-16 16:40:14,677:INFO:Importing libraries
2024-03-16 16:40:14,677:INFO:Copying training dataset
2024-03-16 16:40:14,687:INFO:Defining folds
2024-03-16 16:40:14,688:INFO:Declaring metric variables
2024-03-16 16:40:14,695:INFO:Importing untrained model
2024-03-16 16:40:14,703:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:40:14,714:INFO:Starting cross validation
2024-03-16 16:40:14,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:15,136:INFO:Calculating mean and std
2024-03-16 16:40:15,138:INFO:Creating metrics dataframe
2024-03-16 16:40:15,142:INFO:Uploading results into container
2024-03-16 16:40:15,143:INFO:Uploading model into container now
2024-03-16 16:40:15,144:INFO:_master_model_container: 6
2024-03-16 16:40:15,144:INFO:_display_container: 2
2024-03-16 16:40:15,145:INFO:LassoLars(random_state=3066)
2024-03-16 16:40:15,146:INFO:create_model() successfully completed......................................
2024-03-16 16:40:15,328:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:15,328:INFO:Creating metrics dataframe
2024-03-16 16:40:15,340:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:40:15,341:INFO:Total runtime is 0.0713402231534322 minutes
2024-03-16 16:40:15,346:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:15,347:INFO:Initializing create_model()
2024-03-16 16:40:15,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:15,347:INFO:Checking exceptions
2024-03-16 16:40:15,347:INFO:Importing libraries
2024-03-16 16:40:15,347:INFO:Copying training dataset
2024-03-16 16:40:15,358:INFO:Defining folds
2024-03-16 16:40:15,358:INFO:Declaring metric variables
2024-03-16 16:40:15,364:INFO:Importing untrained model
2024-03-16 16:40:15,370:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:40:15,380:INFO:Starting cross validation
2024-03-16 16:40:15,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:15,674:INFO:Calculating mean and std
2024-03-16 16:40:15,676:INFO:Creating metrics dataframe
2024-03-16 16:40:15,679:INFO:Uploading results into container
2024-03-16 16:40:15,680:INFO:Uploading model into container now
2024-03-16 16:40:15,681:INFO:_master_model_container: 7
2024-03-16 16:40:15,681:INFO:_display_container: 2
2024-03-16 16:40:15,682:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:40:15,682:INFO:create_model() successfully completed......................................
2024-03-16 16:40:15,847:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:15,847:INFO:Creating metrics dataframe
2024-03-16 16:40:15,858:INFO:Initializing Bayesian Ridge
2024-03-16 16:40:15,859:INFO:Total runtime is 0.07996823787689208 minutes
2024-03-16 16:40:15,864:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:15,865:INFO:Initializing create_model()
2024-03-16 16:40:15,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:15,865:INFO:Checking exceptions
2024-03-16 16:40:15,865:INFO:Importing libraries
2024-03-16 16:40:15,865:INFO:Copying training dataset
2024-03-16 16:40:15,876:INFO:Defining folds
2024-03-16 16:40:15,876:INFO:Declaring metric variables
2024-03-16 16:40:15,882:INFO:Importing untrained model
2024-03-16 16:40:15,888:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:40:15,899:INFO:Starting cross validation
2024-03-16 16:40:15,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:16,221:INFO:Calculating mean and std
2024-03-16 16:40:16,223:INFO:Creating metrics dataframe
2024-03-16 16:40:16,226:INFO:Uploading results into container
2024-03-16 16:40:16,227:INFO:Uploading model into container now
2024-03-16 16:40:16,227:INFO:_master_model_container: 8
2024-03-16 16:40:16,228:INFO:_display_container: 2
2024-03-16 16:40:16,228:INFO:BayesianRidge()
2024-03-16 16:40:16,228:INFO:create_model() successfully completed......................................
2024-03-16 16:40:16,399:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:16,399:INFO:Creating metrics dataframe
2024-03-16 16:40:16,417:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:40:16,417:INFO:Total runtime is 0.08927455345789591 minutes
2024-03-16 16:40:16,423:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:16,423:INFO:Initializing create_model()
2024-03-16 16:40:16,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:16,424:INFO:Checking exceptions
2024-03-16 16:40:16,424:INFO:Importing libraries
2024-03-16 16:40:16,425:INFO:Copying training dataset
2024-03-16 16:40:16,439:INFO:Defining folds
2024-03-16 16:40:16,439:INFO:Declaring metric variables
2024-03-16 16:40:16,447:INFO:Importing untrained model
2024-03-16 16:40:16,454:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:40:16,470:INFO:Starting cross validation
2024-03-16 16:40:16,473:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:16,868:INFO:Calculating mean and std
2024-03-16 16:40:16,870:INFO:Creating metrics dataframe
2024-03-16 16:40:16,874:INFO:Uploading results into container
2024-03-16 16:40:16,875:INFO:Uploading model into container now
2024-03-16 16:40:16,876:INFO:_master_model_container: 9
2024-03-16 16:40:16,876:INFO:_display_container: 2
2024-03-16 16:40:16,877:INFO:PassiveAggressiveRegressor(random_state=3066)
2024-03-16 16:40:16,877:INFO:create_model() successfully completed......................................
2024-03-16 16:40:17,109:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:17,109:INFO:Creating metrics dataframe
2024-03-16 16:40:17,124:INFO:Initializing Huber Regressor
2024-03-16 16:40:17,125:INFO:Total runtime is 0.10106830994288125 minutes
2024-03-16 16:40:17,131:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:17,132:INFO:Initializing create_model()
2024-03-16 16:40:17,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:17,133:INFO:Checking exceptions
2024-03-16 16:40:17,133:INFO:Importing libraries
2024-03-16 16:40:17,133:INFO:Copying training dataset
2024-03-16 16:40:17,144:INFO:Defining folds
2024-03-16 16:40:17,145:INFO:Declaring metric variables
2024-03-16 16:40:17,153:INFO:Importing untrained model
2024-03-16 16:40:17,159:INFO:Huber Regressor Imported successfully
2024-03-16 16:40:17,174:INFO:Starting cross validation
2024-03-16 16:40:17,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:17,489:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,592:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,620:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,631:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,637:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,734:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,833:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,875:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,890:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:17,929:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:40:18,019:INFO:Calculating mean and std
2024-03-16 16:40:18,022:INFO:Creating metrics dataframe
2024-03-16 16:40:18,027:INFO:Uploading results into container
2024-03-16 16:40:18,029:INFO:Uploading model into container now
2024-03-16 16:40:18,031:INFO:_master_model_container: 10
2024-03-16 16:40:18,031:INFO:_display_container: 2
2024-03-16 16:40:18,032:INFO:HuberRegressor()
2024-03-16 16:40:18,032:INFO:create_model() successfully completed......................................
2024-03-16 16:40:18,227:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:18,228:INFO:Creating metrics dataframe
2024-03-16 16:40:18,244:INFO:Initializing K Neighbors Regressor
2024-03-16 16:40:18,244:INFO:Total runtime is 0.11972641150156656 minutes
2024-03-16 16:40:18,250:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:18,251:INFO:Initializing create_model()
2024-03-16 16:40:18,251:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:18,251:INFO:Checking exceptions
2024-03-16 16:40:18,251:INFO:Importing libraries
2024-03-16 16:40:18,252:INFO:Copying training dataset
2024-03-16 16:40:18,263:INFO:Defining folds
2024-03-16 16:40:18,263:INFO:Declaring metric variables
2024-03-16 16:40:18,269:INFO:Importing untrained model
2024-03-16 16:40:18,275:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:40:18,286:INFO:Starting cross validation
2024-03-16 16:40:18,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:18,926:INFO:Calculating mean and std
2024-03-16 16:40:18,929:INFO:Creating metrics dataframe
2024-03-16 16:40:18,934:INFO:Uploading results into container
2024-03-16 16:40:18,934:INFO:Uploading model into container now
2024-03-16 16:40:18,935:INFO:_master_model_container: 11
2024-03-16 16:40:18,935:INFO:_display_container: 2
2024-03-16 16:40:18,937:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:40:18,937:INFO:create_model() successfully completed......................................
2024-03-16 16:40:19,106:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:19,106:INFO:Creating metrics dataframe
2024-03-16 16:40:19,121:INFO:Initializing Decision Tree Regressor
2024-03-16 16:40:19,122:INFO:Total runtime is 0.1343523899714152 minutes
2024-03-16 16:40:19,127:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:19,127:INFO:Initializing create_model()
2024-03-16 16:40:19,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:19,128:INFO:Checking exceptions
2024-03-16 16:40:19,128:INFO:Importing libraries
2024-03-16 16:40:19,128:INFO:Copying training dataset
2024-03-16 16:40:19,139:INFO:Defining folds
2024-03-16 16:40:19,140:INFO:Declaring metric variables
2024-03-16 16:40:19,145:INFO:Importing untrained model
2024-03-16 16:40:19,154:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:40:19,164:INFO:Starting cross validation
2024-03-16 16:40:19,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:19,454:INFO:Calculating mean and std
2024-03-16 16:40:19,456:INFO:Creating metrics dataframe
2024-03-16 16:40:19,459:INFO:Uploading results into container
2024-03-16 16:40:19,460:INFO:Uploading model into container now
2024-03-16 16:40:19,461:INFO:_master_model_container: 12
2024-03-16 16:40:19,462:INFO:_display_container: 2
2024-03-16 16:40:19,463:INFO:DecisionTreeRegressor(random_state=3066)
2024-03-16 16:40:19,463:INFO:create_model() successfully completed......................................
2024-03-16 16:40:19,618:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:19,619:INFO:Creating metrics dataframe
2024-03-16 16:40:19,631:INFO:Initializing Random Forest Regressor
2024-03-16 16:40:19,631:INFO:Total runtime is 0.14284574985504148 minutes
2024-03-16 16:40:19,636:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:19,636:INFO:Initializing create_model()
2024-03-16 16:40:19,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:19,636:INFO:Checking exceptions
2024-03-16 16:40:19,636:INFO:Importing libraries
2024-03-16 16:40:19,637:INFO:Copying training dataset
2024-03-16 16:40:19,645:INFO:Defining folds
2024-03-16 16:40:19,646:INFO:Declaring metric variables
2024-03-16 16:40:19,651:INFO:Importing untrained model
2024-03-16 16:40:19,659:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:40:19,671:INFO:Starting cross validation
2024-03-16 16:40:19,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:23,124:INFO:Calculating mean and std
2024-03-16 16:40:23,126:INFO:Creating metrics dataframe
2024-03-16 16:40:23,131:INFO:Uploading results into container
2024-03-16 16:40:23,132:INFO:Uploading model into container now
2024-03-16 16:40:23,133:INFO:_master_model_container: 13
2024-03-16 16:40:23,133:INFO:_display_container: 2
2024-03-16 16:40:23,134:INFO:RandomForestRegressor(n_jobs=-1, random_state=3066)
2024-03-16 16:40:23,134:INFO:create_model() successfully completed......................................
2024-03-16 16:40:23,329:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:23,330:INFO:Creating metrics dataframe
2024-03-16 16:40:23,345:INFO:Initializing Extra Trees Regressor
2024-03-16 16:40:23,346:INFO:Total runtime is 0.20475033919016516 minutes
2024-03-16 16:40:23,351:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:23,352:INFO:Initializing create_model()
2024-03-16 16:40:23,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:23,352:INFO:Checking exceptions
2024-03-16 16:40:23,352:INFO:Importing libraries
2024-03-16 16:40:23,353:INFO:Copying training dataset
2024-03-16 16:40:23,364:INFO:Defining folds
2024-03-16 16:40:23,364:INFO:Declaring metric variables
2024-03-16 16:40:23,370:INFO:Importing untrained model
2024-03-16 16:40:23,376:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:40:23,387:INFO:Starting cross validation
2024-03-16 16:40:23,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:25,755:INFO:Calculating mean and std
2024-03-16 16:40:25,758:INFO:Creating metrics dataframe
2024-03-16 16:40:25,763:INFO:Uploading results into container
2024-03-16 16:40:25,764:INFO:Uploading model into container now
2024-03-16 16:40:25,765:INFO:_master_model_container: 14
2024-03-16 16:40:25,765:INFO:_display_container: 2
2024-03-16 16:40:25,766:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3066)
2024-03-16 16:40:25,766:INFO:create_model() successfully completed......................................
2024-03-16 16:40:25,979:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:25,979:INFO:Creating metrics dataframe
2024-03-16 16:40:25,997:INFO:Initializing AdaBoost Regressor
2024-03-16 16:40:25,998:INFO:Total runtime is 0.24895741939544674 minutes
2024-03-16 16:40:26,008:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:26,008:INFO:Initializing create_model()
2024-03-16 16:40:26,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:26,009:INFO:Checking exceptions
2024-03-16 16:40:26,009:INFO:Importing libraries
2024-03-16 16:40:26,009:INFO:Copying training dataset
2024-03-16 16:40:26,024:INFO:Defining folds
2024-03-16 16:40:26,025:INFO:Declaring metric variables
2024-03-16 16:40:26,032:INFO:Importing untrained model
2024-03-16 16:40:26,039:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:40:26,054:INFO:Starting cross validation
2024-03-16 16:40:26,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:26,771:INFO:Calculating mean and std
2024-03-16 16:40:26,773:INFO:Creating metrics dataframe
2024-03-16 16:40:26,777:INFO:Uploading results into container
2024-03-16 16:40:26,778:INFO:Uploading model into container now
2024-03-16 16:40:26,779:INFO:_master_model_container: 15
2024-03-16 16:40:26,779:INFO:_display_container: 2
2024-03-16 16:40:26,780:INFO:AdaBoostRegressor(random_state=3066)
2024-03-16 16:40:26,780:INFO:create_model() successfully completed......................................
2024-03-16 16:40:26,959:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:26,960:INFO:Creating metrics dataframe
2024-03-16 16:40:26,975:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:40:26,975:INFO:Total runtime is 0.26524165868759153 minutes
2024-03-16 16:40:26,980:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:26,981:INFO:Initializing create_model()
2024-03-16 16:40:26,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:26,981:INFO:Checking exceptions
2024-03-16 16:40:26,981:INFO:Importing libraries
2024-03-16 16:40:26,981:INFO:Copying training dataset
2024-03-16 16:40:26,991:INFO:Defining folds
2024-03-16 16:40:26,991:INFO:Declaring metric variables
2024-03-16 16:40:26,997:INFO:Importing untrained model
2024-03-16 16:40:27,003:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:40:27,013:INFO:Starting cross validation
2024-03-16 16:40:27,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:28,146:INFO:Calculating mean and std
2024-03-16 16:40:28,149:INFO:Creating metrics dataframe
2024-03-16 16:40:28,155:INFO:Uploading results into container
2024-03-16 16:40:28,156:INFO:Uploading model into container now
2024-03-16 16:40:28,157:INFO:_master_model_container: 16
2024-03-16 16:40:28,157:INFO:_display_container: 2
2024-03-16 16:40:28,158:INFO:GradientBoostingRegressor(random_state=3066)
2024-03-16 16:40:28,158:INFO:create_model() successfully completed......................................
2024-03-16 16:40:28,350:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:28,351:INFO:Creating metrics dataframe
2024-03-16 16:40:28,374:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:40:28,375:INFO:Total runtime is 0.28856536944707234 minutes
2024-03-16 16:40:28,381:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:28,381:INFO:Initializing create_model()
2024-03-16 16:40:28,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:28,382:INFO:Checking exceptions
2024-03-16 16:40:28,382:INFO:Importing libraries
2024-03-16 16:40:28,382:INFO:Copying training dataset
2024-03-16 16:40:28,392:INFO:Defining folds
2024-03-16 16:40:28,392:INFO:Declaring metric variables
2024-03-16 16:40:28,398:INFO:Importing untrained model
2024-03-16 16:40:28,405:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:40:28,416:INFO:Starting cross validation
2024-03-16 16:40:28,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:29,354:INFO:Calculating mean and std
2024-03-16 16:40:29,356:INFO:Creating metrics dataframe
2024-03-16 16:40:29,360:INFO:Uploading results into container
2024-03-16 16:40:29,361:INFO:Uploading model into container now
2024-03-16 16:40:29,362:INFO:_master_model_container: 17
2024-03-16 16:40:29,362:INFO:_display_container: 2
2024-03-16 16:40:29,365:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3066, ...)
2024-03-16 16:40:29,366:INFO:create_model() successfully completed......................................
2024-03-16 16:40:29,541:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:29,542:INFO:Creating metrics dataframe
2024-03-16 16:40:29,562:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:40:29,563:INFO:Total runtime is 0.3083705464998881 minutes
2024-03-16 16:40:29,573:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:29,573:INFO:Initializing create_model()
2024-03-16 16:40:29,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:29,574:INFO:Checking exceptions
2024-03-16 16:40:29,574:INFO:Importing libraries
2024-03-16 16:40:29,574:INFO:Copying training dataset
2024-03-16 16:40:29,626:INFO:Defining folds
2024-03-16 16:40:29,626:INFO:Declaring metric variables
2024-03-16 16:40:29,642:INFO:Importing untrained model
2024-03-16 16:40:29,652:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:40:29,669:INFO:Starting cross validation
2024-03-16 16:40:29,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:32,353:INFO:Calculating mean and std
2024-03-16 16:40:32,356:INFO:Creating metrics dataframe
2024-03-16 16:40:32,363:INFO:Uploading results into container
2024-03-16 16:40:32,364:INFO:Uploading model into container now
2024-03-16 16:40:32,366:INFO:_master_model_container: 18
2024-03-16 16:40:32,366:INFO:_display_container: 2
2024-03-16 16:40:32,367:INFO:LGBMRegressor(n_jobs=-1, random_state=3066)
2024-03-16 16:40:32,368:INFO:create_model() successfully completed......................................
2024-03-16 16:40:32,573:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:32,574:INFO:Creating metrics dataframe
2024-03-16 16:40:32,593:INFO:Initializing Dummy Regressor
2024-03-16 16:40:32,594:INFO:Total runtime is 0.3588897069295247 minutes
2024-03-16 16:40:32,600:INFO:SubProcess create_model() called ==================================
2024-03-16 16:40:32,600:INFO:Initializing create_model()
2024-03-16 16:40:32,601:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A3FFB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:32,601:INFO:Checking exceptions
2024-03-16 16:40:32,601:INFO:Importing libraries
2024-03-16 16:40:32,601:INFO:Copying training dataset
2024-03-16 16:40:32,612:INFO:Defining folds
2024-03-16 16:40:32,613:INFO:Declaring metric variables
2024-03-16 16:40:32,620:INFO:Importing untrained model
2024-03-16 16:40:32,626:INFO:Dummy Regressor Imported successfully
2024-03-16 16:40:32,641:INFO:Starting cross validation
2024-03-16 16:40:32,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:40:33,035:INFO:Calculating mean and std
2024-03-16 16:40:33,038:INFO:Creating metrics dataframe
2024-03-16 16:40:33,042:INFO:Uploading results into container
2024-03-16 16:40:33,043:INFO:Uploading model into container now
2024-03-16 16:40:33,044:INFO:_master_model_container: 19
2024-03-16 16:40:33,044:INFO:_display_container: 2
2024-03-16 16:40:33,044:INFO:DummyRegressor()
2024-03-16 16:40:33,045:INFO:create_model() successfully completed......................................
2024-03-16 16:40:33,235:INFO:SubProcess create_model() end ==================================
2024-03-16 16:40:33,235:INFO:Creating metrics dataframe
2024-03-16 16:40:33,253:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:40:33,267:INFO:Initializing create_model()
2024-03-16 16:40:33,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:40:33,268:INFO:Checking exceptions
2024-03-16 16:40:33,270:INFO:Importing libraries
2024-03-16 16:40:33,270:INFO:Copying training dataset
2024-03-16 16:40:33,280:INFO:Defining folds
2024-03-16 16:40:33,280:INFO:Declaring metric variables
2024-03-16 16:40:33,281:INFO:Importing untrained model
2024-03-16 16:40:33,281:INFO:Declaring custom model
2024-03-16 16:40:33,282:INFO:Dummy Regressor Imported successfully
2024-03-16 16:40:33,283:INFO:Cross validation set to False
2024-03-16 16:40:33,284:INFO:Fitting Model
2024-03-16 16:40:33,344:INFO:DummyRegressor()
2024-03-16 16:40:33,344:INFO:create_model() successfully completed......................................
2024-03-16 16:40:33,499:INFO:Creating Dashboard logs
2024-03-16 16:40:33,503:INFO:Model: Dummy Regressor
2024-03-16 16:40:33,558:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:40:33,631:INFO:Initializing predict_model()
2024-03-16 16:40:33,631:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B856545110>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B858958220>)
2024-03-16 16:40:33,631:INFO:Checking exceptions
2024-03-16 16:40:33,631:INFO:Preloading libraries
2024-03-16 16:40:33,824:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:40:34,150:INFO:Creating Dashboard logs
2024-03-16 16:40:34,153:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:40:34,199:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3066, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:40:34,470:INFO:Creating Dashboard logs
2024-03-16 16:40:34,475:INFO:Model: Decision Tree Regressor
2024-03-16 16:40:34,519:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3066, 'splitter': 'best'}
2024-03-16 16:40:34,787:INFO:Creating Dashboard logs
2024-03-16 16:40:34,805:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:40:34,866:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3066, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:40:35,201:INFO:Creating Dashboard logs
2024-03-16 16:40:35,206:INFO:Model: Random Forest Regressor
2024-03-16 16:40:35,252:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3066, 'verbose': 0, 'warm_start': False}
2024-03-16 16:40:35,542:INFO:Creating Dashboard logs
2024-03-16 16:40:35,546:INFO:Model: Extra Trees Regressor
2024-03-16 16:40:35,593:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3066, 'verbose': 0, 'warm_start': False}
2024-03-16 16:40:35,858:INFO:Creating Dashboard logs
2024-03-16 16:40:35,861:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:40:35,906:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3066, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:40:36,213:INFO:Creating Dashboard logs
2024-03-16 16:40:36,219:INFO:Model: AdaBoost Regressor
2024-03-16 16:40:36,266:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3066}
2024-03-16 16:40:36,507:INFO:Creating Dashboard logs
2024-03-16 16:40:36,511:INFO:Model: Linear Regression
2024-03-16 16:40:36,552:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:40:36,780:INFO:Creating Dashboard logs
2024-03-16 16:40:36,784:INFO:Model: Ridge Regression
2024-03-16 16:40:36,825:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3066, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:40:37,056:INFO:Creating Dashboard logs
2024-03-16 16:40:37,060:INFO:Model: Least Angle Regression
2024-03-16 16:40:37,103:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3066, 'verbose': False}
2024-03-16 16:40:37,340:INFO:Creating Dashboard logs
2024-03-16 16:40:37,344:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:40:37,390:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:40:37,635:INFO:Creating Dashboard logs
2024-03-16 16:40:37,639:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:40:37,678:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3066, 'verbose': False}
2024-03-16 16:40:37,939:INFO:Creating Dashboard logs
2024-03-16 16:40:37,943:INFO:Model: Lasso Regression
2024-03-16 16:40:37,977:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3066, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:40:38,237:INFO:Creating Dashboard logs
2024-03-16 16:40:38,241:INFO:Model: Bayesian Ridge
2024-03-16 16:40:38,283:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:40:38,547:INFO:Creating Dashboard logs
2024-03-16 16:40:38,553:INFO:Model: Elastic Net
2024-03-16 16:40:38,598:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3066, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:40:38,843:INFO:Creating Dashboard logs
2024-03-16 16:40:38,847:INFO:Model: Huber Regressor
2024-03-16 16:40:38,887:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:40:39,115:INFO:Creating Dashboard logs
2024-03-16 16:40:39,119:INFO:Model: K Neighbors Regressor
2024-03-16 16:40:39,176:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:40:39,443:INFO:Creating Dashboard logs
2024-03-16 16:40:39,451:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:40:39,499:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3066, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:40:39,775:INFO:_master_model_container: 19
2024-03-16 16:40:39,776:INFO:_display_container: 2
2024-03-16 16:40:39,776:INFO:DummyRegressor()
2024-03-16 16:40:39,776:INFO:compare_models() successfully completed......................................
2024-03-16 16:43:13,501:INFO:PyCaret RegressionExperiment
2024-03-16 16:43:13,501:INFO:Logging name: reg-default-name
2024-03-16 16:43:13,501:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:43:13,501:INFO:version 3.3.0
2024-03-16 16:43:13,501:INFO:Initializing setup()
2024-03-16 16:43:13,501:INFO:self.USI: 051d
2024-03-16 16:43:13,501:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:43:13,501:INFO:Checking environment
2024-03-16 16:43:13,501:INFO:python_version: 3.11.5
2024-03-16 16:43:13,501:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:43:13,501:INFO:machine: AMD64
2024-03-16 16:43:13,501:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:43:13,502:INFO:Memory: svmem(total=34129678336, available=12764303360, percent=62.6, used=21365374976, free=12764303360)
2024-03-16 16:43:13,502:INFO:Physical Core: 6
2024-03-16 16:43:13,502:INFO:Logical Core: 12
2024-03-16 16:43:13,502:INFO:Checking libraries
2024-03-16 16:43:13,502:INFO:System:
2024-03-16 16:43:13,502:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:43:13,502:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:43:13,502:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:43:13,502:INFO:PyCaret required dependencies:
2024-03-16 16:43:13,502:INFO:                 pip: 24.0
2024-03-16 16:43:13,502:INFO:          setuptools: 68.0.0
2024-03-16 16:43:13,502:INFO:             pycaret: 3.3.0
2024-03-16 16:43:13,502:INFO:             IPython: 8.15.0
2024-03-16 16:43:13,502:INFO:          ipywidgets: 8.0.4
2024-03-16 16:43:13,502:INFO:                tqdm: 4.65.0
2024-03-16 16:43:13,502:INFO:               numpy: 1.24.3
2024-03-16 16:43:13,502:INFO:              pandas: 2.0.3
2024-03-16 16:43:13,502:INFO:              jinja2: 3.1.2
2024-03-16 16:43:13,503:INFO:               scipy: 1.11.1
2024-03-16 16:43:13,503:INFO:              joblib: 1.2.0
2024-03-16 16:43:13,503:INFO:             sklearn: 1.3.0
2024-03-16 16:43:13,503:INFO:                pyod: 1.1.3
2024-03-16 16:43:13,503:INFO:            imblearn: 0.10.1
2024-03-16 16:43:13,503:INFO:   category_encoders: 2.6.3
2024-03-16 16:43:13,503:INFO:            lightgbm: 4.3.0
2024-03-16 16:43:13,503:INFO:               numba: 0.57.1
2024-03-16 16:43:13,503:INFO:            requests: 2.31.0
2024-03-16 16:43:13,503:INFO:          matplotlib: 3.7.2
2024-03-16 16:43:13,503:INFO:          scikitplot: 0.3.7
2024-03-16 16:43:13,503:INFO:         yellowbrick: 1.5
2024-03-16 16:43:13,503:INFO:              plotly: 5.9.0
2024-03-16 16:43:13,503:INFO:    plotly-resampler: Not installed
2024-03-16 16:43:13,503:INFO:             kaleido: 0.2.1
2024-03-16 16:43:13,503:INFO:           schemdraw: 0.15
2024-03-16 16:43:13,503:INFO:         statsmodels: 0.14.0
2024-03-16 16:43:13,503:INFO:              sktime: 0.27.0
2024-03-16 16:43:13,503:INFO:               tbats: 1.1.3
2024-03-16 16:43:13,503:INFO:            pmdarima: 2.0.4
2024-03-16 16:43:13,503:INFO:              psutil: 5.9.0
2024-03-16 16:43:13,504:INFO:          markupsafe: 2.1.1
2024-03-16 16:43:13,504:INFO:             pickle5: Not installed
2024-03-16 16:43:13,504:INFO:         cloudpickle: 2.2.1
2024-03-16 16:43:13,504:INFO:         deprecation: 2.1.0
2024-03-16 16:43:13,504:INFO:              xxhash: 2.0.2
2024-03-16 16:43:13,504:INFO:           wurlitzer: Not installed
2024-03-16 16:43:13,504:INFO:PyCaret optional dependencies:
2024-03-16 16:43:13,504:INFO:                shap: Not installed
2024-03-16 16:43:13,504:INFO:           interpret: Not installed
2024-03-16 16:43:13,504:INFO:                umap: Not installed
2024-03-16 16:43:13,504:INFO:     ydata_profiling: Not installed
2024-03-16 16:43:13,504:INFO:  explainerdashboard: Not installed
2024-03-16 16:43:13,504:INFO:             autoviz: Not installed
2024-03-16 16:43:13,504:INFO:           fairlearn: Not installed
2024-03-16 16:43:13,504:INFO:          deepchecks: Not installed
2024-03-16 16:43:13,504:INFO:             xgboost: 2.0.3
2024-03-16 16:43:13,504:INFO:            catboost: Not installed
2024-03-16 16:43:13,504:INFO:              kmodes: Not installed
2024-03-16 16:43:13,504:INFO:             mlxtend: Not installed
2024-03-16 16:43:13,505:INFO:       statsforecast: Not installed
2024-03-16 16:43:13,505:INFO:        tune_sklearn: Not installed
2024-03-16 16:43:13,505:INFO:                 ray: Not installed
2024-03-16 16:43:13,505:INFO:            hyperopt: Not installed
2024-03-16 16:43:13,505:INFO:              optuna: Not installed
2024-03-16 16:43:13,505:INFO:               skopt: Not installed
2024-03-16 16:43:13,505:INFO:              mlflow: 2.11.1
2024-03-16 16:43:13,505:INFO:              gradio: Not installed
2024-03-16 16:43:13,505:INFO:             fastapi: Not installed
2024-03-16 16:43:13,505:INFO:             uvicorn: Not installed
2024-03-16 16:43:13,505:INFO:              m2cgen: Not installed
2024-03-16 16:43:13,505:INFO:           evidently: Not installed
2024-03-16 16:43:13,505:INFO:               fugue: Not installed
2024-03-16 16:43:13,505:INFO:           streamlit: Not installed
2024-03-16 16:43:13,505:INFO:             prophet: Not installed
2024-03-16 16:43:13,505:INFO:None
2024-03-16 16:43:13,505:INFO:Set up data.
2024-03-16 16:43:13,512:INFO:Set up folding strategy.
2024-03-16 16:43:13,512:INFO:Set up train/test split.
2024-03-16 16:43:13,517:INFO:Set up index.
2024-03-16 16:43:13,517:INFO:Assigning column types.
2024-03-16 16:43:13,521:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:43:13,522:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,526:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,531:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,634:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:13,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:13,637:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,643:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,649:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,748:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:13,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:13,751:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:43:13,755:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,760:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,862:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:13,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:13,870:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:13,940:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,002:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,005:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:43:14,016:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,126:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,234:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,302:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,306:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:43:14,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,446:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,592:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,593:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,596:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:43:14,681:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,732:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,818:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:43:14,882:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:14,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:14,885:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:43:15,032:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:15,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:15,155:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:15,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:15,159:INFO:Preparing preprocessing pipeline...
2024-03-16 16:43:15,159:INFO:Set up simple imputation.
2024-03-16 16:43:15,163:INFO:Set up encoding of categorical features.
2024-03-16 16:43:15,164:INFO:Set up column name cleaning.
2024-03-16 16:43:15,267:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:43:15,276:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:43:15,276:INFO:Creating final display dataframe.
2024-03-16 16:43:15,575:INFO:Setup _display_container:                     Description             Value
0                    Session id               552
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 11)
4        Transformed data shape        (1859, 11)
5   Transformed train set shape        (1301, 11)
6    Transformed test set shape         (558, 11)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment      MlflowLogger
20              Experiment Name  reg-default-name
21                          USI              051d
2024-03-16 16:43:15,716:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:15,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:15,879:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:43:15,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:43:15,883:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:43:15,883:INFO:Logging experiment in loggers
2024-03-16 16:43:15,952:INFO:SubProcess save_model() called ==================================
2024-03-16 16:43:15,971:INFO:Initializing save_model()
2024-03-16 16:43:15,971:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp98emgyag\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:43:15,971:INFO:Adding model into prep_pipe
2024-03-16 16:43:15,971:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:43:15,979:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp98emgyag\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:43:15,990:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['SHEFFLD_arr_time',
                                             'LEEDS_dep_time'],
                                    transformer=TargetEncoder(cols=['SHEFFLD_arr_time',
                                                                    'LEEDS_dep_time'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:43:15,990:INFO:save_model() successfully completed......................................
2024-03-16 16:43:16,132:INFO:SubProcess save_model() end ==================================
2024-03-16 16:43:16,142:INFO:setup() successfully completed in 2.38s...............
2024-03-16 16:43:16,143:INFO:Initializing compare_models()
2024-03-16 16:43:16,143:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:43:16,143:INFO:Checking exceptions
2024-03-16 16:43:16,145:INFO:Preparing display monitor
2024-03-16 16:43:16,174:INFO:Initializing Linear Regression
2024-03-16 16:43:16,174:INFO:Total runtime is 0.0 minutes
2024-03-16 16:43:16,178:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:16,179:INFO:Initializing create_model()
2024-03-16 16:43:16,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:16,179:INFO:Checking exceptions
2024-03-16 16:43:16,179:INFO:Importing libraries
2024-03-16 16:43:16,179:INFO:Copying training dataset
2024-03-16 16:43:16,185:INFO:Defining folds
2024-03-16 16:43:16,185:INFO:Declaring metric variables
2024-03-16 16:43:16,191:INFO:Importing untrained model
2024-03-16 16:43:16,195:INFO:Linear Regression Imported successfully
2024-03-16 16:43:16,206:INFO:Starting cross validation
2024-03-16 16:43:16,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:16,503:INFO:Calculating mean and std
2024-03-16 16:43:16,503:INFO:Creating metrics dataframe
2024-03-16 16:43:16,506:INFO:Uploading results into container
2024-03-16 16:43:16,507:INFO:Uploading model into container now
2024-03-16 16:43:16,507:INFO:_master_model_container: 1
2024-03-16 16:43:16,507:INFO:_display_container: 2
2024-03-16 16:43:16,508:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:43:16,508:INFO:create_model() successfully completed......................................
2024-03-16 16:43:16,672:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:16,672:INFO:Creating metrics dataframe
2024-03-16 16:43:16,680:INFO:Initializing Lasso Regression
2024-03-16 16:43:16,680:INFO:Total runtime is 0.008443621794382732 minutes
2024-03-16 16:43:16,685:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:16,686:INFO:Initializing create_model()
2024-03-16 16:43:16,686:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:16,686:INFO:Checking exceptions
2024-03-16 16:43:16,686:INFO:Importing libraries
2024-03-16 16:43:16,686:INFO:Copying training dataset
2024-03-16 16:43:16,693:INFO:Defining folds
2024-03-16 16:43:16,693:INFO:Declaring metric variables
2024-03-16 16:43:16,697:INFO:Importing untrained model
2024-03-16 16:43:16,701:INFO:Lasso Regression Imported successfully
2024-03-16 16:43:16,710:INFO:Starting cross validation
2024-03-16 16:43:16,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:16,946:INFO:Calculating mean and std
2024-03-16 16:43:16,947:INFO:Creating metrics dataframe
2024-03-16 16:43:16,951:INFO:Uploading results into container
2024-03-16 16:43:16,951:INFO:Uploading model into container now
2024-03-16 16:43:16,952:INFO:_master_model_container: 2
2024-03-16 16:43:16,952:INFO:_display_container: 2
2024-03-16 16:43:16,952:INFO:Lasso(random_state=552)
2024-03-16 16:43:16,952:INFO:create_model() successfully completed......................................
2024-03-16 16:43:17,105:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:17,106:INFO:Creating metrics dataframe
2024-03-16 16:43:17,114:INFO:Initializing Ridge Regression
2024-03-16 16:43:17,114:INFO:Total runtime is 0.015671026706695557 minutes
2024-03-16 16:43:17,118:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:17,119:INFO:Initializing create_model()
2024-03-16 16:43:17,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:17,119:INFO:Checking exceptions
2024-03-16 16:43:17,119:INFO:Importing libraries
2024-03-16 16:43:17,119:INFO:Copying training dataset
2024-03-16 16:43:17,125:INFO:Defining folds
2024-03-16 16:43:17,125:INFO:Declaring metric variables
2024-03-16 16:43:17,128:INFO:Importing untrained model
2024-03-16 16:43:17,133:INFO:Ridge Regression Imported successfully
2024-03-16 16:43:17,142:INFO:Starting cross validation
2024-03-16 16:43:17,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:17,455:INFO:Calculating mean and std
2024-03-16 16:43:17,457:INFO:Creating metrics dataframe
2024-03-16 16:43:17,461:INFO:Uploading results into container
2024-03-16 16:43:17,462:INFO:Uploading model into container now
2024-03-16 16:43:17,463:INFO:_master_model_container: 3
2024-03-16 16:43:17,463:INFO:_display_container: 2
2024-03-16 16:43:17,464:INFO:Ridge(random_state=552)
2024-03-16 16:43:17,464:INFO:create_model() successfully completed......................................
2024-03-16 16:43:17,623:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:17,623:INFO:Creating metrics dataframe
2024-03-16 16:43:17,632:INFO:Initializing Elastic Net
2024-03-16 16:43:17,632:INFO:Total runtime is 0.024311705430348714 minutes
2024-03-16 16:43:17,636:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:17,644:INFO:Initializing create_model()
2024-03-16 16:43:17,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:17,644:INFO:Checking exceptions
2024-03-16 16:43:17,644:INFO:Importing libraries
2024-03-16 16:43:17,644:INFO:Copying training dataset
2024-03-16 16:43:17,651:INFO:Defining folds
2024-03-16 16:43:17,651:INFO:Declaring metric variables
2024-03-16 16:43:17,656:INFO:Importing untrained model
2024-03-16 16:43:17,661:INFO:Elastic Net Imported successfully
2024-03-16 16:43:17,670:INFO:Starting cross validation
2024-03-16 16:43:17,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:17,946:INFO:Calculating mean and std
2024-03-16 16:43:17,949:INFO:Creating metrics dataframe
2024-03-16 16:43:17,954:INFO:Uploading results into container
2024-03-16 16:43:17,956:INFO:Uploading model into container now
2024-03-16 16:43:17,956:INFO:_master_model_container: 4
2024-03-16 16:43:17,958:INFO:_display_container: 2
2024-03-16 16:43:17,959:INFO:ElasticNet(random_state=552)
2024-03-16 16:43:17,959:INFO:create_model() successfully completed......................................
2024-03-16 16:43:18,188:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:18,188:INFO:Creating metrics dataframe
2024-03-16 16:43:18,203:INFO:Initializing Least Angle Regression
2024-03-16 16:43:18,203:INFO:Total runtime is 0.03381782372792562 minutes
2024-03-16 16:43:18,211:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:18,212:INFO:Initializing create_model()
2024-03-16 16:43:18,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:18,213:INFO:Checking exceptions
2024-03-16 16:43:18,213:INFO:Importing libraries
2024-03-16 16:43:18,213:INFO:Copying training dataset
2024-03-16 16:43:18,221:INFO:Defining folds
2024-03-16 16:43:18,222:INFO:Declaring metric variables
2024-03-16 16:43:18,229:INFO:Importing untrained model
2024-03-16 16:43:18,237:INFO:Least Angle Regression Imported successfully
2024-03-16 16:43:18,250:INFO:Starting cross validation
2024-03-16 16:43:18,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:18,665:INFO:Calculating mean and std
2024-03-16 16:43:18,667:INFO:Creating metrics dataframe
2024-03-16 16:43:18,671:INFO:Uploading results into container
2024-03-16 16:43:18,672:INFO:Uploading model into container now
2024-03-16 16:43:18,673:INFO:_master_model_container: 5
2024-03-16 16:43:18,673:INFO:_display_container: 2
2024-03-16 16:43:18,674:INFO:Lars(random_state=552)
2024-03-16 16:43:18,674:INFO:create_model() successfully completed......................................
2024-03-16 16:43:18,888:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:18,889:INFO:Creating metrics dataframe
2024-03-16 16:43:18,903:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:43:18,903:INFO:Total runtime is 0.045490984121958414 minutes
2024-03-16 16:43:18,911:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:18,911:INFO:Initializing create_model()
2024-03-16 16:43:18,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:18,912:INFO:Checking exceptions
2024-03-16 16:43:18,912:INFO:Importing libraries
2024-03-16 16:43:18,912:INFO:Copying training dataset
2024-03-16 16:43:18,922:INFO:Defining folds
2024-03-16 16:43:18,922:INFO:Declaring metric variables
2024-03-16 16:43:18,930:INFO:Importing untrained model
2024-03-16 16:43:18,936:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:43:18,948:INFO:Starting cross validation
2024-03-16 16:43:18,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:19,286:INFO:Calculating mean and std
2024-03-16 16:43:19,288:INFO:Creating metrics dataframe
2024-03-16 16:43:19,292:INFO:Uploading results into container
2024-03-16 16:43:19,293:INFO:Uploading model into container now
2024-03-16 16:43:19,294:INFO:_master_model_container: 6
2024-03-16 16:43:19,294:INFO:_display_container: 2
2024-03-16 16:43:19,295:INFO:LassoLars(random_state=552)
2024-03-16 16:43:19,295:INFO:create_model() successfully completed......................................
2024-03-16 16:43:19,474:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:19,474:INFO:Creating metrics dataframe
2024-03-16 16:43:19,487:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:43:19,487:INFO:Total runtime is 0.05522733926773071 minutes
2024-03-16 16:43:19,493:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:19,494:INFO:Initializing create_model()
2024-03-16 16:43:19,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:19,495:INFO:Checking exceptions
2024-03-16 16:43:19,495:INFO:Importing libraries
2024-03-16 16:43:19,495:INFO:Copying training dataset
2024-03-16 16:43:19,505:INFO:Defining folds
2024-03-16 16:43:19,506:INFO:Declaring metric variables
2024-03-16 16:43:19,513:INFO:Importing untrained model
2024-03-16 16:43:19,521:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:43:19,535:INFO:Starting cross validation
2024-03-16 16:43:19,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:19,888:INFO:Calculating mean and std
2024-03-16 16:43:19,890:INFO:Creating metrics dataframe
2024-03-16 16:43:19,894:INFO:Uploading results into container
2024-03-16 16:43:19,895:INFO:Uploading model into container now
2024-03-16 16:43:19,895:INFO:_master_model_container: 7
2024-03-16 16:43:19,896:INFO:_display_container: 2
2024-03-16 16:43:19,896:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:43:19,896:INFO:create_model() successfully completed......................................
2024-03-16 16:43:20,076:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:20,077:INFO:Creating metrics dataframe
2024-03-16 16:43:20,095:INFO:Initializing Bayesian Ridge
2024-03-16 16:43:20,096:INFO:Total runtime is 0.06538081566492716 minutes
2024-03-16 16:43:20,104:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:20,105:INFO:Initializing create_model()
2024-03-16 16:43:20,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:20,106:INFO:Checking exceptions
2024-03-16 16:43:20,106:INFO:Importing libraries
2024-03-16 16:43:20,106:INFO:Copying training dataset
2024-03-16 16:43:20,119:INFO:Defining folds
2024-03-16 16:43:20,120:INFO:Declaring metric variables
2024-03-16 16:43:20,128:INFO:Importing untrained model
2024-03-16 16:43:20,134:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:43:20,151:INFO:Starting cross validation
2024-03-16 16:43:20,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:20,498:INFO:Calculating mean and std
2024-03-16 16:43:20,499:INFO:Creating metrics dataframe
2024-03-16 16:43:20,502:INFO:Uploading results into container
2024-03-16 16:43:20,503:INFO:Uploading model into container now
2024-03-16 16:43:20,504:INFO:_master_model_container: 8
2024-03-16 16:43:20,504:INFO:_display_container: 2
2024-03-16 16:43:20,505:INFO:BayesianRidge()
2024-03-16 16:43:20,505:INFO:create_model() successfully completed......................................
2024-03-16 16:43:20,654:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:20,654:INFO:Creating metrics dataframe
2024-03-16 16:43:20,664:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:43:20,664:INFO:Total runtime is 0.07484241724014282 minutes
2024-03-16 16:43:20,668:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:20,668:INFO:Initializing create_model()
2024-03-16 16:43:20,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:20,668:INFO:Checking exceptions
2024-03-16 16:43:20,668:INFO:Importing libraries
2024-03-16 16:43:20,669:INFO:Copying training dataset
2024-03-16 16:43:20,675:INFO:Defining folds
2024-03-16 16:43:20,675:INFO:Declaring metric variables
2024-03-16 16:43:20,680:INFO:Importing untrained model
2024-03-16 16:43:20,684:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:43:20,694:INFO:Starting cross validation
2024-03-16 16:43:20,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:20,921:INFO:Calculating mean and std
2024-03-16 16:43:20,923:INFO:Creating metrics dataframe
2024-03-16 16:43:20,926:INFO:Uploading results into container
2024-03-16 16:43:20,927:INFO:Uploading model into container now
2024-03-16 16:43:20,928:INFO:_master_model_container: 9
2024-03-16 16:43:20,928:INFO:_display_container: 2
2024-03-16 16:43:20,929:INFO:PassiveAggressiveRegressor(random_state=552)
2024-03-16 16:43:20,929:INFO:create_model() successfully completed......................................
2024-03-16 16:43:21,079:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:21,079:INFO:Creating metrics dataframe
2024-03-16 16:43:21,092:INFO:Initializing Huber Regressor
2024-03-16 16:43:21,092:INFO:Total runtime is 0.0819750150044759 minutes
2024-03-16 16:43:21,096:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:21,097:INFO:Initializing create_model()
2024-03-16 16:43:21,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:21,097:INFO:Checking exceptions
2024-03-16 16:43:21,097:INFO:Importing libraries
2024-03-16 16:43:21,097:INFO:Copying training dataset
2024-03-16 16:43:21,103:INFO:Defining folds
2024-03-16 16:43:21,103:INFO:Declaring metric variables
2024-03-16 16:43:21,108:INFO:Importing untrained model
2024-03-16 16:43:21,112:INFO:Huber Regressor Imported successfully
2024-03-16 16:43:21,121:INFO:Starting cross validation
2024-03-16 16:43:21,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:21,303:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,313:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,332:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,337:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,344:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,362:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,383:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,390:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,405:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,418:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:43:21,446:INFO:Calculating mean and std
2024-03-16 16:43:21,447:INFO:Creating metrics dataframe
2024-03-16 16:43:21,450:INFO:Uploading results into container
2024-03-16 16:43:21,451:INFO:Uploading model into container now
2024-03-16 16:43:21,451:INFO:_master_model_container: 10
2024-03-16 16:43:21,451:INFO:_display_container: 2
2024-03-16 16:43:21,452:INFO:HuberRegressor()
2024-03-16 16:43:21,452:INFO:create_model() successfully completed......................................
2024-03-16 16:43:21,602:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:21,602:INFO:Creating metrics dataframe
2024-03-16 16:43:21,615:INFO:Initializing K Neighbors Regressor
2024-03-16 16:43:21,615:INFO:Total runtime is 0.09068632125854492 minutes
2024-03-16 16:43:21,619:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:21,619:INFO:Initializing create_model()
2024-03-16 16:43:21,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:21,620:INFO:Checking exceptions
2024-03-16 16:43:21,620:INFO:Importing libraries
2024-03-16 16:43:21,620:INFO:Copying training dataset
2024-03-16 16:43:21,626:INFO:Defining folds
2024-03-16 16:43:21,626:INFO:Declaring metric variables
2024-03-16 16:43:21,630:INFO:Importing untrained model
2024-03-16 16:43:21,634:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:43:21,646:INFO:Starting cross validation
2024-03-16 16:43:21,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:21,878:INFO:Calculating mean and std
2024-03-16 16:43:21,880:INFO:Creating metrics dataframe
2024-03-16 16:43:21,882:INFO:Uploading results into container
2024-03-16 16:43:21,883:INFO:Uploading model into container now
2024-03-16 16:43:21,884:INFO:_master_model_container: 11
2024-03-16 16:43:21,884:INFO:_display_container: 2
2024-03-16 16:43:21,884:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:43:21,885:INFO:create_model() successfully completed......................................
2024-03-16 16:43:22,029:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:22,030:INFO:Creating metrics dataframe
2024-03-16 16:43:22,039:INFO:Initializing Decision Tree Regressor
2024-03-16 16:43:22,040:INFO:Total runtime is 0.097771688302358 minutes
2024-03-16 16:43:22,044:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:22,045:INFO:Initializing create_model()
2024-03-16 16:43:22,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:22,045:INFO:Checking exceptions
2024-03-16 16:43:22,045:INFO:Importing libraries
2024-03-16 16:43:22,046:INFO:Copying training dataset
2024-03-16 16:43:22,052:INFO:Defining folds
2024-03-16 16:43:22,052:INFO:Declaring metric variables
2024-03-16 16:43:22,056:INFO:Importing untrained model
2024-03-16 16:43:22,060:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:43:22,069:INFO:Starting cross validation
2024-03-16 16:43:22,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:22,284:INFO:Calculating mean and std
2024-03-16 16:43:22,285:INFO:Creating metrics dataframe
2024-03-16 16:43:22,287:INFO:Uploading results into container
2024-03-16 16:43:22,288:INFO:Uploading model into container now
2024-03-16 16:43:22,288:INFO:_master_model_container: 12
2024-03-16 16:43:22,289:INFO:_display_container: 2
2024-03-16 16:43:22,289:INFO:DecisionTreeRegressor(random_state=552)
2024-03-16 16:43:22,290:INFO:create_model() successfully completed......................................
2024-03-16 16:43:22,432:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:22,433:INFO:Creating metrics dataframe
2024-03-16 16:43:22,445:INFO:Initializing Random Forest Regressor
2024-03-16 16:43:22,445:INFO:Total runtime is 0.10452393293380738 minutes
2024-03-16 16:43:22,449:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:22,449:INFO:Initializing create_model()
2024-03-16 16:43:22,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:22,449:INFO:Checking exceptions
2024-03-16 16:43:22,450:INFO:Importing libraries
2024-03-16 16:43:22,450:INFO:Copying training dataset
2024-03-16 16:43:22,455:INFO:Defining folds
2024-03-16 16:43:22,455:INFO:Declaring metric variables
2024-03-16 16:43:22,459:INFO:Importing untrained model
2024-03-16 16:43:22,464:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:43:22,470:INFO:Starting cross validation
2024-03-16 16:43:22,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:23,883:INFO:Calculating mean and std
2024-03-16 16:43:23,887:INFO:Creating metrics dataframe
2024-03-16 16:43:23,890:INFO:Uploading results into container
2024-03-16 16:43:23,892:INFO:Uploading model into container now
2024-03-16 16:43:23,894:INFO:_master_model_container: 13
2024-03-16 16:43:23,894:INFO:_display_container: 2
2024-03-16 16:43:23,895:INFO:RandomForestRegressor(n_jobs=-1, random_state=552)
2024-03-16 16:43:23,895:INFO:create_model() successfully completed......................................
2024-03-16 16:43:24,093:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:24,094:INFO:Creating metrics dataframe
2024-03-16 16:43:24,111:INFO:Initializing Extra Trees Regressor
2024-03-16 16:43:24,111:INFO:Total runtime is 0.13228495518366495 minutes
2024-03-16 16:43:24,116:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:24,117:INFO:Initializing create_model()
2024-03-16 16:43:24,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:24,117:INFO:Checking exceptions
2024-03-16 16:43:24,117:INFO:Importing libraries
2024-03-16 16:43:24,117:INFO:Copying training dataset
2024-03-16 16:43:24,125:INFO:Defining folds
2024-03-16 16:43:24,126:INFO:Declaring metric variables
2024-03-16 16:43:24,133:INFO:Importing untrained model
2024-03-16 16:43:24,143:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:43:24,152:INFO:Starting cross validation
2024-03-16 16:43:24,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:25,455:INFO:Calculating mean and std
2024-03-16 16:43:25,457:INFO:Creating metrics dataframe
2024-03-16 16:43:25,460:INFO:Uploading results into container
2024-03-16 16:43:25,461:INFO:Uploading model into container now
2024-03-16 16:43:25,462:INFO:_master_model_container: 14
2024-03-16 16:43:25,462:INFO:_display_container: 2
2024-03-16 16:43:25,463:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=552)
2024-03-16 16:43:25,463:INFO:create_model() successfully completed......................................
2024-03-16 16:43:25,621:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:25,621:INFO:Creating metrics dataframe
2024-03-16 16:43:25,633:INFO:Initializing AdaBoost Regressor
2024-03-16 16:43:25,634:INFO:Total runtime is 0.157668403784434 minutes
2024-03-16 16:43:25,637:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:25,638:INFO:Initializing create_model()
2024-03-16 16:43:25,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:25,638:INFO:Checking exceptions
2024-03-16 16:43:25,638:INFO:Importing libraries
2024-03-16 16:43:25,638:INFO:Copying training dataset
2024-03-16 16:43:25,645:INFO:Defining folds
2024-03-16 16:43:25,645:INFO:Declaring metric variables
2024-03-16 16:43:25,650:INFO:Importing untrained model
2024-03-16 16:43:25,654:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:43:25,664:INFO:Starting cross validation
2024-03-16 16:43:25,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:26,112:INFO:Calculating mean and std
2024-03-16 16:43:26,114:INFO:Creating metrics dataframe
2024-03-16 16:43:26,117:INFO:Uploading results into container
2024-03-16 16:43:26,117:INFO:Uploading model into container now
2024-03-16 16:43:26,118:INFO:_master_model_container: 15
2024-03-16 16:43:26,118:INFO:_display_container: 2
2024-03-16 16:43:26,119:INFO:AdaBoostRegressor(random_state=552)
2024-03-16 16:43:26,119:INFO:create_model() successfully completed......................................
2024-03-16 16:43:26,277:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:26,278:INFO:Creating metrics dataframe
2024-03-16 16:43:26,290:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:43:26,290:INFO:Total runtime is 0.16860351959864298 minutes
2024-03-16 16:43:26,295:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:26,296:INFO:Initializing create_model()
2024-03-16 16:43:26,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:26,296:INFO:Checking exceptions
2024-03-16 16:43:26,296:INFO:Importing libraries
2024-03-16 16:43:26,296:INFO:Copying training dataset
2024-03-16 16:43:26,303:INFO:Defining folds
2024-03-16 16:43:26,303:INFO:Declaring metric variables
2024-03-16 16:43:26,308:INFO:Importing untrained model
2024-03-16 16:43:26,312:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:43:26,321:INFO:Starting cross validation
2024-03-16 16:43:26,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:26,847:INFO:Calculating mean and std
2024-03-16 16:43:26,849:INFO:Creating metrics dataframe
2024-03-16 16:43:26,852:INFO:Uploading results into container
2024-03-16 16:43:26,853:INFO:Uploading model into container now
2024-03-16 16:43:26,853:INFO:_master_model_container: 16
2024-03-16 16:43:26,853:INFO:_display_container: 2
2024-03-16 16:43:26,854:INFO:GradientBoostingRegressor(random_state=552)
2024-03-16 16:43:26,855:INFO:create_model() successfully completed......................................
2024-03-16 16:43:27,004:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:27,005:INFO:Creating metrics dataframe
2024-03-16 16:43:27,021:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:43:27,021:INFO:Total runtime is 0.1807886481285095 minutes
2024-03-16 16:43:27,025:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:27,026:INFO:Initializing create_model()
2024-03-16 16:43:27,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:27,026:INFO:Checking exceptions
2024-03-16 16:43:27,026:INFO:Importing libraries
2024-03-16 16:43:27,026:INFO:Copying training dataset
2024-03-16 16:43:27,032:INFO:Defining folds
2024-03-16 16:43:27,032:INFO:Declaring metric variables
2024-03-16 16:43:27,037:INFO:Importing untrained model
2024-03-16 16:43:27,042:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:43:27,050:INFO:Starting cross validation
2024-03-16 16:43:27,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:27,457:INFO:Calculating mean and std
2024-03-16 16:43:27,459:INFO:Creating metrics dataframe
2024-03-16 16:43:27,462:INFO:Uploading results into container
2024-03-16 16:43:27,463:INFO:Uploading model into container now
2024-03-16 16:43:27,463:INFO:_master_model_container: 17
2024-03-16 16:43:27,463:INFO:_display_container: 2
2024-03-16 16:43:27,465:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=552, ...)
2024-03-16 16:43:27,466:INFO:create_model() successfully completed......................................
2024-03-16 16:43:27,610:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:27,610:INFO:Creating metrics dataframe
2024-03-16 16:43:27,622:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:43:27,622:INFO:Total runtime is 0.19080840746561684 minutes
2024-03-16 16:43:27,626:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:27,627:INFO:Initializing create_model()
2024-03-16 16:43:27,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:27,627:INFO:Checking exceptions
2024-03-16 16:43:27,627:INFO:Importing libraries
2024-03-16 16:43:27,628:INFO:Copying training dataset
2024-03-16 16:43:27,633:INFO:Defining folds
2024-03-16 16:43:27,634:INFO:Declaring metric variables
2024-03-16 16:43:27,637:INFO:Importing untrained model
2024-03-16 16:43:27,642:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:43:27,663:INFO:Starting cross validation
2024-03-16 16:43:27,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:29,492:INFO:Calculating mean and std
2024-03-16 16:43:29,495:INFO:Creating metrics dataframe
2024-03-16 16:43:29,500:INFO:Uploading results into container
2024-03-16 16:43:29,502:INFO:Uploading model into container now
2024-03-16 16:43:29,503:INFO:_master_model_container: 18
2024-03-16 16:43:29,503:INFO:_display_container: 2
2024-03-16 16:43:29,504:INFO:LGBMRegressor(n_jobs=-1, random_state=552)
2024-03-16 16:43:29,505:INFO:create_model() successfully completed......................................
2024-03-16 16:43:29,709:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:29,709:INFO:Creating metrics dataframe
2024-03-16 16:43:29,726:INFO:Initializing Dummy Regressor
2024-03-16 16:43:29,726:INFO:Total runtime is 0.2258691390355428 minutes
2024-03-16 16:43:29,734:INFO:SubProcess create_model() called ==================================
2024-03-16 16:43:29,735:INFO:Initializing create_model()
2024-03-16 16:43:29,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B854831C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:29,735:INFO:Checking exceptions
2024-03-16 16:43:29,735:INFO:Importing libraries
2024-03-16 16:43:29,736:INFO:Copying training dataset
2024-03-16 16:43:29,745:INFO:Defining folds
2024-03-16 16:43:29,745:INFO:Declaring metric variables
2024-03-16 16:43:29,751:INFO:Importing untrained model
2024-03-16 16:43:29,756:INFO:Dummy Regressor Imported successfully
2024-03-16 16:43:29,767:INFO:Starting cross validation
2024-03-16 16:43:29,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:43:30,027:INFO:Calculating mean and std
2024-03-16 16:43:30,029:INFO:Creating metrics dataframe
2024-03-16 16:43:30,032:INFO:Uploading results into container
2024-03-16 16:43:30,032:INFO:Uploading model into container now
2024-03-16 16:43:30,033:INFO:_master_model_container: 19
2024-03-16 16:43:30,033:INFO:_display_container: 2
2024-03-16 16:43:30,034:INFO:DummyRegressor()
2024-03-16 16:43:30,034:INFO:create_model() successfully completed......................................
2024-03-16 16:43:30,189:INFO:SubProcess create_model() end ==================================
2024-03-16 16:43:30,190:INFO:Creating metrics dataframe
2024-03-16 16:43:30,203:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:43:30,213:INFO:Initializing create_model()
2024-03-16 16:43:30,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:43:30,213:INFO:Checking exceptions
2024-03-16 16:43:30,215:INFO:Importing libraries
2024-03-16 16:43:30,215:INFO:Copying training dataset
2024-03-16 16:43:30,221:INFO:Defining folds
2024-03-16 16:43:30,221:INFO:Declaring metric variables
2024-03-16 16:43:30,221:INFO:Importing untrained model
2024-03-16 16:43:30,221:INFO:Declaring custom model
2024-03-16 16:43:30,221:INFO:Dummy Regressor Imported successfully
2024-03-16 16:43:30,222:INFO:Cross validation set to False
2024-03-16 16:43:30,222:INFO:Fitting Model
2024-03-16 16:43:30,269:INFO:DummyRegressor()
2024-03-16 16:43:30,269:INFO:create_model() successfully completed......................................
2024-03-16 16:43:30,430:INFO:Creating Dashboard logs
2024-03-16 16:43:30,434:INFO:Model: Dummy Regressor
2024-03-16 16:43:30,477:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:43:30,636:INFO:Initializing predict_model()
2024-03-16 16:43:30,636:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853A9E510>, estimator=DummyRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B8589B31A0>)
2024-03-16 16:43:30,636:INFO:Checking exceptions
2024-03-16 16:43:30,636:INFO:Preloading libraries
2024-03-16 16:43:30,882:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:43:31,298:INFO:Creating Dashboard logs
2024-03-16 16:43:31,302:INFO:Model: Random Forest Regressor
2024-03-16 16:43:31,341:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 552, 'verbose': 0, 'warm_start': False}
2024-03-16 16:43:31,750:INFO:Creating Dashboard logs
2024-03-16 16:43:31,753:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:43:31,796:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 552, 'verbose': False}
2024-03-16 16:43:32,049:INFO:Creating Dashboard logs
2024-03-16 16:43:32,052:INFO:Model: Lasso Regression
2024-03-16 16:43:32,096:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 552, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:43:32,354:INFO:Creating Dashboard logs
2024-03-16 16:43:32,359:INFO:Model: Elastic Net
2024-03-16 16:43:32,405:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 552, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:43:32,649:INFO:Creating Dashboard logs
2024-03-16 16:43:32,652:INFO:Model: Bayesian Ridge
2024-03-16 16:43:32,685:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:43:32,927:INFO:Creating Dashboard logs
2024-03-16 16:43:32,931:INFO:Model: Ridge Regression
2024-03-16 16:43:32,973:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 552, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:43:33,250:INFO:Creating Dashboard logs
2024-03-16 16:43:33,253:INFO:Model: Linear Regression
2024-03-16 16:43:33,299:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:43:33,553:INFO:Creating Dashboard logs
2024-03-16 16:43:33,556:INFO:Model: Least Angle Regression
2024-03-16 16:43:33,602:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 552, 'verbose': False}
2024-03-16 16:43:33,879:INFO:Creating Dashboard logs
2024-03-16 16:43:33,883:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:43:33,926:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:43:34,148:INFO:Creating Dashboard logs
2024-03-16 16:43:34,151:INFO:Model: Huber Regressor
2024-03-16 16:43:34,193:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:43:34,435:INFO:Creating Dashboard logs
2024-03-16 16:43:34,439:INFO:Model: Extra Trees Regressor
2024-03-16 16:43:34,478:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 552, 'verbose': 0, 'warm_start': False}
2024-03-16 16:43:34,782:INFO:Creating Dashboard logs
2024-03-16 16:43:34,788:INFO:Model: AdaBoost Regressor
2024-03-16 16:43:34,837:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 552}
2024-03-16 16:43:35,102:INFO:Creating Dashboard logs
2024-03-16 16:43:35,106:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:43:35,153:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 552, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:43:35,491:INFO:Creating Dashboard logs
2024-03-16 16:43:35,495:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:43:35,547:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 552, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:43:35,862:INFO:Creating Dashboard logs
2024-03-16 16:43:35,866:INFO:Model: K Neighbors Regressor
2024-03-16 16:43:35,920:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:43:36,262:INFO:Creating Dashboard logs
2024-03-16 16:43:36,266:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:43:36,315:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 552, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:43:36,599:INFO:Creating Dashboard logs
2024-03-16 16:43:36,603:INFO:Model: Decision Tree Regressor
2024-03-16 16:43:36,643:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 552, 'splitter': 'best'}
2024-03-16 16:43:36,869:INFO:Creating Dashboard logs
2024-03-16 16:43:36,873:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:43:36,915:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 552, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:43:37,158:INFO:_master_model_container: 19
2024-03-16 16:43:37,158:INFO:_display_container: 2
2024-03-16 16:43:37,158:INFO:DummyRegressor()
2024-03-16 16:43:37,158:INFO:compare_models() successfully completed......................................
2024-03-16 16:47:31,174:INFO:PyCaret RegressionExperiment
2024-03-16 16:47:31,174:INFO:Logging name: reg-default-name
2024-03-16 16:47:31,174:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:47:31,174:INFO:version 3.3.0
2024-03-16 16:47:31,175:INFO:Initializing setup()
2024-03-16 16:47:31,175:INFO:self.USI: 2992
2024-03-16 16:47:31,175:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:47:31,175:INFO:Checking environment
2024-03-16 16:47:31,175:INFO:python_version: 3.11.5
2024-03-16 16:47:31,175:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:47:31,175:INFO:machine: AMD64
2024-03-16 16:47:31,175:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:47:31,175:INFO:Memory: svmem(total=34129678336, available=13514276864, percent=60.4, used=20615401472, free=13514276864)
2024-03-16 16:47:31,175:INFO:Physical Core: 6
2024-03-16 16:47:31,175:INFO:Logical Core: 12
2024-03-16 16:47:31,175:INFO:Checking libraries
2024-03-16 16:47:31,175:INFO:System:
2024-03-16 16:47:31,175:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:47:31,175:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:47:31,175:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:47:31,175:INFO:PyCaret required dependencies:
2024-03-16 16:47:31,176:INFO:                 pip: 24.0
2024-03-16 16:47:31,176:INFO:          setuptools: 68.0.0
2024-03-16 16:47:31,176:INFO:             pycaret: 3.3.0
2024-03-16 16:47:31,176:INFO:             IPython: 8.15.0
2024-03-16 16:47:31,176:INFO:          ipywidgets: 8.0.4
2024-03-16 16:47:31,176:INFO:                tqdm: 4.65.0
2024-03-16 16:47:31,176:INFO:               numpy: 1.24.3
2024-03-16 16:47:31,176:INFO:              pandas: 2.0.3
2024-03-16 16:47:31,176:INFO:              jinja2: 3.1.2
2024-03-16 16:47:31,176:INFO:               scipy: 1.11.1
2024-03-16 16:47:31,176:INFO:              joblib: 1.2.0
2024-03-16 16:47:31,176:INFO:             sklearn: 1.3.0
2024-03-16 16:47:31,176:INFO:                pyod: 1.1.3
2024-03-16 16:47:31,176:INFO:            imblearn: 0.10.1
2024-03-16 16:47:31,176:INFO:   category_encoders: 2.6.3
2024-03-16 16:47:31,176:INFO:            lightgbm: 4.3.0
2024-03-16 16:47:31,176:INFO:               numba: 0.57.1
2024-03-16 16:47:31,176:INFO:            requests: 2.31.0
2024-03-16 16:47:31,176:INFO:          matplotlib: 3.7.2
2024-03-16 16:47:31,176:INFO:          scikitplot: 0.3.7
2024-03-16 16:47:31,177:INFO:         yellowbrick: 1.5
2024-03-16 16:47:31,177:INFO:              plotly: 5.9.0
2024-03-16 16:47:31,177:INFO:    plotly-resampler: Not installed
2024-03-16 16:47:31,177:INFO:             kaleido: 0.2.1
2024-03-16 16:47:31,177:INFO:           schemdraw: 0.15
2024-03-16 16:47:31,177:INFO:         statsmodels: 0.14.0
2024-03-16 16:47:31,177:INFO:              sktime: 0.27.0
2024-03-16 16:47:31,177:INFO:               tbats: 1.1.3
2024-03-16 16:47:31,177:INFO:            pmdarima: 2.0.4
2024-03-16 16:47:31,177:INFO:              psutil: 5.9.0
2024-03-16 16:47:31,177:INFO:          markupsafe: 2.1.1
2024-03-16 16:47:31,177:INFO:             pickle5: Not installed
2024-03-16 16:47:31,177:INFO:         cloudpickle: 2.2.1
2024-03-16 16:47:31,177:INFO:         deprecation: 2.1.0
2024-03-16 16:47:31,177:INFO:              xxhash: 2.0.2
2024-03-16 16:47:31,177:INFO:           wurlitzer: Not installed
2024-03-16 16:47:31,177:INFO:PyCaret optional dependencies:
2024-03-16 16:47:31,177:INFO:                shap: Not installed
2024-03-16 16:47:31,177:INFO:           interpret: Not installed
2024-03-16 16:47:31,177:INFO:                umap: Not installed
2024-03-16 16:47:31,178:INFO:     ydata_profiling: Not installed
2024-03-16 16:47:31,178:INFO:  explainerdashboard: Not installed
2024-03-16 16:47:31,178:INFO:             autoviz: Not installed
2024-03-16 16:47:31,178:INFO:           fairlearn: Not installed
2024-03-16 16:47:31,178:INFO:          deepchecks: Not installed
2024-03-16 16:47:31,178:INFO:             xgboost: 2.0.3
2024-03-16 16:47:31,178:INFO:            catboost: Not installed
2024-03-16 16:47:31,178:INFO:              kmodes: Not installed
2024-03-16 16:47:31,178:INFO:             mlxtend: Not installed
2024-03-16 16:47:31,178:INFO:       statsforecast: Not installed
2024-03-16 16:47:31,178:INFO:        tune_sklearn: Not installed
2024-03-16 16:47:31,178:INFO:                 ray: Not installed
2024-03-16 16:47:31,178:INFO:            hyperopt: Not installed
2024-03-16 16:47:31,178:INFO:              optuna: Not installed
2024-03-16 16:47:31,178:INFO:               skopt: Not installed
2024-03-16 16:47:31,178:INFO:              mlflow: 2.11.1
2024-03-16 16:47:31,178:INFO:              gradio: Not installed
2024-03-16 16:47:31,178:INFO:             fastapi: Not installed
2024-03-16 16:47:31,178:INFO:             uvicorn: Not installed
2024-03-16 16:47:31,178:INFO:              m2cgen: Not installed
2024-03-16 16:47:31,178:INFO:           evidently: Not installed
2024-03-16 16:47:31,178:INFO:               fugue: Not installed
2024-03-16 16:47:31,178:INFO:           streamlit: Not installed
2024-03-16 16:47:31,179:INFO:             prophet: Not installed
2024-03-16 16:47:31,179:INFO:None
2024-03-16 16:47:31,179:INFO:Set up data.
2024-03-16 16:47:31,183:INFO:Set up folding strategy.
2024-03-16 16:47:31,183:INFO:Set up train/test split.
2024-03-16 16:47:31,188:INFO:Set up index.
2024-03-16 16:47:31,188:INFO:Assigning column types.
2024-03-16 16:47:31,192:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:47:31,192:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,197:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,204:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,312:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,316:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,320:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,324:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,421:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,424:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:47:31,428:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,432:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,487:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,531:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,538:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,644:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,644:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,647:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:47:31,655:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,752:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,865:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:31,868:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:47:31,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:31,987:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:31,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:32,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:47:32,116:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,122:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:47:32,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:32,234:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:47:32,388:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,391:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:47:32,502:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,622:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,625:INFO:Preparing preprocessing pipeline...
2024-03-16 16:47:32,626:INFO:Set up simple imputation.
2024-03-16 16:47:32,626:INFO:Set up column name cleaning.
2024-03-16 16:47:32,653:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:47:32,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:47:32,658:INFO:Creating final display dataframe.
2024-03-16 16:47:32,752:INFO:Setup _display_container:                     Description             Value
0                    Session id              4781
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 11)
4        Transformed data shape        (1859, 11)
5   Transformed train set shape        (1301, 11)
6    Transformed test set shape         (558, 11)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              2992
2024-03-16 16:47:32,869:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,978:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:47:32,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:47:32,981:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:47:32,982:INFO:Logging experiment in loggers
2024-03-16 16:47:33,052:INFO:SubProcess save_model() called ==================================
2024-03-16 16:47:33,065:INFO:Initializing save_model()
2024-03-16 16:47:33,065:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp72sjnwgu\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:47:33,066:INFO:Adding model into prep_pipe
2024-03-16 16:47:33,066:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:47:33,070:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp72sjnwgu\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:47:33,076:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:47:33,077:INFO:save_model() successfully completed......................................
2024-03-16 16:47:33,218:INFO:SubProcess save_model() end ==================================
2024-03-16 16:47:33,228:INFO:setup() successfully completed in 1.81s...............
2024-03-16 16:47:33,228:INFO:Initializing compare_models()
2024-03-16 16:47:33,228:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:47:33,228:INFO:Checking exceptions
2024-03-16 16:47:33,230:INFO:Preparing display monitor
2024-03-16 16:47:33,255:INFO:Initializing Linear Regression
2024-03-16 16:47:33,255:INFO:Total runtime is 1.6701221466064452e-05 minutes
2024-03-16 16:47:33,258:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:33,258:INFO:Initializing create_model()
2024-03-16 16:47:33,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:33,259:INFO:Checking exceptions
2024-03-16 16:47:33,259:INFO:Importing libraries
2024-03-16 16:47:33,259:INFO:Copying training dataset
2024-03-16 16:47:33,264:INFO:Defining folds
2024-03-16 16:47:33,264:INFO:Declaring metric variables
2024-03-16 16:47:33,269:INFO:Importing untrained model
2024-03-16 16:47:33,273:INFO:Linear Regression Imported successfully
2024-03-16 16:47:33,280:INFO:Starting cross validation
2024-03-16 16:47:33,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:33,425:INFO:Calculating mean and std
2024-03-16 16:47:33,425:INFO:Creating metrics dataframe
2024-03-16 16:47:33,427:INFO:Uploading results into container
2024-03-16 16:47:33,427:INFO:Uploading model into container now
2024-03-16 16:47:33,428:INFO:_master_model_container: 1
2024-03-16 16:47:33,428:INFO:_display_container: 2
2024-03-16 16:47:33,428:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:47:33,428:INFO:create_model() successfully completed......................................
2024-03-16 16:47:33,556:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:33,556:INFO:Creating metrics dataframe
2024-03-16 16:47:33,562:INFO:Initializing Lasso Regression
2024-03-16 16:47:33,563:INFO:Total runtime is 0.005151712894439697 minutes
2024-03-16 16:47:33,567:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:33,567:INFO:Initializing create_model()
2024-03-16 16:47:33,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:33,567:INFO:Checking exceptions
2024-03-16 16:47:33,567:INFO:Importing libraries
2024-03-16 16:47:33,568:INFO:Copying training dataset
2024-03-16 16:47:33,573:INFO:Defining folds
2024-03-16 16:47:33,573:INFO:Declaring metric variables
2024-03-16 16:47:33,576:INFO:Importing untrained model
2024-03-16 16:47:33,579:INFO:Lasso Regression Imported successfully
2024-03-16 16:47:33,587:INFO:Starting cross validation
2024-03-16 16:47:33,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:33,685:INFO:Calculating mean and std
2024-03-16 16:47:33,686:INFO:Creating metrics dataframe
2024-03-16 16:47:33,687:INFO:Uploading results into container
2024-03-16 16:47:33,688:INFO:Uploading model into container now
2024-03-16 16:47:33,688:INFO:_master_model_container: 2
2024-03-16 16:47:33,688:INFO:_display_container: 2
2024-03-16 16:47:33,688:INFO:Lasso(random_state=4781)
2024-03-16 16:47:33,688:INFO:create_model() successfully completed......................................
2024-03-16 16:47:33,821:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:33,821:INFO:Creating metrics dataframe
2024-03-16 16:47:33,829:INFO:Initializing Ridge Regression
2024-03-16 16:47:33,829:INFO:Total runtime is 0.009579249223073323 minutes
2024-03-16 16:47:33,834:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:33,834:INFO:Initializing create_model()
2024-03-16 16:47:33,834:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:33,834:INFO:Checking exceptions
2024-03-16 16:47:33,834:INFO:Importing libraries
2024-03-16 16:47:33,835:INFO:Copying training dataset
2024-03-16 16:47:33,839:INFO:Defining folds
2024-03-16 16:47:33,839:INFO:Declaring metric variables
2024-03-16 16:47:33,843:INFO:Importing untrained model
2024-03-16 16:47:33,847:INFO:Ridge Regression Imported successfully
2024-03-16 16:47:33,855:INFO:Starting cross validation
2024-03-16 16:47:33,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:33,897:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.1823e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,900:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.8037e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,906:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.08815e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,915:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.92907e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,925:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.91695e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,937:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.57145e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,943:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.15181e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,954:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.14054e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,964:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.01276e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,975:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.00311e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:47:33,986:INFO:Calculating mean and std
2024-03-16 16:47:33,987:INFO:Creating metrics dataframe
2024-03-16 16:47:33,988:INFO:Uploading results into container
2024-03-16 16:47:33,989:INFO:Uploading model into container now
2024-03-16 16:47:33,989:INFO:_master_model_container: 3
2024-03-16 16:47:33,989:INFO:_display_container: 2
2024-03-16 16:47:33,989:INFO:Ridge(random_state=4781)
2024-03-16 16:47:33,989:INFO:create_model() successfully completed......................................
2024-03-16 16:47:34,118:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:34,118:INFO:Creating metrics dataframe
2024-03-16 16:47:34,125:INFO:Initializing Elastic Net
2024-03-16 16:47:34,126:INFO:Total runtime is 0.014531977971394857 minutes
2024-03-16 16:47:34,129:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:34,130:INFO:Initializing create_model()
2024-03-16 16:47:34,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:34,130:INFO:Checking exceptions
2024-03-16 16:47:34,130:INFO:Importing libraries
2024-03-16 16:47:34,130:INFO:Copying training dataset
2024-03-16 16:47:34,135:INFO:Defining folds
2024-03-16 16:47:34,136:INFO:Declaring metric variables
2024-03-16 16:47:34,139:INFO:Importing untrained model
2024-03-16 16:47:34,142:INFO:Elastic Net Imported successfully
2024-03-16 16:47:34,149:INFO:Starting cross validation
2024-03-16 16:47:34,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:34,252:INFO:Calculating mean and std
2024-03-16 16:47:34,253:INFO:Creating metrics dataframe
2024-03-16 16:47:34,255:INFO:Uploading results into container
2024-03-16 16:47:34,255:INFO:Uploading model into container now
2024-03-16 16:47:34,256:INFO:_master_model_container: 4
2024-03-16 16:47:34,256:INFO:_display_container: 2
2024-03-16 16:47:34,256:INFO:ElasticNet(random_state=4781)
2024-03-16 16:47:34,256:INFO:create_model() successfully completed......................................
2024-03-16 16:47:34,388:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:34,388:INFO:Creating metrics dataframe
2024-03-16 16:47:34,397:INFO:Initializing Least Angle Regression
2024-03-16 16:47:34,397:INFO:Total runtime is 0.01904647747675578 minutes
2024-03-16 16:47:34,402:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:34,402:INFO:Initializing create_model()
2024-03-16 16:47:34,402:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:34,402:INFO:Checking exceptions
2024-03-16 16:47:34,402:INFO:Importing libraries
2024-03-16 16:47:34,402:INFO:Copying training dataset
2024-03-16 16:47:34,408:INFO:Defining folds
2024-03-16 16:47:34,408:INFO:Declaring metric variables
2024-03-16 16:47:34,412:INFO:Importing untrained model
2024-03-16 16:47:34,416:INFO:Least Angle Regression Imported successfully
2024-03-16 16:47:34,424:INFO:Starting cross validation
2024-03-16 16:47:34,425:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:34,523:INFO:Calculating mean and std
2024-03-16 16:47:34,524:INFO:Creating metrics dataframe
2024-03-16 16:47:34,526:INFO:Uploading results into container
2024-03-16 16:47:34,526:INFO:Uploading model into container now
2024-03-16 16:47:34,527:INFO:_master_model_container: 5
2024-03-16 16:47:34,527:INFO:_display_container: 2
2024-03-16 16:47:34,528:INFO:Lars(random_state=4781)
2024-03-16 16:47:34,528:INFO:create_model() successfully completed......................................
2024-03-16 16:47:34,660:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:34,660:INFO:Creating metrics dataframe
2024-03-16 16:47:34,670:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:47:34,670:INFO:Total runtime is 0.023589495817820234 minutes
2024-03-16 16:47:34,674:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:34,674:INFO:Initializing create_model()
2024-03-16 16:47:34,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:34,674:INFO:Checking exceptions
2024-03-16 16:47:34,674:INFO:Importing libraries
2024-03-16 16:47:34,674:INFO:Copying training dataset
2024-03-16 16:47:34,679:INFO:Defining folds
2024-03-16 16:47:34,679:INFO:Declaring metric variables
2024-03-16 16:47:34,684:INFO:Importing untrained model
2024-03-16 16:47:34,688:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:47:34,695:INFO:Starting cross validation
2024-03-16 16:47:34,696:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:34,799:INFO:Calculating mean and std
2024-03-16 16:47:34,800:INFO:Creating metrics dataframe
2024-03-16 16:47:34,802:INFO:Uploading results into container
2024-03-16 16:47:34,803:INFO:Uploading model into container now
2024-03-16 16:47:34,803:INFO:_master_model_container: 6
2024-03-16 16:47:34,803:INFO:_display_container: 2
2024-03-16 16:47:34,804:INFO:LassoLars(random_state=4781)
2024-03-16 16:47:34,804:INFO:create_model() successfully completed......................................
2024-03-16 16:47:34,938:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:34,938:INFO:Creating metrics dataframe
2024-03-16 16:47:34,946:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:47:34,946:INFO:Total runtime is 0.028190386295318608 minutes
2024-03-16 16:47:34,950:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:34,951:INFO:Initializing create_model()
2024-03-16 16:47:34,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:34,951:INFO:Checking exceptions
2024-03-16 16:47:34,951:INFO:Importing libraries
2024-03-16 16:47:34,951:INFO:Copying training dataset
2024-03-16 16:47:34,957:INFO:Defining folds
2024-03-16 16:47:34,957:INFO:Declaring metric variables
2024-03-16 16:47:34,961:INFO:Importing untrained model
2024-03-16 16:47:34,965:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:47:34,974:INFO:Starting cross validation
2024-03-16 16:47:34,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:35,075:INFO:Calculating mean and std
2024-03-16 16:47:35,076:INFO:Creating metrics dataframe
2024-03-16 16:47:35,078:INFO:Uploading results into container
2024-03-16 16:47:35,078:INFO:Uploading model into container now
2024-03-16 16:47:35,079:INFO:_master_model_container: 7
2024-03-16 16:47:35,079:INFO:_display_container: 2
2024-03-16 16:47:35,079:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:47:35,080:INFO:create_model() successfully completed......................................
2024-03-16 16:47:35,210:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:35,211:INFO:Creating metrics dataframe
2024-03-16 16:47:35,220:INFO:Initializing Bayesian Ridge
2024-03-16 16:47:35,221:INFO:Total runtime is 0.032772473494211835 minutes
2024-03-16 16:47:35,224:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:35,224:INFO:Initializing create_model()
2024-03-16 16:47:35,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:35,225:INFO:Checking exceptions
2024-03-16 16:47:35,225:INFO:Importing libraries
2024-03-16 16:47:35,225:INFO:Copying training dataset
2024-03-16 16:47:35,230:INFO:Defining folds
2024-03-16 16:47:35,230:INFO:Declaring metric variables
2024-03-16 16:47:35,236:INFO:Importing untrained model
2024-03-16 16:47:35,240:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:47:35,248:INFO:Starting cross validation
2024-03-16 16:47:35,249:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:35,363:INFO:Calculating mean and std
2024-03-16 16:47:35,364:INFO:Creating metrics dataframe
2024-03-16 16:47:35,365:INFO:Uploading results into container
2024-03-16 16:47:35,366:INFO:Uploading model into container now
2024-03-16 16:47:35,367:INFO:_master_model_container: 8
2024-03-16 16:47:35,367:INFO:_display_container: 2
2024-03-16 16:47:35,367:INFO:BayesianRidge()
2024-03-16 16:47:35,367:INFO:create_model() successfully completed......................................
2024-03-16 16:47:35,496:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:35,496:INFO:Creating metrics dataframe
2024-03-16 16:47:35,505:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:47:35,506:INFO:Total runtime is 0.03753665685653687 minutes
2024-03-16 16:47:35,510:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:35,510:INFO:Initializing create_model()
2024-03-16 16:47:35,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:35,510:INFO:Checking exceptions
2024-03-16 16:47:35,510:INFO:Importing libraries
2024-03-16 16:47:35,510:INFO:Copying training dataset
2024-03-16 16:47:35,516:INFO:Defining folds
2024-03-16 16:47:35,516:INFO:Declaring metric variables
2024-03-16 16:47:35,520:INFO:Importing untrained model
2024-03-16 16:47:35,524:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:47:35,535:INFO:Starting cross validation
2024-03-16 16:47:35,536:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:35,676:INFO:Calculating mean and std
2024-03-16 16:47:35,677:INFO:Creating metrics dataframe
2024-03-16 16:47:35,679:INFO:Uploading results into container
2024-03-16 16:47:35,680:INFO:Uploading model into container now
2024-03-16 16:47:35,681:INFO:_master_model_container: 9
2024-03-16 16:47:35,681:INFO:_display_container: 2
2024-03-16 16:47:35,681:INFO:PassiveAggressiveRegressor(random_state=4781)
2024-03-16 16:47:35,681:INFO:create_model() successfully completed......................................
2024-03-16 16:47:35,812:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:35,812:INFO:Creating metrics dataframe
2024-03-16 16:47:35,822:INFO:Initializing Huber Regressor
2024-03-16 16:47:35,822:INFO:Total runtime is 0.04279643694559734 minutes
2024-03-16 16:47:35,826:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:35,826:INFO:Initializing create_model()
2024-03-16 16:47:35,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:35,826:INFO:Checking exceptions
2024-03-16 16:47:35,826:INFO:Importing libraries
2024-03-16 16:47:35,826:INFO:Copying training dataset
2024-03-16 16:47:35,832:INFO:Defining folds
2024-03-16 16:47:35,832:INFO:Declaring metric variables
2024-03-16 16:47:35,837:INFO:Importing untrained model
2024-03-16 16:47:35,840:INFO:Huber Regressor Imported successfully
2024-03-16 16:47:35,847:INFO:Starting cross validation
2024-03-16 16:47:35,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:35,960:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:47:35,962:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:47:35,987:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:47:35,993:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:47:36,004:INFO:Calculating mean and std
2024-03-16 16:47:36,005:INFO:Creating metrics dataframe
2024-03-16 16:47:36,007:INFO:Uploading results into container
2024-03-16 16:47:36,008:INFO:Uploading model into container now
2024-03-16 16:47:36,008:INFO:_master_model_container: 10
2024-03-16 16:47:36,009:INFO:_display_container: 2
2024-03-16 16:47:36,009:INFO:HuberRegressor()
2024-03-16 16:47:36,009:INFO:create_model() successfully completed......................................
2024-03-16 16:47:36,139:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:36,139:INFO:Creating metrics dataframe
2024-03-16 16:47:36,149:INFO:Initializing K Neighbors Regressor
2024-03-16 16:47:36,150:INFO:Total runtime is 0.048267090320587167 minutes
2024-03-16 16:47:36,153:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:36,154:INFO:Initializing create_model()
2024-03-16 16:47:36,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:36,154:INFO:Checking exceptions
2024-03-16 16:47:36,154:INFO:Importing libraries
2024-03-16 16:47:36,154:INFO:Copying training dataset
2024-03-16 16:47:36,159:INFO:Defining folds
2024-03-16 16:47:36,159:INFO:Declaring metric variables
2024-03-16 16:47:36,163:INFO:Importing untrained model
2024-03-16 16:47:36,167:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:47:36,175:INFO:Starting cross validation
2024-03-16 16:47:36,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:36,304:INFO:Calculating mean and std
2024-03-16 16:47:36,305:INFO:Creating metrics dataframe
2024-03-16 16:47:36,307:INFO:Uploading results into container
2024-03-16 16:47:36,307:INFO:Uploading model into container now
2024-03-16 16:47:36,308:INFO:_master_model_container: 11
2024-03-16 16:47:36,308:INFO:_display_container: 2
2024-03-16 16:47:36,309:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:47:36,309:INFO:create_model() successfully completed......................................
2024-03-16 16:47:36,439:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:36,439:INFO:Creating metrics dataframe
2024-03-16 16:47:36,449:INFO:Initializing Decision Tree Regressor
2024-03-16 16:47:36,449:INFO:Total runtime is 0.053243327140808115 minutes
2024-03-16 16:47:36,453:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:36,454:INFO:Initializing create_model()
2024-03-16 16:47:36,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:36,454:INFO:Checking exceptions
2024-03-16 16:47:36,454:INFO:Importing libraries
2024-03-16 16:47:36,454:INFO:Copying training dataset
2024-03-16 16:47:36,459:INFO:Defining folds
2024-03-16 16:47:36,460:INFO:Declaring metric variables
2024-03-16 16:47:36,463:INFO:Importing untrained model
2024-03-16 16:47:36,468:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:47:36,475:INFO:Starting cross validation
2024-03-16 16:47:36,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:36,578:INFO:Calculating mean and std
2024-03-16 16:47:36,579:INFO:Creating metrics dataframe
2024-03-16 16:47:36,581:INFO:Uploading results into container
2024-03-16 16:47:36,582:INFO:Uploading model into container now
2024-03-16 16:47:36,582:INFO:_master_model_container: 12
2024-03-16 16:47:36,583:INFO:_display_container: 2
2024-03-16 16:47:36,583:INFO:DecisionTreeRegressor(random_state=4781)
2024-03-16 16:47:36,584:INFO:create_model() successfully completed......................................
2024-03-16 16:47:36,713:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:36,713:INFO:Creating metrics dataframe
2024-03-16 16:47:36,724:INFO:Initializing Random Forest Regressor
2024-03-16 16:47:36,724:INFO:Total runtime is 0.05783654054005942 minutes
2024-03-16 16:47:36,728:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:36,728:INFO:Initializing create_model()
2024-03-16 16:47:36,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:36,728:INFO:Checking exceptions
2024-03-16 16:47:36,728:INFO:Importing libraries
2024-03-16 16:47:36,728:INFO:Copying training dataset
2024-03-16 16:47:36,734:INFO:Defining folds
2024-03-16 16:47:36,734:INFO:Declaring metric variables
2024-03-16 16:47:36,738:INFO:Importing untrained model
2024-03-16 16:47:36,742:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:47:36,748:INFO:Starting cross validation
2024-03-16 16:47:36,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:37,691:INFO:Calculating mean and std
2024-03-16 16:47:37,692:INFO:Creating metrics dataframe
2024-03-16 16:47:37,694:INFO:Uploading results into container
2024-03-16 16:47:37,694:INFO:Uploading model into container now
2024-03-16 16:47:37,696:INFO:_master_model_container: 13
2024-03-16 16:47:37,696:INFO:_display_container: 2
2024-03-16 16:47:37,696:INFO:RandomForestRegressor(n_jobs=-1, random_state=4781)
2024-03-16 16:47:37,696:INFO:create_model() successfully completed......................................
2024-03-16 16:47:37,847:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:37,847:INFO:Creating metrics dataframe
2024-03-16 16:47:37,858:INFO:Initializing Extra Trees Regressor
2024-03-16 16:47:37,858:INFO:Total runtime is 0.07673121293385825 minutes
2024-03-16 16:47:37,862:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:37,863:INFO:Initializing create_model()
2024-03-16 16:47:37,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:37,863:INFO:Checking exceptions
2024-03-16 16:47:37,863:INFO:Importing libraries
2024-03-16 16:47:37,863:INFO:Copying training dataset
2024-03-16 16:47:37,873:INFO:Defining folds
2024-03-16 16:47:37,873:INFO:Declaring metric variables
2024-03-16 16:47:37,877:INFO:Importing untrained model
2024-03-16 16:47:37,881:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:47:37,888:INFO:Starting cross validation
2024-03-16 16:47:37,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:38,676:INFO:Calculating mean and std
2024-03-16 16:47:38,678:INFO:Creating metrics dataframe
2024-03-16 16:47:38,680:INFO:Uploading results into container
2024-03-16 16:47:38,681:INFO:Uploading model into container now
2024-03-16 16:47:38,681:INFO:_master_model_container: 14
2024-03-16 16:47:38,682:INFO:_display_container: 2
2024-03-16 16:47:38,683:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4781)
2024-03-16 16:47:38,683:INFO:create_model() successfully completed......................................
2024-03-16 16:47:38,823:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:38,823:INFO:Creating metrics dataframe
2024-03-16 16:47:38,834:INFO:Initializing AdaBoost Regressor
2024-03-16 16:47:38,834:INFO:Total runtime is 0.09299434820810955 minutes
2024-03-16 16:47:38,837:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:38,838:INFO:Initializing create_model()
2024-03-16 16:47:38,838:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:38,838:INFO:Checking exceptions
2024-03-16 16:47:38,838:INFO:Importing libraries
2024-03-16 16:47:38,838:INFO:Copying training dataset
2024-03-16 16:47:38,843:INFO:Defining folds
2024-03-16 16:47:38,844:INFO:Declaring metric variables
2024-03-16 16:47:38,847:INFO:Importing untrained model
2024-03-16 16:47:38,853:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:47:38,860:INFO:Starting cross validation
2024-03-16 16:47:38,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:39,156:INFO:Calculating mean and std
2024-03-16 16:47:39,158:INFO:Creating metrics dataframe
2024-03-16 16:47:39,160:INFO:Uploading results into container
2024-03-16 16:47:39,160:INFO:Uploading model into container now
2024-03-16 16:47:39,161:INFO:_master_model_container: 15
2024-03-16 16:47:39,161:INFO:_display_container: 2
2024-03-16 16:47:39,162:INFO:AdaBoostRegressor(random_state=4781)
2024-03-16 16:47:39,162:INFO:create_model() successfully completed......................................
2024-03-16 16:47:39,302:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:39,303:INFO:Creating metrics dataframe
2024-03-16 16:47:39,314:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:47:39,315:INFO:Total runtime is 0.10100796222686768 minutes
2024-03-16 16:47:39,319:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:39,319:INFO:Initializing create_model()
2024-03-16 16:47:39,319:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:39,319:INFO:Checking exceptions
2024-03-16 16:47:39,320:INFO:Importing libraries
2024-03-16 16:47:39,320:INFO:Copying training dataset
2024-03-16 16:47:39,325:INFO:Defining folds
2024-03-16 16:47:39,325:INFO:Declaring metric variables
2024-03-16 16:47:39,329:INFO:Importing untrained model
2024-03-16 16:47:39,334:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:47:39,341:INFO:Starting cross validation
2024-03-16 16:47:39,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:39,655:INFO:Calculating mean and std
2024-03-16 16:47:39,656:INFO:Creating metrics dataframe
2024-03-16 16:47:39,658:INFO:Uploading results into container
2024-03-16 16:47:39,659:INFO:Uploading model into container now
2024-03-16 16:47:39,659:INFO:_master_model_container: 16
2024-03-16 16:47:39,659:INFO:_display_container: 2
2024-03-16 16:47:39,660:INFO:GradientBoostingRegressor(random_state=4781)
2024-03-16 16:47:39,660:INFO:create_model() successfully completed......................................
2024-03-16 16:47:39,790:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:39,791:INFO:Creating metrics dataframe
2024-03-16 16:47:39,802:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:47:39,803:INFO:Total runtime is 0.10915143887201946 minutes
2024-03-16 16:47:39,806:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:39,806:INFO:Initializing create_model()
2024-03-16 16:47:39,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:39,807:INFO:Checking exceptions
2024-03-16 16:47:39,807:INFO:Importing libraries
2024-03-16 16:47:39,807:INFO:Copying training dataset
2024-03-16 16:47:39,812:INFO:Defining folds
2024-03-16 16:47:39,812:INFO:Declaring metric variables
2024-03-16 16:47:39,818:INFO:Importing untrained model
2024-03-16 16:47:39,823:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:47:39,829:INFO:Starting cross validation
2024-03-16 16:47:39,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:40,098:INFO:Calculating mean and std
2024-03-16 16:47:40,099:INFO:Creating metrics dataframe
2024-03-16 16:47:40,101:INFO:Uploading results into container
2024-03-16 16:47:40,102:INFO:Uploading model into container now
2024-03-16 16:47:40,102:INFO:_master_model_container: 17
2024-03-16 16:47:40,102:INFO:_display_container: 2
2024-03-16 16:47:40,103:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4781, ...)
2024-03-16 16:47:40,103:INFO:create_model() successfully completed......................................
2024-03-16 16:47:40,240:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:40,240:INFO:Creating metrics dataframe
2024-03-16 16:47:40,252:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:47:40,252:INFO:Total runtime is 0.11662208239237469 minutes
2024-03-16 16:47:40,256:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:40,256:INFO:Initializing create_model()
2024-03-16 16:47:40,256:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:40,256:INFO:Checking exceptions
2024-03-16 16:47:40,257:INFO:Importing libraries
2024-03-16 16:47:40,257:INFO:Copying training dataset
2024-03-16 16:47:40,262:INFO:Defining folds
2024-03-16 16:47:40,262:INFO:Declaring metric variables
2024-03-16 16:47:40,265:INFO:Importing untrained model
2024-03-16 16:47:40,270:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:47:40,277:INFO:Starting cross validation
2024-03-16 16:47:40,278:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:41,654:INFO:Calculating mean and std
2024-03-16 16:47:41,656:INFO:Creating metrics dataframe
2024-03-16 16:47:41,660:INFO:Uploading results into container
2024-03-16 16:47:41,660:INFO:Uploading model into container now
2024-03-16 16:47:41,661:INFO:_master_model_container: 18
2024-03-16 16:47:41,661:INFO:_display_container: 2
2024-03-16 16:47:41,662:INFO:LGBMRegressor(n_jobs=-1, random_state=4781)
2024-03-16 16:47:41,662:INFO:create_model() successfully completed......................................
2024-03-16 16:47:41,827:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:41,827:INFO:Creating metrics dataframe
2024-03-16 16:47:41,840:INFO:Initializing Dummy Regressor
2024-03-16 16:47:41,840:INFO:Total runtime is 0.1431040406227112 minutes
2024-03-16 16:47:41,843:INFO:SubProcess create_model() called ==================================
2024-03-16 16:47:41,843:INFO:Initializing create_model()
2024-03-16 16:47:41,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A2E3610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:41,844:INFO:Checking exceptions
2024-03-16 16:47:41,844:INFO:Importing libraries
2024-03-16 16:47:41,844:INFO:Copying training dataset
2024-03-16 16:47:41,851:INFO:Defining folds
2024-03-16 16:47:41,852:INFO:Declaring metric variables
2024-03-16 16:47:41,856:INFO:Importing untrained model
2024-03-16 16:47:41,861:INFO:Dummy Regressor Imported successfully
2024-03-16 16:47:41,868:INFO:Starting cross validation
2024-03-16 16:47:41,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:47:41,957:INFO:Calculating mean and std
2024-03-16 16:47:41,958:INFO:Creating metrics dataframe
2024-03-16 16:47:41,960:INFO:Uploading results into container
2024-03-16 16:47:41,960:INFO:Uploading model into container now
2024-03-16 16:47:41,961:INFO:_master_model_container: 19
2024-03-16 16:47:41,961:INFO:_display_container: 2
2024-03-16 16:47:41,962:INFO:DummyRegressor()
2024-03-16 16:47:41,962:INFO:create_model() successfully completed......................................
2024-03-16 16:47:42,091:INFO:SubProcess create_model() end ==================================
2024-03-16 16:47:42,091:INFO:Creating metrics dataframe
2024-03-16 16:47:42,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:47:42,114:INFO:Initializing create_model()
2024-03-16 16:47:42,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=GradientBoostingRegressor(random_state=4781), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:47:42,115:INFO:Checking exceptions
2024-03-16 16:47:42,117:INFO:Importing libraries
2024-03-16 16:47:42,117:INFO:Copying training dataset
2024-03-16 16:47:42,123:INFO:Defining folds
2024-03-16 16:47:42,123:INFO:Declaring metric variables
2024-03-16 16:47:42,123:INFO:Importing untrained model
2024-03-16 16:47:42,123:INFO:Declaring custom model
2024-03-16 16:47:42,124:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:47:42,125:INFO:Cross validation set to False
2024-03-16 16:47:42,125:INFO:Fitting Model
2024-03-16 16:47:42,284:INFO:GradientBoostingRegressor(random_state=4781)
2024-03-16 16:47:42,285:INFO:create_model() successfully completed......................................
2024-03-16 16:47:42,414:INFO:Creating Dashboard logs
2024-03-16 16:47:42,421:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:47:42,460:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 4781, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:47:42,543:INFO:Initializing predict_model()
2024-03-16 16:47:42,543:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B851C78D90>, estimator=GradientBoostingRegressor(random_state=4781), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D2FAFC0>)
2024-03-16 16:47:42,543:INFO:Checking exceptions
2024-03-16 16:47:42,543:INFO:Preloading libraries
2024-03-16 16:47:42,601:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:47:42,916:INFO:Creating Dashboard logs
2024-03-16 16:47:42,920:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:47:42,961:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:47:43,176:INFO:Creating Dashboard logs
2024-03-16 16:47:43,180:INFO:Model: Bayesian Ridge
2024-03-16 16:47:43,223:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:47:43,471:INFO:Creating Dashboard logs
2024-03-16 16:47:43,475:INFO:Model: Elastic Net
2024-03-16 16:47:43,518:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4781, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:47:43,745:INFO:Creating Dashboard logs
2024-03-16 16:47:43,749:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:47:43,784:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 4781, 'verbose': False}
2024-03-16 16:47:44,024:INFO:Creating Dashboard logs
2024-03-16 16:47:44,028:INFO:Model: Lasso Regression
2024-03-16 16:47:44,075:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4781, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:47:44,300:INFO:Creating Dashboard logs
2024-03-16 16:47:44,304:INFO:Model: Ridge Regression
2024-03-16 16:47:44,347:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 4781, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:47:44,589:INFO:Creating Dashboard logs
2024-03-16 16:47:44,593:INFO:Model: Linear Regression
2024-03-16 16:47:44,631:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:47:44,873:INFO:Creating Dashboard logs
2024-03-16 16:47:44,878:INFO:Model: Least Angle Regression
2024-03-16 16:47:44,925:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 4781, 'verbose': False}
2024-03-16 16:47:45,166:INFO:Creating Dashboard logs
2024-03-16 16:47:45,170:INFO:Model: Huber Regressor
2024-03-16 16:47:45,213:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:47:45,461:INFO:Creating Dashboard logs
2024-03-16 16:47:45,464:INFO:Model: Random Forest Regressor
2024-03-16 16:47:45,506:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4781, 'verbose': 0, 'warm_start': False}
2024-03-16 16:47:45,735:INFO:Creating Dashboard logs
2024-03-16 16:47:45,739:INFO:Model: Extra Trees Regressor
2024-03-16 16:47:45,769:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4781, 'verbose': 0, 'warm_start': False}
2024-03-16 16:47:46,002:INFO:Creating Dashboard logs
2024-03-16 16:47:46,005:INFO:Model: K Neighbors Regressor
2024-03-16 16:47:46,054:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:47:46,278:INFO:Creating Dashboard logs
2024-03-16 16:47:46,283:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:47:46,324:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 4781, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:47:46,666:INFO:Creating Dashboard logs
2024-03-16 16:47:46,671:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:47:46,704:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 4781, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:47:46,937:INFO:Creating Dashboard logs
2024-03-16 16:47:46,940:INFO:Model: Decision Tree Regressor
2024-03-16 16:47:46,984:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4781, 'splitter': 'best'}
2024-03-16 16:47:47,206:INFO:Creating Dashboard logs
2024-03-16 16:47:47,210:INFO:Model: AdaBoost Regressor
2024-03-16 16:47:47,254:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 4781}
2024-03-16 16:47:47,480:INFO:Creating Dashboard logs
2024-03-16 16:47:47,485:INFO:Model: Dummy Regressor
2024-03-16 16:47:47,547:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:47:47,813:INFO:Creating Dashboard logs
2024-03-16 16:47:47,823:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:47:47,857:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 4781, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:47:48,140:INFO:_master_model_container: 19
2024-03-16 16:47:48,140:INFO:_display_container: 2
2024-03-16 16:47:48,141:INFO:GradientBoostingRegressor(random_state=4781)
2024-03-16 16:47:48,141:INFO:compare_models() successfully completed......................................
2024-03-16 16:48:52,218:INFO:PyCaret RegressionExperiment
2024-03-16 16:48:52,218:INFO:Logging name: reg-default-name
2024-03-16 16:48:52,218:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:48:52,218:INFO:version 3.3.0
2024-03-16 16:48:52,218:INFO:Initializing setup()
2024-03-16 16:48:52,218:INFO:self.USI: 0a11
2024-03-16 16:48:52,218:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:48:52,218:INFO:Checking environment
2024-03-16 16:48:52,219:INFO:python_version: 3.11.5
2024-03-16 16:48:52,219:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:48:52,219:INFO:machine: AMD64
2024-03-16 16:48:52,219:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:48:52,219:INFO:Memory: svmem(total=34129678336, available=13627355136, percent=60.1, used=20502323200, free=13627355136)
2024-03-16 16:48:52,219:INFO:Physical Core: 6
2024-03-16 16:48:52,219:INFO:Logical Core: 12
2024-03-16 16:48:52,219:INFO:Checking libraries
2024-03-16 16:48:52,219:INFO:System:
2024-03-16 16:48:52,219:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:48:52,219:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:48:52,219:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:48:52,219:INFO:PyCaret required dependencies:
2024-03-16 16:48:52,219:INFO:                 pip: 24.0
2024-03-16 16:48:52,219:INFO:          setuptools: 68.0.0
2024-03-16 16:48:52,220:INFO:             pycaret: 3.3.0
2024-03-16 16:48:52,220:INFO:             IPython: 8.15.0
2024-03-16 16:48:52,220:INFO:          ipywidgets: 8.0.4
2024-03-16 16:48:52,220:INFO:                tqdm: 4.65.0
2024-03-16 16:48:52,220:INFO:               numpy: 1.24.3
2024-03-16 16:48:52,220:INFO:              pandas: 2.0.3
2024-03-16 16:48:52,220:INFO:              jinja2: 3.1.2
2024-03-16 16:48:52,220:INFO:               scipy: 1.11.1
2024-03-16 16:48:52,220:INFO:              joblib: 1.2.0
2024-03-16 16:48:52,220:INFO:             sklearn: 1.3.0
2024-03-16 16:48:52,220:INFO:                pyod: 1.1.3
2024-03-16 16:48:52,220:INFO:            imblearn: 0.10.1
2024-03-16 16:48:52,220:INFO:   category_encoders: 2.6.3
2024-03-16 16:48:52,220:INFO:            lightgbm: 4.3.0
2024-03-16 16:48:52,220:INFO:               numba: 0.57.1
2024-03-16 16:48:52,220:INFO:            requests: 2.31.0
2024-03-16 16:48:52,220:INFO:          matplotlib: 3.7.2
2024-03-16 16:48:52,220:INFO:          scikitplot: 0.3.7
2024-03-16 16:48:52,220:INFO:         yellowbrick: 1.5
2024-03-16 16:48:52,220:INFO:              plotly: 5.9.0
2024-03-16 16:48:52,220:INFO:    plotly-resampler: Not installed
2024-03-16 16:48:52,221:INFO:             kaleido: 0.2.1
2024-03-16 16:48:52,221:INFO:           schemdraw: 0.15
2024-03-16 16:48:52,221:INFO:         statsmodels: 0.14.0
2024-03-16 16:48:52,221:INFO:              sktime: 0.27.0
2024-03-16 16:48:52,221:INFO:               tbats: 1.1.3
2024-03-16 16:48:52,221:INFO:            pmdarima: 2.0.4
2024-03-16 16:48:52,221:INFO:              psutil: 5.9.0
2024-03-16 16:48:52,221:INFO:          markupsafe: 2.1.1
2024-03-16 16:48:52,221:INFO:             pickle5: Not installed
2024-03-16 16:48:52,221:INFO:         cloudpickle: 2.2.1
2024-03-16 16:48:52,221:INFO:         deprecation: 2.1.0
2024-03-16 16:48:52,221:INFO:              xxhash: 2.0.2
2024-03-16 16:48:52,221:INFO:           wurlitzer: Not installed
2024-03-16 16:48:52,221:INFO:PyCaret optional dependencies:
2024-03-16 16:48:52,221:INFO:                shap: Not installed
2024-03-16 16:48:52,221:INFO:           interpret: Not installed
2024-03-16 16:48:52,221:INFO:                umap: Not installed
2024-03-16 16:48:52,221:INFO:     ydata_profiling: Not installed
2024-03-16 16:48:52,221:INFO:  explainerdashboard: Not installed
2024-03-16 16:48:52,221:INFO:             autoviz: Not installed
2024-03-16 16:48:52,221:INFO:           fairlearn: Not installed
2024-03-16 16:48:52,221:INFO:          deepchecks: Not installed
2024-03-16 16:48:52,221:INFO:             xgboost: 2.0.3
2024-03-16 16:48:52,222:INFO:            catboost: Not installed
2024-03-16 16:48:52,222:INFO:              kmodes: Not installed
2024-03-16 16:48:52,222:INFO:             mlxtend: Not installed
2024-03-16 16:48:52,222:INFO:       statsforecast: Not installed
2024-03-16 16:48:52,222:INFO:        tune_sklearn: Not installed
2024-03-16 16:48:52,222:INFO:                 ray: Not installed
2024-03-16 16:48:52,222:INFO:            hyperopt: Not installed
2024-03-16 16:48:52,222:INFO:              optuna: Not installed
2024-03-16 16:48:52,222:INFO:               skopt: Not installed
2024-03-16 16:48:52,222:INFO:              mlflow: 2.11.1
2024-03-16 16:48:52,222:INFO:              gradio: Not installed
2024-03-16 16:48:52,222:INFO:             fastapi: Not installed
2024-03-16 16:48:52,222:INFO:             uvicorn: Not installed
2024-03-16 16:48:52,222:INFO:              m2cgen: Not installed
2024-03-16 16:48:52,222:INFO:           evidently: Not installed
2024-03-16 16:48:52,222:INFO:               fugue: Not installed
2024-03-16 16:48:52,222:INFO:           streamlit: Not installed
2024-03-16 16:48:52,222:INFO:             prophet: Not installed
2024-03-16 16:48:52,222:INFO:None
2024-03-16 16:48:52,222:INFO:Set up data.
2024-03-16 16:48:52,227:INFO:Set up folding strategy.
2024-03-16 16:48:52,227:INFO:Set up train/test split.
2024-03-16 16:48:52,231:INFO:Set up index.
2024-03-16 16:48:52,232:INFO:Assigning column types.
2024-03-16 16:48:52,237:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:48:52,237:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,241:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,245:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,345:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,349:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,353:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,418:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,465:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,468:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:48:52,473:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,540:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,585:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,592:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,596:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,657:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,707:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,709:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:48:52,719:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,825:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,826:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,838:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,941:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:52,941:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:52,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:52,944:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:48:53,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,059:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,128:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,174:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,176:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:48:53,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,293:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:48:53,406:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,409:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:48:53,527:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,645:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:53,649:INFO:Preparing preprocessing pipeline...
2024-03-16 16:48:53,649:INFO:Set up simple imputation.
2024-03-16 16:48:53,650:INFO:Set up column name cleaning.
2024-03-16 16:48:53,682:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:48:53,687:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:48:53,687:INFO:Creating final display dataframe.
2024-03-16 16:48:53,796:INFO:Setup _display_container:                     Description             Value
0                    Session id              8110
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 17)
4        Transformed data shape        (1859, 17)
5   Transformed train set shape        (1301, 17)
6    Transformed test set shape         (558, 17)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              0a11
2024-03-16 16:48:53,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:53,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:54,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:48:54,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:48:54,033:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:48:54,033:INFO:Logging experiment in loggers
2024-03-16 16:48:54,096:INFO:SubProcess save_model() called ==================================
2024-03-16 16:48:54,106:INFO:Initializing save_model()
2024-03-16 16:48:54,106:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpca4at5d0\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:48:54,107:INFO:Adding model into prep_pipe
2024-03-16 16:48:54,107:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:48:54,110:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpca4at5d0\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:48:54,116:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:48:54,116:INFO:save_model() successfully completed......................................
2024-03-16 16:48:54,247:INFO:SubProcess save_model() end ==================================
2024-03-16 16:48:54,257:INFO:setup() successfully completed in 1.82s...............
2024-03-16 16:48:54,257:INFO:Initializing compare_models()
2024-03-16 16:48:54,257:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:48:54,257:INFO:Checking exceptions
2024-03-16 16:48:54,260:INFO:Preparing display monitor
2024-03-16 16:48:54,287:INFO:Initializing Linear Regression
2024-03-16 16:48:54,288:INFO:Total runtime is 1.665353775024414e-05 minutes
2024-03-16 16:48:54,292:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:54,292:INFO:Initializing create_model()
2024-03-16 16:48:54,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:54,292:INFO:Checking exceptions
2024-03-16 16:48:54,292:INFO:Importing libraries
2024-03-16 16:48:54,292:INFO:Copying training dataset
2024-03-16 16:48:54,300:INFO:Defining folds
2024-03-16 16:48:54,300:INFO:Declaring metric variables
2024-03-16 16:48:54,304:INFO:Importing untrained model
2024-03-16 16:48:54,308:INFO:Linear Regression Imported successfully
2024-03-16 16:48:54,316:INFO:Starting cross validation
2024-03-16 16:48:54,317:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:54,422:INFO:Calculating mean and std
2024-03-16 16:48:54,423:INFO:Creating metrics dataframe
2024-03-16 16:48:54,425:INFO:Uploading results into container
2024-03-16 16:48:54,425:INFO:Uploading model into container now
2024-03-16 16:48:54,425:INFO:_master_model_container: 1
2024-03-16 16:48:54,426:INFO:_display_container: 2
2024-03-16 16:48:54,426:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:48:54,426:INFO:create_model() successfully completed......................................
2024-03-16 16:48:54,558:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:54,558:INFO:Creating metrics dataframe
2024-03-16 16:48:54,565:INFO:Initializing Lasso Regression
2024-03-16 16:48:54,565:INFO:Total runtime is 0.004626258214314778 minutes
2024-03-16 16:48:54,569:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:54,569:INFO:Initializing create_model()
2024-03-16 16:48:54,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:54,570:INFO:Checking exceptions
2024-03-16 16:48:54,570:INFO:Importing libraries
2024-03-16 16:48:54,570:INFO:Copying training dataset
2024-03-16 16:48:54,575:INFO:Defining folds
2024-03-16 16:48:54,575:INFO:Declaring metric variables
2024-03-16 16:48:54,578:INFO:Importing untrained model
2024-03-16 16:48:54,582:INFO:Lasso Regression Imported successfully
2024-03-16 16:48:54,589:INFO:Starting cross validation
2024-03-16 16:48:54,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:54,700:INFO:Calculating mean and std
2024-03-16 16:48:54,700:INFO:Creating metrics dataframe
2024-03-16 16:48:54,702:INFO:Uploading results into container
2024-03-16 16:48:54,702:INFO:Uploading model into container now
2024-03-16 16:48:54,702:INFO:_master_model_container: 2
2024-03-16 16:48:54,703:INFO:_display_container: 2
2024-03-16 16:48:54,703:INFO:Lasso(random_state=8110)
2024-03-16 16:48:54,703:INFO:create_model() successfully completed......................................
2024-03-16 16:48:54,859:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:54,859:INFO:Creating metrics dataframe
2024-03-16 16:48:54,869:INFO:Initializing Ridge Regression
2024-03-16 16:48:54,869:INFO:Total runtime is 0.009685254096984862 minutes
2024-03-16 16:48:54,873:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:54,873:INFO:Initializing create_model()
2024-03-16 16:48:54,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:54,873:INFO:Checking exceptions
2024-03-16 16:48:54,873:INFO:Importing libraries
2024-03-16 16:48:54,874:INFO:Copying training dataset
2024-03-16 16:48:54,880:INFO:Defining folds
2024-03-16 16:48:54,880:INFO:Declaring metric variables
2024-03-16 16:48:54,884:INFO:Importing untrained model
2024-03-16 16:48:54,888:INFO:Ridge Regression Imported successfully
2024-03-16 16:48:54,899:INFO:Starting cross validation
2024-03-16 16:48:54,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:54,937:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.8985e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,939:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.68231e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,944:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.40495e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,957:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.05453e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,967:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.01119e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,973:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.50782e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,977:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.96423e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,983:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.92375e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:54,986:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.86745e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:55,000:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.78e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:48:55,011:INFO:Calculating mean and std
2024-03-16 16:48:55,012:INFO:Creating metrics dataframe
2024-03-16 16:48:55,013:INFO:Uploading results into container
2024-03-16 16:48:55,014:INFO:Uploading model into container now
2024-03-16 16:48:55,015:INFO:_master_model_container: 3
2024-03-16 16:48:55,015:INFO:_display_container: 2
2024-03-16 16:48:55,015:INFO:Ridge(random_state=8110)
2024-03-16 16:48:55,015:INFO:create_model() successfully completed......................................
2024-03-16 16:48:55,142:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:55,142:INFO:Creating metrics dataframe
2024-03-16 16:48:55,151:INFO:Initializing Elastic Net
2024-03-16 16:48:55,151:INFO:Total runtime is 0.014385430018107095 minutes
2024-03-16 16:48:55,155:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:55,155:INFO:Initializing create_model()
2024-03-16 16:48:55,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:55,156:INFO:Checking exceptions
2024-03-16 16:48:55,156:INFO:Importing libraries
2024-03-16 16:48:55,156:INFO:Copying training dataset
2024-03-16 16:48:55,162:INFO:Defining folds
2024-03-16 16:48:55,163:INFO:Declaring metric variables
2024-03-16 16:48:55,166:INFO:Importing untrained model
2024-03-16 16:48:55,169:INFO:Elastic Net Imported successfully
2024-03-16 16:48:55,176:INFO:Starting cross validation
2024-03-16 16:48:55,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:55,279:INFO:Calculating mean and std
2024-03-16 16:48:55,280:INFO:Creating metrics dataframe
2024-03-16 16:48:55,282:INFO:Uploading results into container
2024-03-16 16:48:55,283:INFO:Uploading model into container now
2024-03-16 16:48:55,283:INFO:_master_model_container: 4
2024-03-16 16:48:55,284:INFO:_display_container: 2
2024-03-16 16:48:55,284:INFO:ElasticNet(random_state=8110)
2024-03-16 16:48:55,284:INFO:create_model() successfully completed......................................
2024-03-16 16:48:55,412:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:55,412:INFO:Creating metrics dataframe
2024-03-16 16:48:55,420:INFO:Initializing Least Angle Regression
2024-03-16 16:48:55,420:INFO:Total runtime is 0.018877927462259927 minutes
2024-03-16 16:48:55,423:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:55,424:INFO:Initializing create_model()
2024-03-16 16:48:55,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:55,424:INFO:Checking exceptions
2024-03-16 16:48:55,424:INFO:Importing libraries
2024-03-16 16:48:55,424:INFO:Copying training dataset
2024-03-16 16:48:55,431:INFO:Defining folds
2024-03-16 16:48:55,432:INFO:Declaring metric variables
2024-03-16 16:48:55,435:INFO:Importing untrained model
2024-03-16 16:48:55,440:INFO:Least Angle Regression Imported successfully
2024-03-16 16:48:55,457:INFO:Starting cross validation
2024-03-16 16:48:55,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:55,563:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=3.647e-05, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-03-16 16:48:55,589:INFO:Calculating mean and std
2024-03-16 16:48:55,590:INFO:Creating metrics dataframe
2024-03-16 16:48:55,592:INFO:Uploading results into container
2024-03-16 16:48:55,592:INFO:Uploading model into container now
2024-03-16 16:48:55,593:INFO:_master_model_container: 5
2024-03-16 16:48:55,593:INFO:_display_container: 2
2024-03-16 16:48:55,593:INFO:Lars(random_state=8110)
2024-03-16 16:48:55,593:INFO:create_model() successfully completed......................................
2024-03-16 16:48:55,724:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:55,725:INFO:Creating metrics dataframe
2024-03-16 16:48:55,733:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:48:55,733:INFO:Total runtime is 0.024087520440419515 minutes
2024-03-16 16:48:55,736:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:55,737:INFO:Initializing create_model()
2024-03-16 16:48:55,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:55,737:INFO:Checking exceptions
2024-03-16 16:48:55,737:INFO:Importing libraries
2024-03-16 16:48:55,737:INFO:Copying training dataset
2024-03-16 16:48:55,743:INFO:Defining folds
2024-03-16 16:48:55,743:INFO:Declaring metric variables
2024-03-16 16:48:55,748:INFO:Importing untrained model
2024-03-16 16:48:55,752:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:48:55,758:INFO:Starting cross validation
2024-03-16 16:48:55,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:55,865:INFO:Calculating mean and std
2024-03-16 16:48:55,867:INFO:Creating metrics dataframe
2024-03-16 16:48:55,869:INFO:Uploading results into container
2024-03-16 16:48:55,869:INFO:Uploading model into container now
2024-03-16 16:48:55,870:INFO:_master_model_container: 6
2024-03-16 16:48:55,870:INFO:_display_container: 2
2024-03-16 16:48:55,870:INFO:LassoLars(random_state=8110)
2024-03-16 16:48:55,870:INFO:create_model() successfully completed......................................
2024-03-16 16:48:56,003:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:56,003:INFO:Creating metrics dataframe
2024-03-16 16:48:56,011:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:48:56,011:INFO:Total runtime is 0.028730328877766928 minutes
2024-03-16 16:48:56,016:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:56,016:INFO:Initializing create_model()
2024-03-16 16:48:56,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:56,016:INFO:Checking exceptions
2024-03-16 16:48:56,016:INFO:Importing libraries
2024-03-16 16:48:56,016:INFO:Copying training dataset
2024-03-16 16:48:56,023:INFO:Defining folds
2024-03-16 16:48:56,024:INFO:Declaring metric variables
2024-03-16 16:48:56,028:INFO:Importing untrained model
2024-03-16 16:48:56,033:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:48:56,040:INFO:Starting cross validation
2024-03-16 16:48:56,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:56,157:INFO:Calculating mean and std
2024-03-16 16:48:56,158:INFO:Creating metrics dataframe
2024-03-16 16:48:56,160:INFO:Uploading results into container
2024-03-16 16:48:56,160:INFO:Uploading model into container now
2024-03-16 16:48:56,161:INFO:_master_model_container: 7
2024-03-16 16:48:56,161:INFO:_display_container: 2
2024-03-16 16:48:56,162:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:48:56,162:INFO:create_model() successfully completed......................................
2024-03-16 16:48:56,295:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:56,295:INFO:Creating metrics dataframe
2024-03-16 16:48:56,304:INFO:Initializing Bayesian Ridge
2024-03-16 16:48:56,304:INFO:Total runtime is 0.03360677162806193 minutes
2024-03-16 16:48:56,307:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:56,308:INFO:Initializing create_model()
2024-03-16 16:48:56,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:56,308:INFO:Checking exceptions
2024-03-16 16:48:56,308:INFO:Importing libraries
2024-03-16 16:48:56,308:INFO:Copying training dataset
2024-03-16 16:48:56,316:INFO:Defining folds
2024-03-16 16:48:56,317:INFO:Declaring metric variables
2024-03-16 16:48:56,320:INFO:Importing untrained model
2024-03-16 16:48:56,324:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:48:56,330:INFO:Starting cross validation
2024-03-16 16:48:56,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:56,431:INFO:Calculating mean and std
2024-03-16 16:48:56,432:INFO:Creating metrics dataframe
2024-03-16 16:48:56,434:INFO:Uploading results into container
2024-03-16 16:48:56,435:INFO:Uploading model into container now
2024-03-16 16:48:56,435:INFO:_master_model_container: 8
2024-03-16 16:48:56,435:INFO:_display_container: 2
2024-03-16 16:48:56,436:INFO:BayesianRidge()
2024-03-16 16:48:56,436:INFO:create_model() successfully completed......................................
2024-03-16 16:48:56,605:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:56,605:INFO:Creating metrics dataframe
2024-03-16 16:48:56,614:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:48:56,615:INFO:Total runtime is 0.03879960378011067 minutes
2024-03-16 16:48:56,618:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:56,619:INFO:Initializing create_model()
2024-03-16 16:48:56,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:56,619:INFO:Checking exceptions
2024-03-16 16:48:56,619:INFO:Importing libraries
2024-03-16 16:48:56,619:INFO:Copying training dataset
2024-03-16 16:48:56,626:INFO:Defining folds
2024-03-16 16:48:56,626:INFO:Declaring metric variables
2024-03-16 16:48:56,630:INFO:Importing untrained model
2024-03-16 16:48:56,635:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:48:56,644:INFO:Starting cross validation
2024-03-16 16:48:56,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:56,751:INFO:Calculating mean and std
2024-03-16 16:48:56,752:INFO:Creating metrics dataframe
2024-03-16 16:48:56,754:INFO:Uploading results into container
2024-03-16 16:48:56,755:INFO:Uploading model into container now
2024-03-16 16:48:56,755:INFO:_master_model_container: 9
2024-03-16 16:48:56,755:INFO:_display_container: 2
2024-03-16 16:48:56,756:INFO:PassiveAggressiveRegressor(random_state=8110)
2024-03-16 16:48:56,756:INFO:create_model() successfully completed......................................
2024-03-16 16:48:56,886:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:56,886:INFO:Creating metrics dataframe
2024-03-16 16:48:56,896:INFO:Initializing Huber Regressor
2024-03-16 16:48:56,897:INFO:Total runtime is 0.04349240859349568 minutes
2024-03-16 16:48:56,900:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:56,901:INFO:Initializing create_model()
2024-03-16 16:48:56,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:56,901:INFO:Checking exceptions
2024-03-16 16:48:56,901:INFO:Importing libraries
2024-03-16 16:48:56,901:INFO:Copying training dataset
2024-03-16 16:48:56,907:INFO:Defining folds
2024-03-16 16:48:56,907:INFO:Declaring metric variables
2024-03-16 16:48:56,912:INFO:Importing untrained model
2024-03-16 16:48:56,916:INFO:Huber Regressor Imported successfully
2024-03-16 16:48:56,923:INFO:Starting cross validation
2024-03-16 16:48:56,924:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:57,010:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,019:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,041:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,043:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,050:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,067:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,072:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,076:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,086:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,090:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:48:57,103:INFO:Calculating mean and std
2024-03-16 16:48:57,104:INFO:Creating metrics dataframe
2024-03-16 16:48:57,106:INFO:Uploading results into container
2024-03-16 16:48:57,106:INFO:Uploading model into container now
2024-03-16 16:48:57,107:INFO:_master_model_container: 10
2024-03-16 16:48:57,107:INFO:_display_container: 2
2024-03-16 16:48:57,107:INFO:HuberRegressor()
2024-03-16 16:48:57,107:INFO:create_model() successfully completed......................................
2024-03-16 16:48:57,241:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:57,241:INFO:Creating metrics dataframe
2024-03-16 16:48:57,251:INFO:Initializing K Neighbors Regressor
2024-03-16 16:48:57,252:INFO:Total runtime is 0.04941117366154988 minutes
2024-03-16 16:48:57,255:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:57,256:INFO:Initializing create_model()
2024-03-16 16:48:57,256:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:57,256:INFO:Checking exceptions
2024-03-16 16:48:57,256:INFO:Importing libraries
2024-03-16 16:48:57,256:INFO:Copying training dataset
2024-03-16 16:48:57,262:INFO:Defining folds
2024-03-16 16:48:57,262:INFO:Declaring metric variables
2024-03-16 16:48:57,266:INFO:Importing untrained model
2024-03-16 16:48:57,271:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:48:57,278:INFO:Starting cross validation
2024-03-16 16:48:57,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:57,592:INFO:Calculating mean and std
2024-03-16 16:48:57,594:INFO:Creating metrics dataframe
2024-03-16 16:48:57,596:INFO:Uploading results into container
2024-03-16 16:48:57,597:INFO:Uploading model into container now
2024-03-16 16:48:57,597:INFO:_master_model_container: 11
2024-03-16 16:48:57,598:INFO:_display_container: 2
2024-03-16 16:48:57,598:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:48:57,598:INFO:create_model() successfully completed......................................
2024-03-16 16:48:57,730:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:57,730:INFO:Creating metrics dataframe
2024-03-16 16:48:57,743:INFO:Initializing Decision Tree Regressor
2024-03-16 16:48:57,743:INFO:Total runtime is 0.05758817195892334 minutes
2024-03-16 16:48:57,746:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:57,747:INFO:Initializing create_model()
2024-03-16 16:48:57,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:57,747:INFO:Checking exceptions
2024-03-16 16:48:57,747:INFO:Importing libraries
2024-03-16 16:48:57,747:INFO:Copying training dataset
2024-03-16 16:48:57,754:INFO:Defining folds
2024-03-16 16:48:57,754:INFO:Declaring metric variables
2024-03-16 16:48:57,758:INFO:Importing untrained model
2024-03-16 16:48:57,762:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:48:57,778:INFO:Starting cross validation
2024-03-16 16:48:57,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:57,929:INFO:Calculating mean and std
2024-03-16 16:48:57,930:INFO:Creating metrics dataframe
2024-03-16 16:48:57,933:INFO:Uploading results into container
2024-03-16 16:48:57,933:INFO:Uploading model into container now
2024-03-16 16:48:57,933:INFO:_master_model_container: 12
2024-03-16 16:48:57,934:INFO:_display_container: 2
2024-03-16 16:48:57,934:INFO:DecisionTreeRegressor(random_state=8110)
2024-03-16 16:48:57,934:INFO:create_model() successfully completed......................................
2024-03-16 16:48:58,060:INFO:SubProcess create_model() end ==================================
2024-03-16 16:48:58,060:INFO:Creating metrics dataframe
2024-03-16 16:48:58,071:INFO:Initializing Random Forest Regressor
2024-03-16 16:48:58,071:INFO:Total runtime is 0.06306400299072265 minutes
2024-03-16 16:48:58,075:INFO:SubProcess create_model() called ==================================
2024-03-16 16:48:58,075:INFO:Initializing create_model()
2024-03-16 16:48:58,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:48:58,076:INFO:Checking exceptions
2024-03-16 16:48:58,076:INFO:Importing libraries
2024-03-16 16:48:58,076:INFO:Copying training dataset
2024-03-16 16:48:58,083:INFO:Defining folds
2024-03-16 16:48:58,083:INFO:Declaring metric variables
2024-03-16 16:48:58,086:INFO:Importing untrained model
2024-03-16 16:48:58,090:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:48:58,098:INFO:Starting cross validation
2024-03-16 16:48:58,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:48:59,989:INFO:Calculating mean and std
2024-03-16 16:48:59,990:INFO:Creating metrics dataframe
2024-03-16 16:48:59,994:INFO:Uploading results into container
2024-03-16 16:48:59,994:INFO:Uploading model into container now
2024-03-16 16:48:59,995:INFO:_master_model_container: 13
2024-03-16 16:48:59,995:INFO:_display_container: 2
2024-03-16 16:48:59,995:INFO:RandomForestRegressor(n_jobs=-1, random_state=8110)
2024-03-16 16:48:59,996:INFO:create_model() successfully completed......................................
2024-03-16 16:49:00,141:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:00,141:INFO:Creating metrics dataframe
2024-03-16 16:49:00,151:INFO:Initializing Extra Trees Regressor
2024-03-16 16:49:00,152:INFO:Total runtime is 0.09774845441182453 minutes
2024-03-16 16:49:00,155:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:00,156:INFO:Initializing create_model()
2024-03-16 16:49:00,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:00,156:INFO:Checking exceptions
2024-03-16 16:49:00,156:INFO:Importing libraries
2024-03-16 16:49:00,156:INFO:Copying training dataset
2024-03-16 16:49:00,162:INFO:Defining folds
2024-03-16 16:49:00,163:INFO:Declaring metric variables
2024-03-16 16:49:00,168:INFO:Importing untrained model
2024-03-16 16:49:00,172:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:49:00,181:INFO:Starting cross validation
2024-03-16 16:49:00,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:01,478:INFO:Calculating mean and std
2024-03-16 16:49:01,479:INFO:Creating metrics dataframe
2024-03-16 16:49:01,481:INFO:Uploading results into container
2024-03-16 16:49:01,482:INFO:Uploading model into container now
2024-03-16 16:49:01,483:INFO:_master_model_container: 14
2024-03-16 16:49:01,483:INFO:_display_container: 2
2024-03-16 16:49:01,483:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8110)
2024-03-16 16:49:01,483:INFO:create_model() successfully completed......................................
2024-03-16 16:49:01,622:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:01,622:INFO:Creating metrics dataframe
2024-03-16 16:49:01,633:INFO:Initializing AdaBoost Regressor
2024-03-16 16:49:01,633:INFO:Total runtime is 0.12242176135381061 minutes
2024-03-16 16:49:01,636:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:01,637:INFO:Initializing create_model()
2024-03-16 16:49:01,637:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:01,637:INFO:Checking exceptions
2024-03-16 16:49:01,637:INFO:Importing libraries
2024-03-16 16:49:01,637:INFO:Copying training dataset
2024-03-16 16:49:01,643:INFO:Defining folds
2024-03-16 16:49:01,643:INFO:Declaring metric variables
2024-03-16 16:49:01,648:INFO:Importing untrained model
2024-03-16 16:49:01,652:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:49:01,659:INFO:Starting cross validation
2024-03-16 16:49:01,660:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:02,012:INFO:Calculating mean and std
2024-03-16 16:49:02,013:INFO:Creating metrics dataframe
2024-03-16 16:49:02,015:INFO:Uploading results into container
2024-03-16 16:49:02,016:INFO:Uploading model into container now
2024-03-16 16:49:02,016:INFO:_master_model_container: 15
2024-03-16 16:49:02,017:INFO:_display_container: 2
2024-03-16 16:49:02,017:INFO:AdaBoostRegressor(random_state=8110)
2024-03-16 16:49:02,017:INFO:create_model() successfully completed......................................
2024-03-16 16:49:02,150:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:02,150:INFO:Creating metrics dataframe
2024-03-16 16:49:02,162:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:49:02,162:INFO:Total runtime is 0.13123557170232136 minutes
2024-03-16 16:49:02,166:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:02,167:INFO:Initializing create_model()
2024-03-16 16:49:02,167:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:02,167:INFO:Checking exceptions
2024-03-16 16:49:02,167:INFO:Importing libraries
2024-03-16 16:49:02,167:INFO:Copying training dataset
2024-03-16 16:49:02,174:INFO:Defining folds
2024-03-16 16:49:02,174:INFO:Declaring metric variables
2024-03-16 16:49:02,178:INFO:Importing untrained model
2024-03-16 16:49:02,183:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:49:02,190:INFO:Starting cross validation
2024-03-16 16:49:02,191:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:02,746:INFO:Calculating mean and std
2024-03-16 16:49:02,747:INFO:Creating metrics dataframe
2024-03-16 16:49:02,749:INFO:Uploading results into container
2024-03-16 16:49:02,749:INFO:Uploading model into container now
2024-03-16 16:49:02,750:INFO:_master_model_container: 16
2024-03-16 16:49:02,750:INFO:_display_container: 2
2024-03-16 16:49:02,751:INFO:GradientBoostingRegressor(random_state=8110)
2024-03-16 16:49:02,751:INFO:create_model() successfully completed......................................
2024-03-16 16:49:02,877:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:02,878:INFO:Creating metrics dataframe
2024-03-16 16:49:02,890:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:49:02,890:INFO:Total runtime is 0.14337801535924274 minutes
2024-03-16 16:49:02,894:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:02,894:INFO:Initializing create_model()
2024-03-16 16:49:02,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:02,895:INFO:Checking exceptions
2024-03-16 16:49:02,895:INFO:Importing libraries
2024-03-16 16:49:02,895:INFO:Copying training dataset
2024-03-16 16:49:02,902:INFO:Defining folds
2024-03-16 16:49:02,902:INFO:Declaring metric variables
2024-03-16 16:49:02,906:INFO:Importing untrained model
2024-03-16 16:49:02,909:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:49:02,917:INFO:Starting cross validation
2024-03-16 16:49:02,918:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:03,357:INFO:Calculating mean and std
2024-03-16 16:49:03,358:INFO:Creating metrics dataframe
2024-03-16 16:49:03,360:INFO:Uploading results into container
2024-03-16 16:49:03,360:INFO:Uploading model into container now
2024-03-16 16:49:03,361:INFO:_master_model_container: 17
2024-03-16 16:49:03,361:INFO:_display_container: 2
2024-03-16 16:49:03,362:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8110, ...)
2024-03-16 16:49:03,362:INFO:create_model() successfully completed......................................
2024-03-16 16:49:03,493:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:03,493:INFO:Creating metrics dataframe
2024-03-16 16:49:03,506:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:49:03,507:INFO:Total runtime is 0.15363948345184325 minutes
2024-03-16 16:49:03,510:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:03,511:INFO:Initializing create_model()
2024-03-16 16:49:03,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:03,511:INFO:Checking exceptions
2024-03-16 16:49:03,511:INFO:Importing libraries
2024-03-16 16:49:03,511:INFO:Copying training dataset
2024-03-16 16:49:03,519:INFO:Defining folds
2024-03-16 16:49:03,519:INFO:Declaring metric variables
2024-03-16 16:49:03,523:INFO:Importing untrained model
2024-03-16 16:49:03,527:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:49:03,536:INFO:Starting cross validation
2024-03-16 16:49:03,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:05,002:INFO:Calculating mean and std
2024-03-16 16:49:05,005:INFO:Creating metrics dataframe
2024-03-16 16:49:05,008:INFO:Uploading results into container
2024-03-16 16:49:05,009:INFO:Uploading model into container now
2024-03-16 16:49:05,010:INFO:_master_model_container: 18
2024-03-16 16:49:05,011:INFO:_display_container: 2
2024-03-16 16:49:05,012:INFO:LGBMRegressor(n_jobs=-1, random_state=8110)
2024-03-16 16:49:05,012:INFO:create_model() successfully completed......................................
2024-03-16 16:49:05,177:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:05,177:INFO:Creating metrics dataframe
2024-03-16 16:49:05,190:INFO:Initializing Dummy Regressor
2024-03-16 16:49:05,191:INFO:Total runtime is 0.18170266151428222 minutes
2024-03-16 16:49:05,193:INFO:SubProcess create_model() called ==================================
2024-03-16 16:49:05,194:INFO:Initializing create_model()
2024-03-16 16:49:05,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B83F4CC190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:05,194:INFO:Checking exceptions
2024-03-16 16:49:05,194:INFO:Importing libraries
2024-03-16 16:49:05,194:INFO:Copying training dataset
2024-03-16 16:49:05,201:INFO:Defining folds
2024-03-16 16:49:05,201:INFO:Declaring metric variables
2024-03-16 16:49:05,205:INFO:Importing untrained model
2024-03-16 16:49:05,208:INFO:Dummy Regressor Imported successfully
2024-03-16 16:49:05,216:INFO:Starting cross validation
2024-03-16 16:49:05,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:49:05,317:INFO:Calculating mean and std
2024-03-16 16:49:05,318:INFO:Creating metrics dataframe
2024-03-16 16:49:05,320:INFO:Uploading results into container
2024-03-16 16:49:05,320:INFO:Uploading model into container now
2024-03-16 16:49:05,321:INFO:_master_model_container: 19
2024-03-16 16:49:05,321:INFO:_display_container: 2
2024-03-16 16:49:05,321:INFO:DummyRegressor()
2024-03-16 16:49:05,322:INFO:create_model() successfully completed......................................
2024-03-16 16:49:05,458:INFO:SubProcess create_model() end ==================================
2024-03-16 16:49:05,458:INFO:Creating metrics dataframe
2024-03-16 16:49:05,471:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:49:05,480:INFO:Initializing create_model()
2024-03-16 16:49:05,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=Ridge(random_state=8110), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:49:05,480:INFO:Checking exceptions
2024-03-16 16:49:05,482:INFO:Importing libraries
2024-03-16 16:49:05,482:INFO:Copying training dataset
2024-03-16 16:49:05,488:INFO:Defining folds
2024-03-16 16:49:05,488:INFO:Declaring metric variables
2024-03-16 16:49:05,488:INFO:Importing untrained model
2024-03-16 16:49:05,488:INFO:Declaring custom model
2024-03-16 16:49:05,489:INFO:Ridge Regression Imported successfully
2024-03-16 16:49:05,489:INFO:Cross validation set to False
2024-03-16 16:49:05,489:INFO:Fitting Model
2024-03-16 16:49:05,501:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.37537e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:49:05,506:INFO:Ridge(random_state=8110)
2024-03-16 16:49:05,506:INFO:create_model() successfully completed......................................
2024-03-16 16:49:05,676:INFO:Creating Dashboard logs
2024-03-16 16:49:05,682:INFO:Model: Ridge Regression
2024-03-16 16:49:05,734:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 8110, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:49:05,808:INFO:Initializing predict_model()
2024-03-16 16:49:05,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B853E2D390>, estimator=Ridge(random_state=8110), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D43BE20>)
2024-03-16 16:49:05,808:INFO:Checking exceptions
2024-03-16 16:49:05,808:INFO:Preloading libraries
2024-03-16 16:49:05,879:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:49:06,246:INFO:Creating Dashboard logs
2024-03-16 16:49:06,253:INFO:Model: Linear Regression
2024-03-16 16:49:06,312:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:49:06,561:INFO:Creating Dashboard logs
2024-03-16 16:49:06,567:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:49:06,612:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 8110, 'verbose': False}
2024-03-16 16:49:06,927:INFO:Creating Dashboard logs
2024-03-16 16:49:06,932:INFO:Model: Lasso Regression
2024-03-16 16:49:06,970:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8110, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:49:07,214:INFO:Creating Dashboard logs
2024-03-16 16:49:07,218:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:49:07,259:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:49:07,485:INFO:Creating Dashboard logs
2024-03-16 16:49:07,489:INFO:Model: Elastic Net
2024-03-16 16:49:07,531:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8110, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:49:07,791:INFO:Creating Dashboard logs
2024-03-16 16:49:07,794:INFO:Model: Least Angle Regression
2024-03-16 16:49:07,837:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 8110, 'verbose': False}
2024-03-16 16:49:08,117:INFO:Creating Dashboard logs
2024-03-16 16:49:08,121:INFO:Model: Bayesian Ridge
2024-03-16 16:49:08,164:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:49:08,387:INFO:Creating Dashboard logs
2024-03-16 16:49:08,391:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:49:08,433:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 8110, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:49:08,668:INFO:Creating Dashboard logs
2024-03-16 16:49:08,672:INFO:Model: Huber Regressor
2024-03-16 16:49:08,715:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:49:08,942:INFO:Creating Dashboard logs
2024-03-16 16:49:08,947:INFO:Model: Extra Trees Regressor
2024-03-16 16:49:08,995:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8110, 'verbose': 0, 'warm_start': False}
2024-03-16 16:49:09,255:INFO:Creating Dashboard logs
2024-03-16 16:49:09,258:INFO:Model: Random Forest Regressor
2024-03-16 16:49:09,300:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8110, 'verbose': 0, 'warm_start': False}
2024-03-16 16:49:09,535:INFO:Creating Dashboard logs
2024-03-16 16:49:09,539:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:49:09,582:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 8110, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:49:09,901:INFO:Creating Dashboard logs
2024-03-16 16:49:09,914:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:49:09,973:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 8110, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:49:10,244:INFO:Creating Dashboard logs
2024-03-16 16:49:10,248:INFO:Model: K Neighbors Regressor
2024-03-16 16:49:10,287:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:49:10,516:INFO:Creating Dashboard logs
2024-03-16 16:49:10,520:INFO:Model: AdaBoost Regressor
2024-03-16 16:49:10,565:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 8110}
2024-03-16 16:49:10,812:INFO:Creating Dashboard logs
2024-03-16 16:49:10,817:INFO:Model: Decision Tree Regressor
2024-03-16 16:49:10,857:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 8110, 'splitter': 'best'}
2024-03-16 16:49:11,137:INFO:Creating Dashboard logs
2024-03-16 16:49:11,143:INFO:Model: Dummy Regressor
2024-03-16 16:49:11,203:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:49:11,437:INFO:Creating Dashboard logs
2024-03-16 16:49:11,441:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:49:11,485:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 8110, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:49:11,738:INFO:_master_model_container: 19
2024-03-16 16:49:11,738:INFO:_display_container: 2
2024-03-16 16:49:11,738:INFO:Ridge(random_state=8110)
2024-03-16 16:49:11,738:INFO:compare_models() successfully completed......................................
2024-03-16 16:55:02,273:INFO:PyCaret RegressionExperiment
2024-03-16 16:55:02,274:INFO:Logging name: reg-default-name
2024-03-16 16:55:02,274:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:55:02,274:INFO:version 3.3.0
2024-03-16 16:55:02,274:INFO:Initializing setup()
2024-03-16 16:55:02,274:INFO:self.USI: 7153
2024-03-16 16:55:02,274:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:55:02,274:INFO:Checking environment
2024-03-16 16:55:02,274:INFO:python_version: 3.11.5
2024-03-16 16:55:02,274:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:55:02,274:INFO:machine: AMD64
2024-03-16 16:55:02,274:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:55:02,274:INFO:Memory: svmem(total=34129678336, available=15116427264, percent=55.7, used=19013251072, free=15116427264)
2024-03-16 16:55:02,274:INFO:Physical Core: 6
2024-03-16 16:55:02,274:INFO:Logical Core: 12
2024-03-16 16:55:02,274:INFO:Checking libraries
2024-03-16 16:55:02,275:INFO:System:
2024-03-16 16:55:02,275:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:55:02,275:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:55:02,275:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:55:02,275:INFO:PyCaret required dependencies:
2024-03-16 16:55:02,275:INFO:                 pip: 24.0
2024-03-16 16:55:02,275:INFO:          setuptools: 68.0.0
2024-03-16 16:55:02,275:INFO:             pycaret: 3.3.0
2024-03-16 16:55:02,275:INFO:             IPython: 8.15.0
2024-03-16 16:55:02,275:INFO:          ipywidgets: 8.0.4
2024-03-16 16:55:02,275:INFO:                tqdm: 4.65.0
2024-03-16 16:55:02,275:INFO:               numpy: 1.24.3
2024-03-16 16:55:02,275:INFO:              pandas: 2.0.3
2024-03-16 16:55:02,275:INFO:              jinja2: 3.1.2
2024-03-16 16:55:02,275:INFO:               scipy: 1.11.1
2024-03-16 16:55:02,275:INFO:              joblib: 1.2.0
2024-03-16 16:55:02,275:INFO:             sklearn: 1.3.0
2024-03-16 16:55:02,275:INFO:                pyod: 1.1.3
2024-03-16 16:55:02,275:INFO:            imblearn: 0.10.1
2024-03-16 16:55:02,275:INFO:   category_encoders: 2.6.3
2024-03-16 16:55:02,275:INFO:            lightgbm: 4.3.0
2024-03-16 16:55:02,276:INFO:               numba: 0.57.1
2024-03-16 16:55:02,276:INFO:            requests: 2.31.0
2024-03-16 16:55:02,276:INFO:          matplotlib: 3.7.2
2024-03-16 16:55:02,276:INFO:          scikitplot: 0.3.7
2024-03-16 16:55:02,276:INFO:         yellowbrick: 1.5
2024-03-16 16:55:02,276:INFO:              plotly: 5.9.0
2024-03-16 16:55:02,276:INFO:    plotly-resampler: Not installed
2024-03-16 16:55:02,276:INFO:             kaleido: 0.2.1
2024-03-16 16:55:02,276:INFO:           schemdraw: 0.15
2024-03-16 16:55:02,276:INFO:         statsmodels: 0.14.0
2024-03-16 16:55:02,276:INFO:              sktime: 0.27.0
2024-03-16 16:55:02,276:INFO:               tbats: 1.1.3
2024-03-16 16:55:02,276:INFO:            pmdarima: 2.0.4
2024-03-16 16:55:02,276:INFO:              psutil: 5.9.0
2024-03-16 16:55:02,276:INFO:          markupsafe: 2.1.1
2024-03-16 16:55:02,276:INFO:             pickle5: Not installed
2024-03-16 16:55:02,276:INFO:         cloudpickle: 2.2.1
2024-03-16 16:55:02,276:INFO:         deprecation: 2.1.0
2024-03-16 16:55:02,276:INFO:              xxhash: 2.0.2
2024-03-16 16:55:02,276:INFO:           wurlitzer: Not installed
2024-03-16 16:55:02,276:INFO:PyCaret optional dependencies:
2024-03-16 16:55:02,277:INFO:                shap: Not installed
2024-03-16 16:55:02,277:INFO:           interpret: Not installed
2024-03-16 16:55:02,277:INFO:                umap: Not installed
2024-03-16 16:55:02,277:INFO:     ydata_profiling: Not installed
2024-03-16 16:55:02,277:INFO:  explainerdashboard: Not installed
2024-03-16 16:55:02,277:INFO:             autoviz: Not installed
2024-03-16 16:55:02,277:INFO:           fairlearn: Not installed
2024-03-16 16:55:02,277:INFO:          deepchecks: Not installed
2024-03-16 16:55:02,277:INFO:             xgboost: 2.0.3
2024-03-16 16:55:02,277:INFO:            catboost: Not installed
2024-03-16 16:55:02,277:INFO:              kmodes: Not installed
2024-03-16 16:55:02,277:INFO:             mlxtend: Not installed
2024-03-16 16:55:02,277:INFO:       statsforecast: Not installed
2024-03-16 16:55:02,277:INFO:        tune_sklearn: Not installed
2024-03-16 16:55:02,277:INFO:                 ray: Not installed
2024-03-16 16:55:02,277:INFO:            hyperopt: Not installed
2024-03-16 16:55:02,277:INFO:              optuna: Not installed
2024-03-16 16:55:02,277:INFO:               skopt: Not installed
2024-03-16 16:55:02,277:INFO:              mlflow: 2.11.1
2024-03-16 16:55:02,277:INFO:              gradio: Not installed
2024-03-16 16:55:02,277:INFO:             fastapi: Not installed
2024-03-16 16:55:02,277:INFO:             uvicorn: Not installed
2024-03-16 16:55:02,277:INFO:              m2cgen: Not installed
2024-03-16 16:55:02,278:INFO:           evidently: Not installed
2024-03-16 16:55:02,278:INFO:               fugue: Not installed
2024-03-16 16:55:02,278:INFO:           streamlit: Not installed
2024-03-16 16:55:02,278:INFO:             prophet: Not installed
2024-03-16 16:55:02,278:INFO:None
2024-03-16 16:55:02,278:INFO:Set up data.
2024-03-16 16:55:02,281:INFO:Set up folding strategy.
2024-03-16 16:55:02,282:INFO:Set up train/test split.
2024-03-16 16:55:02,286:INFO:Set up index.
2024-03-16 16:55:02,286:INFO:Assigning column types.
2024-03-16 16:55:02,290:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:55:02,291:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,295:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,299:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,404:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:02,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:02,406:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,411:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,415:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,528:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:02,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:02,531:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:55:02,535:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,540:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,641:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:02,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:02,648:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,653:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,761:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:02,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:02,764:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:55:02,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,877:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:02,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:02,889:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:02,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,010:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,010:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,013:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:55:03,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,142:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,254:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,257:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:55:03,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,369:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,437:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:03,478:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,481:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:55:03,589:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:03,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:03,708:INFO:Preparing preprocessing pipeline...
2024-03-16 16:55:03,708:INFO:Set up simple imputation.
2024-03-16 16:55:03,709:INFO:Set up column name cleaning.
2024-03-16 16:55:03,738:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:55:03,744:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:55:03,744:INFO:Creating final display dataframe.
2024-03-16 16:55:03,844:INFO:Setup _display_container:                     Description             Value
0                    Session id              3994
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 12)
4        Transformed data shape        (1859, 12)
5   Transformed train set shape        (1301, 12)
6    Transformed test set shape         (558, 12)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              7153
2024-03-16 16:55:04,017:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:04,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:04,129:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:04,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:04,132:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:55:04,132:INFO:Logging experiment in loggers
2024-03-16 16:55:04,194:INFO:SubProcess save_model() called ==================================
2024-03-16 16:55:04,208:INFO:Initializing save_model()
2024-03-16 16:55:04,208:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp3g8tlt8v\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:55:04,208:INFO:Adding model into prep_pipe
2024-03-16 16:55:04,208:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:55:04,210:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp3g8tlt8v\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:55:04,216:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:55:04,217:INFO:save_model() successfully completed......................................
2024-03-16 16:55:04,368:INFO:SubProcess save_model() end ==================================
2024-03-16 16:55:04,378:INFO:setup() successfully completed in 1.86s...............
2024-03-16 16:55:04,379:INFO:Initializing compare_models()
2024-03-16 16:55:04,379:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:55:04,379:INFO:Checking exceptions
2024-03-16 16:55:04,381:INFO:Preparing display monitor
2024-03-16 16:55:04,405:INFO:Initializing Linear Regression
2024-03-16 16:55:04,405:INFO:Total runtime is 0.0 minutes
2024-03-16 16:55:04,408:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:04,409:INFO:Initializing create_model()
2024-03-16 16:55:04,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:04,409:INFO:Checking exceptions
2024-03-16 16:55:04,409:INFO:Importing libraries
2024-03-16 16:55:04,409:INFO:Copying training dataset
2024-03-16 16:55:04,415:INFO:Defining folds
2024-03-16 16:55:04,415:INFO:Declaring metric variables
2024-03-16 16:55:04,419:INFO:Importing untrained model
2024-03-16 16:55:04,424:INFO:Linear Regression Imported successfully
2024-03-16 16:55:04,432:INFO:Starting cross validation
2024-03-16 16:55:04,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:05,079:INFO:Calculating mean and std
2024-03-16 16:55:05,080:INFO:Creating metrics dataframe
2024-03-16 16:55:05,083:INFO:Uploading results into container
2024-03-16 16:55:05,084:INFO:Uploading model into container now
2024-03-16 16:55:05,085:INFO:_master_model_container: 1
2024-03-16 16:55:05,085:INFO:_display_container: 2
2024-03-16 16:55:05,085:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:55:05,085:INFO:create_model() successfully completed......................................
2024-03-16 16:55:05,347:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:05,347:INFO:Creating metrics dataframe
2024-03-16 16:55:05,366:INFO:Initializing Lasso Regression
2024-03-16 16:55:05,366:INFO:Total runtime is 0.016012314955393472 minutes
2024-03-16 16:55:05,375:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:05,376:INFO:Initializing create_model()
2024-03-16 16:55:05,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:05,376:INFO:Checking exceptions
2024-03-16 16:55:05,377:INFO:Importing libraries
2024-03-16 16:55:05,377:INFO:Copying training dataset
2024-03-16 16:55:05,390:INFO:Defining folds
2024-03-16 16:55:05,391:INFO:Declaring metric variables
2024-03-16 16:55:05,408:INFO:Importing untrained model
2024-03-16 16:55:05,415:INFO:Lasso Regression Imported successfully
2024-03-16 16:55:05,433:INFO:Starting cross validation
2024-03-16 16:55:05,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:12,130:INFO:Calculating mean and std
2024-03-16 16:55:12,132:INFO:Creating metrics dataframe
2024-03-16 16:55:12,135:INFO:Uploading results into container
2024-03-16 16:55:12,136:INFO:Uploading model into container now
2024-03-16 16:55:12,137:INFO:_master_model_container: 2
2024-03-16 16:55:12,138:INFO:_display_container: 2
2024-03-16 16:55:12,138:INFO:Lasso(random_state=3994)
2024-03-16 16:55:12,138:INFO:create_model() successfully completed......................................
2024-03-16 16:55:12,301:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:12,301:INFO:Creating metrics dataframe
2024-03-16 16:55:12,309:INFO:Initializing Ridge Regression
2024-03-16 16:55:12,309:INFO:Total runtime is 0.13173229297002156 minutes
2024-03-16 16:55:12,312:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:12,313:INFO:Initializing create_model()
2024-03-16 16:55:12,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:12,313:INFO:Checking exceptions
2024-03-16 16:55:12,313:INFO:Importing libraries
2024-03-16 16:55:12,313:INFO:Copying training dataset
2024-03-16 16:55:12,319:INFO:Defining folds
2024-03-16 16:55:12,320:INFO:Declaring metric variables
2024-03-16 16:55:12,325:INFO:Importing untrained model
2024-03-16 16:55:12,329:INFO:Ridge Regression Imported successfully
2024-03-16 16:55:12,338:INFO:Starting cross validation
2024-03-16 16:55:12,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:12,392:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.59409e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,412:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.34439e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,423:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.87096e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.47e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,430:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.41928e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,436:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.07302e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:12,445:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.32303e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:16,466:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.78229e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:16,502:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.6154e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:16,553:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.5929e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:55:16,565:INFO:Calculating mean and std
2024-03-16 16:55:16,567:INFO:Creating metrics dataframe
2024-03-16 16:55:16,569:INFO:Uploading results into container
2024-03-16 16:55:16,570:INFO:Uploading model into container now
2024-03-16 16:55:16,570:INFO:_master_model_container: 3
2024-03-16 16:55:16,571:INFO:_display_container: 2
2024-03-16 16:55:16,571:INFO:Ridge(random_state=3994)
2024-03-16 16:55:16,571:INFO:create_model() successfully completed......................................
2024-03-16 16:55:16,754:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:16,754:INFO:Creating metrics dataframe
2024-03-16 16:55:16,761:INFO:Initializing Elastic Net
2024-03-16 16:55:16,761:INFO:Total runtime is 0.205933678150177 minutes
2024-03-16 16:55:16,766:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:16,766:INFO:Initializing create_model()
2024-03-16 16:55:16,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:16,766:INFO:Checking exceptions
2024-03-16 16:55:16,766:INFO:Importing libraries
2024-03-16 16:55:16,766:INFO:Copying training dataset
2024-03-16 16:55:16,772:INFO:Defining folds
2024-03-16 16:55:16,773:INFO:Declaring metric variables
2024-03-16 16:55:16,776:INFO:Importing untrained model
2024-03-16 16:55:16,782:INFO:Elastic Net Imported successfully
2024-03-16 16:55:16,792:INFO:Starting cross validation
2024-03-16 16:55:16,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:16,934:INFO:Calculating mean and std
2024-03-16 16:55:16,937:INFO:Creating metrics dataframe
2024-03-16 16:55:16,942:INFO:Uploading results into container
2024-03-16 16:55:16,943:INFO:Uploading model into container now
2024-03-16 16:55:16,944:INFO:_master_model_container: 4
2024-03-16 16:55:16,944:INFO:_display_container: 2
2024-03-16 16:55:16,945:INFO:ElasticNet(random_state=3994)
2024-03-16 16:55:16,945:INFO:create_model() successfully completed......................................
2024-03-16 16:55:17,097:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:17,098:INFO:Creating metrics dataframe
2024-03-16 16:55:17,106:INFO:Initializing Least Angle Regression
2024-03-16 16:55:17,106:INFO:Total runtime is 0.2116777737935384 minutes
2024-03-16 16:55:17,110:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:17,110:INFO:Initializing create_model()
2024-03-16 16:55:17,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:17,111:INFO:Checking exceptions
2024-03-16 16:55:17,111:INFO:Importing libraries
2024-03-16 16:55:17,111:INFO:Copying training dataset
2024-03-16 16:55:17,140:INFO:Defining folds
2024-03-16 16:55:17,147:INFO:Declaring metric variables
2024-03-16 16:55:17,155:INFO:Importing untrained model
2024-03-16 16:55:17,164:INFO:Least Angle Regression Imported successfully
2024-03-16 16:55:17,174:INFO:Starting cross validation
2024-03-16 16:55:17,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:17,295:INFO:Calculating mean and std
2024-03-16 16:55:17,296:INFO:Creating metrics dataframe
2024-03-16 16:55:17,299:INFO:Uploading results into container
2024-03-16 16:55:17,299:INFO:Uploading model into container now
2024-03-16 16:55:17,300:INFO:_master_model_container: 5
2024-03-16 16:55:17,300:INFO:_display_container: 2
2024-03-16 16:55:17,300:INFO:Lars(random_state=3994)
2024-03-16 16:55:17,300:INFO:create_model() successfully completed......................................
2024-03-16 16:55:17,434:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:17,435:INFO:Creating metrics dataframe
2024-03-16 16:55:17,443:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:55:17,443:INFO:Total runtime is 0.2172924995422363 minutes
2024-03-16 16:55:17,447:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:17,448:INFO:Initializing create_model()
2024-03-16 16:55:17,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:17,448:INFO:Checking exceptions
2024-03-16 16:55:17,448:INFO:Importing libraries
2024-03-16 16:55:17,448:INFO:Copying training dataset
2024-03-16 16:55:17,454:INFO:Defining folds
2024-03-16 16:55:17,454:INFO:Declaring metric variables
2024-03-16 16:55:17,458:INFO:Importing untrained model
2024-03-16 16:55:17,462:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:55:17,471:INFO:Starting cross validation
2024-03-16 16:55:17,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:17,567:INFO:Calculating mean and std
2024-03-16 16:55:17,569:INFO:Creating metrics dataframe
2024-03-16 16:55:17,571:INFO:Uploading results into container
2024-03-16 16:55:17,571:INFO:Uploading model into container now
2024-03-16 16:55:17,572:INFO:_master_model_container: 6
2024-03-16 16:55:17,572:INFO:_display_container: 2
2024-03-16 16:55:17,572:INFO:LassoLars(random_state=3994)
2024-03-16 16:55:17,573:INFO:create_model() successfully completed......................................
2024-03-16 16:55:17,711:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:17,711:INFO:Creating metrics dataframe
2024-03-16 16:55:17,720:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:55:17,720:INFO:Total runtime is 0.22191316286722818 minutes
2024-03-16 16:55:17,723:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:17,724:INFO:Initializing create_model()
2024-03-16 16:55:17,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:17,724:INFO:Checking exceptions
2024-03-16 16:55:17,724:INFO:Importing libraries
2024-03-16 16:55:17,724:INFO:Copying training dataset
2024-03-16 16:55:17,730:INFO:Defining folds
2024-03-16 16:55:17,730:INFO:Declaring metric variables
2024-03-16 16:55:17,736:INFO:Importing untrained model
2024-03-16 16:55:17,740:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:55:17,749:INFO:Starting cross validation
2024-03-16 16:55:17,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:17,867:INFO:Calculating mean and std
2024-03-16 16:55:17,868:INFO:Creating metrics dataframe
2024-03-16 16:55:17,871:INFO:Uploading results into container
2024-03-16 16:55:17,872:INFO:Uploading model into container now
2024-03-16 16:55:17,872:INFO:_master_model_container: 7
2024-03-16 16:55:17,872:INFO:_display_container: 2
2024-03-16 16:55:17,873:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:55:17,873:INFO:create_model() successfully completed......................................
2024-03-16 16:55:18,027:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:18,028:INFO:Creating metrics dataframe
2024-03-16 16:55:18,037:INFO:Initializing Bayesian Ridge
2024-03-16 16:55:18,037:INFO:Total runtime is 0.2271961172421773 minutes
2024-03-16 16:55:18,042:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:18,042:INFO:Initializing create_model()
2024-03-16 16:55:18,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:18,043:INFO:Checking exceptions
2024-03-16 16:55:18,043:INFO:Importing libraries
2024-03-16 16:55:18,043:INFO:Copying training dataset
2024-03-16 16:55:18,048:INFO:Defining folds
2024-03-16 16:55:18,048:INFO:Declaring metric variables
2024-03-16 16:55:18,052:INFO:Importing untrained model
2024-03-16 16:55:18,056:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:55:18,066:INFO:Starting cross validation
2024-03-16 16:55:18,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:18,179:INFO:Calculating mean and std
2024-03-16 16:55:18,180:INFO:Creating metrics dataframe
2024-03-16 16:55:18,182:INFO:Uploading results into container
2024-03-16 16:55:18,183:INFO:Uploading model into container now
2024-03-16 16:55:18,183:INFO:_master_model_container: 8
2024-03-16 16:55:18,183:INFO:_display_container: 2
2024-03-16 16:55:18,184:INFO:BayesianRidge()
2024-03-16 16:55:18,184:INFO:create_model() successfully completed......................................
2024-03-16 16:55:18,312:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:18,312:INFO:Creating metrics dataframe
2024-03-16 16:55:18,324:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:55:18,324:INFO:Total runtime is 0.23197197914123532 minutes
2024-03-16 16:55:18,327:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:18,328:INFO:Initializing create_model()
2024-03-16 16:55:18,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:18,328:INFO:Checking exceptions
2024-03-16 16:55:18,328:INFO:Importing libraries
2024-03-16 16:55:18,328:INFO:Copying training dataset
2024-03-16 16:55:18,333:INFO:Defining folds
2024-03-16 16:55:18,333:INFO:Declaring metric variables
2024-03-16 16:55:18,338:INFO:Importing untrained model
2024-03-16 16:55:18,342:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:55:18,348:INFO:Starting cross validation
2024-03-16 16:55:18,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:18,440:INFO:Calculating mean and std
2024-03-16 16:55:18,442:INFO:Creating metrics dataframe
2024-03-16 16:55:18,444:INFO:Uploading results into container
2024-03-16 16:55:18,444:INFO:Uploading model into container now
2024-03-16 16:55:18,445:INFO:_master_model_container: 9
2024-03-16 16:55:18,445:INFO:_display_container: 2
2024-03-16 16:55:18,445:INFO:PassiveAggressiveRegressor(random_state=3994)
2024-03-16 16:55:18,445:INFO:create_model() successfully completed......................................
2024-03-16 16:55:18,586:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:18,586:INFO:Creating metrics dataframe
2024-03-16 16:55:18,596:INFO:Initializing Huber Regressor
2024-03-16 16:55:18,596:INFO:Total runtime is 0.2365146994590759 minutes
2024-03-16 16:55:18,599:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:18,600:INFO:Initializing create_model()
2024-03-16 16:55:18,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:18,600:INFO:Checking exceptions
2024-03-16 16:55:18,600:INFO:Importing libraries
2024-03-16 16:55:18,600:INFO:Copying training dataset
2024-03-16 16:55:18,605:INFO:Defining folds
2024-03-16 16:55:18,606:INFO:Declaring metric variables
2024-03-16 16:55:18,610:INFO:Importing untrained model
2024-03-16 16:55:18,615:INFO:Huber Regressor Imported successfully
2024-03-16 16:55:18,622:INFO:Starting cross validation
2024-03-16 16:55:18,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:18,722:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,749:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,764:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,765:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,775:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,780:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,791:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,799:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,801:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:55:18,814:INFO:Calculating mean and std
2024-03-16 16:55:18,815:INFO:Creating metrics dataframe
2024-03-16 16:55:18,817:INFO:Uploading results into container
2024-03-16 16:55:18,818:INFO:Uploading model into container now
2024-03-16 16:55:18,819:INFO:_master_model_container: 10
2024-03-16 16:55:18,819:INFO:_display_container: 2
2024-03-16 16:55:18,819:INFO:HuberRegressor()
2024-03-16 16:55:18,819:INFO:create_model() successfully completed......................................
2024-03-16 16:55:18,985:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:18,985:INFO:Creating metrics dataframe
2024-03-16 16:55:18,999:INFO:Initializing K Neighbors Regressor
2024-03-16 16:55:18,999:INFO:Total runtime is 0.24322745800018308 minutes
2024-03-16 16:55:19,004:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:19,005:INFO:Initializing create_model()
2024-03-16 16:55:19,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:19,005:INFO:Checking exceptions
2024-03-16 16:55:19,005:INFO:Importing libraries
2024-03-16 16:55:19,005:INFO:Copying training dataset
2024-03-16 16:55:19,013:INFO:Defining folds
2024-03-16 16:55:19,013:INFO:Declaring metric variables
2024-03-16 16:55:19,018:INFO:Importing untrained model
2024-03-16 16:55:19,024:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:55:19,033:INFO:Starting cross validation
2024-03-16 16:55:19,034:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:19,172:INFO:Calculating mean and std
2024-03-16 16:55:19,173:INFO:Creating metrics dataframe
2024-03-16 16:55:19,175:INFO:Uploading results into container
2024-03-16 16:55:19,176:INFO:Uploading model into container now
2024-03-16 16:55:19,177:INFO:_master_model_container: 11
2024-03-16 16:55:19,177:INFO:_display_container: 2
2024-03-16 16:55:19,178:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:55:19,178:INFO:create_model() successfully completed......................................
2024-03-16 16:55:19,319:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:19,319:INFO:Creating metrics dataframe
2024-03-16 16:55:19,331:INFO:Initializing Decision Tree Regressor
2024-03-16 16:55:19,331:INFO:Total runtime is 0.24876245260238644 minutes
2024-03-16 16:55:19,336:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:19,336:INFO:Initializing create_model()
2024-03-16 16:55:19,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:19,337:INFO:Checking exceptions
2024-03-16 16:55:19,337:INFO:Importing libraries
2024-03-16 16:55:19,337:INFO:Copying training dataset
2024-03-16 16:55:19,344:INFO:Defining folds
2024-03-16 16:55:19,344:INFO:Declaring metric variables
2024-03-16 16:55:19,352:INFO:Importing untrained model
2024-03-16 16:55:19,359:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:55:19,369:INFO:Starting cross validation
2024-03-16 16:55:19,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:19,512:INFO:Calculating mean and std
2024-03-16 16:55:19,514:INFO:Creating metrics dataframe
2024-03-16 16:55:19,518:INFO:Uploading results into container
2024-03-16 16:55:19,519:INFO:Uploading model into container now
2024-03-16 16:55:19,519:INFO:_master_model_container: 12
2024-03-16 16:55:19,520:INFO:_display_container: 2
2024-03-16 16:55:19,520:INFO:DecisionTreeRegressor(random_state=3994)
2024-03-16 16:55:19,520:INFO:create_model() successfully completed......................................
2024-03-16 16:55:19,656:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:19,656:INFO:Creating metrics dataframe
2024-03-16 16:55:19,667:INFO:Initializing Random Forest Regressor
2024-03-16 16:55:19,667:INFO:Total runtime is 0.2543533086776733 minutes
2024-03-16 16:55:19,671:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:19,671:INFO:Initializing create_model()
2024-03-16 16:55:19,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:19,671:INFO:Checking exceptions
2024-03-16 16:55:19,671:INFO:Importing libraries
2024-03-16 16:55:19,671:INFO:Copying training dataset
2024-03-16 16:55:19,678:INFO:Defining folds
2024-03-16 16:55:19,678:INFO:Declaring metric variables
2024-03-16 16:55:19,682:INFO:Importing untrained model
2024-03-16 16:55:19,686:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:55:19,694:INFO:Starting cross validation
2024-03-16 16:55:19,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:20,927:INFO:Calculating mean and std
2024-03-16 16:55:20,928:INFO:Creating metrics dataframe
2024-03-16 16:55:20,930:INFO:Uploading results into container
2024-03-16 16:55:20,930:INFO:Uploading model into container now
2024-03-16 16:55:20,931:INFO:_master_model_container: 13
2024-03-16 16:55:20,931:INFO:_display_container: 2
2024-03-16 16:55:20,931:INFO:RandomForestRegressor(n_jobs=-1, random_state=3994)
2024-03-16 16:55:20,931:INFO:create_model() successfully completed......................................
2024-03-16 16:55:21,071:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:21,071:INFO:Creating metrics dataframe
2024-03-16 16:55:21,082:INFO:Initializing Extra Trees Regressor
2024-03-16 16:55:21,082:INFO:Total runtime is 0.2779379407564799 minutes
2024-03-16 16:55:21,086:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:21,087:INFO:Initializing create_model()
2024-03-16 16:55:21,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:21,087:INFO:Checking exceptions
2024-03-16 16:55:21,087:INFO:Importing libraries
2024-03-16 16:55:21,087:INFO:Copying training dataset
2024-03-16 16:55:21,093:INFO:Defining folds
2024-03-16 16:55:21,093:INFO:Declaring metric variables
2024-03-16 16:55:21,097:INFO:Importing untrained model
2024-03-16 16:55:21,101:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:55:21,108:INFO:Starting cross validation
2024-03-16 16:55:21,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:22,072:INFO:Calculating mean and std
2024-03-16 16:55:22,073:INFO:Creating metrics dataframe
2024-03-16 16:55:22,077:INFO:Uploading results into container
2024-03-16 16:55:22,077:INFO:Uploading model into container now
2024-03-16 16:55:22,078:INFO:_master_model_container: 14
2024-03-16 16:55:22,078:INFO:_display_container: 2
2024-03-16 16:55:22,078:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3994)
2024-03-16 16:55:22,079:INFO:create_model() successfully completed......................................
2024-03-16 16:55:22,297:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:22,297:INFO:Creating metrics dataframe
2024-03-16 16:55:22,308:INFO:Initializing AdaBoost Regressor
2024-03-16 16:55:22,308:INFO:Total runtime is 0.29838072061538695 minutes
2024-03-16 16:55:22,312:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:22,312:INFO:Initializing create_model()
2024-03-16 16:55:22,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:22,313:INFO:Checking exceptions
2024-03-16 16:55:22,313:INFO:Importing libraries
2024-03-16 16:55:22,313:INFO:Copying training dataset
2024-03-16 16:55:22,319:INFO:Defining folds
2024-03-16 16:55:22,319:INFO:Declaring metric variables
2024-03-16 16:55:22,324:INFO:Importing untrained model
2024-03-16 16:55:22,328:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:55:22,336:INFO:Starting cross validation
2024-03-16 16:55:22,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:22,620:INFO:Calculating mean and std
2024-03-16 16:55:22,621:INFO:Creating metrics dataframe
2024-03-16 16:55:22,623:INFO:Uploading results into container
2024-03-16 16:55:22,624:INFO:Uploading model into container now
2024-03-16 16:55:22,624:INFO:_master_model_container: 15
2024-03-16 16:55:22,625:INFO:_display_container: 2
2024-03-16 16:55:22,625:INFO:AdaBoostRegressor(random_state=3994)
2024-03-16 16:55:22,625:INFO:create_model() successfully completed......................................
2024-03-16 16:55:22,753:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:22,753:INFO:Creating metrics dataframe
2024-03-16 16:55:22,765:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:55:22,765:INFO:Total runtime is 0.30599934260050454 minutes
2024-03-16 16:55:22,769:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:22,769:INFO:Initializing create_model()
2024-03-16 16:55:22,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:22,769:INFO:Checking exceptions
2024-03-16 16:55:22,769:INFO:Importing libraries
2024-03-16 16:55:22,770:INFO:Copying training dataset
2024-03-16 16:55:22,777:INFO:Defining folds
2024-03-16 16:55:22,777:INFO:Declaring metric variables
2024-03-16 16:55:22,782:INFO:Importing untrained model
2024-03-16 16:55:22,788:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:55:22,796:INFO:Starting cross validation
2024-03-16 16:55:22,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:23,186:INFO:Calculating mean and std
2024-03-16 16:55:23,187:INFO:Creating metrics dataframe
2024-03-16 16:55:23,188:INFO:Uploading results into container
2024-03-16 16:55:23,189:INFO:Uploading model into container now
2024-03-16 16:55:23,189:INFO:_master_model_container: 16
2024-03-16 16:55:23,189:INFO:_display_container: 2
2024-03-16 16:55:23,190:INFO:GradientBoostingRegressor(random_state=3994)
2024-03-16 16:55:23,190:INFO:create_model() successfully completed......................................
2024-03-16 16:55:23,319:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:23,319:INFO:Creating metrics dataframe
2024-03-16 16:55:23,331:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:55:23,331:INFO:Total runtime is 0.3154226779937744 minutes
2024-03-16 16:55:23,335:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:23,336:INFO:Initializing create_model()
2024-03-16 16:55:23,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:23,336:INFO:Checking exceptions
2024-03-16 16:55:23,336:INFO:Importing libraries
2024-03-16 16:55:23,336:INFO:Copying training dataset
2024-03-16 16:55:23,342:INFO:Defining folds
2024-03-16 16:55:23,343:INFO:Declaring metric variables
2024-03-16 16:55:23,346:INFO:Importing untrained model
2024-03-16 16:55:23,351:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:55:23,359:INFO:Starting cross validation
2024-03-16 16:55:23,360:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:23,739:INFO:Calculating mean and std
2024-03-16 16:55:23,740:INFO:Creating metrics dataframe
2024-03-16 16:55:23,742:INFO:Uploading results into container
2024-03-16 16:55:23,743:INFO:Uploading model into container now
2024-03-16 16:55:23,743:INFO:_master_model_container: 17
2024-03-16 16:55:23,743:INFO:_display_container: 2
2024-03-16 16:55:23,744:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3994, ...)
2024-03-16 16:55:23,744:INFO:create_model() successfully completed......................................
2024-03-16 16:55:23,873:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:23,873:INFO:Creating metrics dataframe
2024-03-16 16:55:23,885:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:55:23,886:INFO:Total runtime is 0.3246834595998128 minutes
2024-03-16 16:55:23,889:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:23,890:INFO:Initializing create_model()
2024-03-16 16:55:23,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:23,890:INFO:Checking exceptions
2024-03-16 16:55:23,890:INFO:Importing libraries
2024-03-16 16:55:23,890:INFO:Copying training dataset
2024-03-16 16:55:23,895:INFO:Defining folds
2024-03-16 16:55:23,895:INFO:Declaring metric variables
2024-03-16 16:55:23,900:INFO:Importing untrained model
2024-03-16 16:55:23,904:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:55:23,911:INFO:Starting cross validation
2024-03-16 16:55:23,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:25,353:INFO:Calculating mean and std
2024-03-16 16:55:25,356:INFO:Creating metrics dataframe
2024-03-16 16:55:25,359:INFO:Uploading results into container
2024-03-16 16:55:25,360:INFO:Uploading model into container now
2024-03-16 16:55:25,361:INFO:_master_model_container: 18
2024-03-16 16:55:25,361:INFO:_display_container: 2
2024-03-16 16:55:25,362:INFO:LGBMRegressor(n_jobs=-1, random_state=3994)
2024-03-16 16:55:25,362:INFO:create_model() successfully completed......................................
2024-03-16 16:55:25,540:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:25,540:INFO:Creating metrics dataframe
2024-03-16 16:55:25,553:INFO:Initializing Dummy Regressor
2024-03-16 16:55:25,553:INFO:Total runtime is 0.352453072865804 minutes
2024-03-16 16:55:25,556:INFO:SubProcess create_model() called ==================================
2024-03-16 16:55:25,557:INFO:Initializing create_model()
2024-03-16 16:55:25,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B853A9FF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:25,557:INFO:Checking exceptions
2024-03-16 16:55:25,557:INFO:Importing libraries
2024-03-16 16:55:25,557:INFO:Copying training dataset
2024-03-16 16:55:25,562:INFO:Defining folds
2024-03-16 16:55:25,562:INFO:Declaring metric variables
2024-03-16 16:55:25,566:INFO:Importing untrained model
2024-03-16 16:55:25,571:INFO:Dummy Regressor Imported successfully
2024-03-16 16:55:25,578:INFO:Starting cross validation
2024-03-16 16:55:25,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:55:25,714:INFO:Calculating mean and std
2024-03-16 16:55:25,716:INFO:Creating metrics dataframe
2024-03-16 16:55:25,717:INFO:Uploading results into container
2024-03-16 16:55:25,718:INFO:Uploading model into container now
2024-03-16 16:55:25,719:INFO:_master_model_container: 19
2024-03-16 16:55:25,719:INFO:_display_container: 2
2024-03-16 16:55:25,719:INFO:DummyRegressor()
2024-03-16 16:55:25,719:INFO:create_model() successfully completed......................................
2024-03-16 16:55:25,848:INFO:SubProcess create_model() end ==================================
2024-03-16 16:55:25,848:INFO:Creating metrics dataframe
2024-03-16 16:55:25,866:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:55:25,876:INFO:Initializing create_model()
2024-03-16 16:55:25,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:55:25,876:INFO:Checking exceptions
2024-03-16 16:55:25,878:INFO:Importing libraries
2024-03-16 16:55:25,878:INFO:Copying training dataset
2024-03-16 16:55:25,883:INFO:Defining folds
2024-03-16 16:55:25,883:INFO:Declaring metric variables
2024-03-16 16:55:25,883:INFO:Importing untrained model
2024-03-16 16:55:25,883:INFO:Declaring custom model
2024-03-16 16:55:25,883:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:55:25,885:INFO:Cross validation set to False
2024-03-16 16:55:25,885:INFO:Fitting Model
2024-03-16 16:55:25,900:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:55:25,900:INFO:create_model() successfully completed......................................
2024-03-16 16:55:26,068:INFO:Creating Dashboard logs
2024-03-16 16:55:26,073:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:55:26,127:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:55:26,190:INFO:Initializing predict_model()
2024-03-16 16:55:26,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A605690>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D248D60>)
2024-03-16 16:55:26,190:INFO:Checking exceptions
2024-03-16 16:55:26,190:INFO:Preloading libraries
2024-03-16 16:55:26,250:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:55:26,550:INFO:Creating Dashboard logs
2024-03-16 16:55:26,554:INFO:Model: Bayesian Ridge
2024-03-16 16:55:26,597:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:55:26,828:INFO:Creating Dashboard logs
2024-03-16 16:55:26,832:INFO:Model: Elastic Net
2024-03-16 16:55:26,872:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3994, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:55:27,093:INFO:Creating Dashboard logs
2024-03-16 16:55:27,097:INFO:Model: Lasso Regression
2024-03-16 16:55:27,141:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3994, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:55:27,363:INFO:Creating Dashboard logs
2024-03-16 16:55:27,367:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:55:27,409:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3994, 'verbose': False}
2024-03-16 16:55:27,644:INFO:Creating Dashboard logs
2024-03-16 16:55:27,648:INFO:Model: Ridge Regression
2024-03-16 16:55:27,685:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3994, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:55:27,934:INFO:Creating Dashboard logs
2024-03-16 16:55:27,938:INFO:Model: Linear Regression
2024-03-16 16:55:27,983:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:55:28,217:INFO:Creating Dashboard logs
2024-03-16 16:55:28,221:INFO:Model: Least Angle Regression
2024-03-16 16:55:28,264:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3994, 'verbose': False}
2024-03-16 16:55:28,500:INFO:Creating Dashboard logs
2024-03-16 16:55:28,504:INFO:Model: Huber Regressor
2024-03-16 16:55:28,548:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:55:28,777:INFO:Creating Dashboard logs
2024-03-16 16:55:28,783:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:55:28,818:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3994, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:55:29,067:INFO:Creating Dashboard logs
2024-03-16 16:55:29,071:INFO:Model: Random Forest Regressor
2024-03-16 16:55:29,114:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3994, 'verbose': 0, 'warm_start': False}
2024-03-16 16:55:29,360:INFO:Creating Dashboard logs
2024-03-16 16:55:29,363:INFO:Model: Extra Trees Regressor
2024-03-16 16:55:29,403:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3994, 'verbose': 0, 'warm_start': False}
2024-03-16 16:55:29,656:INFO:Creating Dashboard logs
2024-03-16 16:55:29,660:INFO:Model: K Neighbors Regressor
2024-03-16 16:55:29,697:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:55:29,927:INFO:Creating Dashboard logs
2024-03-16 16:55:29,931:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:55:29,975:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3994, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:55:30,219:INFO:Creating Dashboard logs
2024-03-16 16:55:30,223:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:55:30,267:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3994, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:55:30,530:INFO:Creating Dashboard logs
2024-03-16 16:55:30,533:INFO:Model: Decision Tree Regressor
2024-03-16 16:55:30,575:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3994, 'splitter': 'best'}
2024-03-16 16:55:30,823:INFO:Creating Dashboard logs
2024-03-16 16:55:30,828:INFO:Model: AdaBoost Regressor
2024-03-16 16:55:30,873:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3994}
2024-03-16 16:55:31,101:INFO:Creating Dashboard logs
2024-03-16 16:55:31,105:INFO:Model: Dummy Regressor
2024-03-16 16:55:31,147:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:55:31,366:INFO:Creating Dashboard logs
2024-03-16 16:55:31,370:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:55:31,414:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3994, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:55:31,659:INFO:_master_model_container: 19
2024-03-16 16:55:31,659:INFO:_display_container: 2
2024-03-16 16:55:31,660:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:55:31,660:INFO:compare_models() successfully completed......................................
2024-03-16 16:55:58,542:INFO:PyCaret RegressionExperiment
2024-03-16 16:55:58,542:INFO:Logging name: reg-default-name
2024-03-16 16:55:58,542:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 16:55:58,542:INFO:version 3.3.0
2024-03-16 16:55:58,542:INFO:Initializing setup()
2024-03-16 16:55:58,542:INFO:self.USI: ce52
2024-03-16 16:55:58,542:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 16:55:58,542:INFO:Checking environment
2024-03-16 16:55:58,542:INFO:python_version: 3.11.5
2024-03-16 16:55:58,542:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 16:55:58,543:INFO:machine: AMD64
2024-03-16 16:55:58,543:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 16:55:58,543:INFO:Memory: svmem(total=34129678336, available=13460606976, percent=60.6, used=20669071360, free=13460606976)
2024-03-16 16:55:58,543:INFO:Physical Core: 6
2024-03-16 16:55:58,543:INFO:Logical Core: 12
2024-03-16 16:55:58,543:INFO:Checking libraries
2024-03-16 16:55:58,543:INFO:System:
2024-03-16 16:55:58,543:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 16:55:58,543:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 16:55:58,543:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 16:55:58,543:INFO:PyCaret required dependencies:
2024-03-16 16:55:58,543:INFO:                 pip: 24.0
2024-03-16 16:55:58,543:INFO:          setuptools: 68.0.0
2024-03-16 16:55:58,543:INFO:             pycaret: 3.3.0
2024-03-16 16:55:58,543:INFO:             IPython: 8.15.0
2024-03-16 16:55:58,543:INFO:          ipywidgets: 8.0.4
2024-03-16 16:55:58,543:INFO:                tqdm: 4.65.0
2024-03-16 16:55:58,544:INFO:               numpy: 1.24.3
2024-03-16 16:55:58,544:INFO:              pandas: 2.0.3
2024-03-16 16:55:58,544:INFO:              jinja2: 3.1.2
2024-03-16 16:55:58,544:INFO:               scipy: 1.11.1
2024-03-16 16:55:58,544:INFO:              joblib: 1.2.0
2024-03-16 16:55:58,544:INFO:             sklearn: 1.3.0
2024-03-16 16:55:58,544:INFO:                pyod: 1.1.3
2024-03-16 16:55:58,544:INFO:            imblearn: 0.10.1
2024-03-16 16:55:58,544:INFO:   category_encoders: 2.6.3
2024-03-16 16:55:58,544:INFO:            lightgbm: 4.3.0
2024-03-16 16:55:58,544:INFO:               numba: 0.57.1
2024-03-16 16:55:58,544:INFO:            requests: 2.31.0
2024-03-16 16:55:58,544:INFO:          matplotlib: 3.7.2
2024-03-16 16:55:58,544:INFO:          scikitplot: 0.3.7
2024-03-16 16:55:58,544:INFO:         yellowbrick: 1.5
2024-03-16 16:55:58,544:INFO:              plotly: 5.9.0
2024-03-16 16:55:58,544:INFO:    plotly-resampler: Not installed
2024-03-16 16:55:58,544:INFO:             kaleido: 0.2.1
2024-03-16 16:55:58,544:INFO:           schemdraw: 0.15
2024-03-16 16:55:58,544:INFO:         statsmodels: 0.14.0
2024-03-16 16:55:58,544:INFO:              sktime: 0.27.0
2024-03-16 16:55:58,545:INFO:               tbats: 1.1.3
2024-03-16 16:55:58,545:INFO:            pmdarima: 2.0.4
2024-03-16 16:55:58,545:INFO:              psutil: 5.9.0
2024-03-16 16:55:58,545:INFO:          markupsafe: 2.1.1
2024-03-16 16:55:58,545:INFO:             pickle5: Not installed
2024-03-16 16:55:58,545:INFO:         cloudpickle: 2.2.1
2024-03-16 16:55:58,545:INFO:         deprecation: 2.1.0
2024-03-16 16:55:58,545:INFO:              xxhash: 2.0.2
2024-03-16 16:55:58,545:INFO:           wurlitzer: Not installed
2024-03-16 16:55:58,545:INFO:PyCaret optional dependencies:
2024-03-16 16:55:58,545:INFO:                shap: Not installed
2024-03-16 16:55:58,545:INFO:           interpret: Not installed
2024-03-16 16:55:58,545:INFO:                umap: Not installed
2024-03-16 16:55:58,545:INFO:     ydata_profiling: Not installed
2024-03-16 16:55:58,545:INFO:  explainerdashboard: Not installed
2024-03-16 16:55:58,545:INFO:             autoviz: Not installed
2024-03-16 16:55:58,545:INFO:           fairlearn: Not installed
2024-03-16 16:55:58,545:INFO:          deepchecks: Not installed
2024-03-16 16:55:58,546:INFO:             xgboost: 2.0.3
2024-03-16 16:55:58,546:INFO:            catboost: Not installed
2024-03-16 16:55:58,546:INFO:              kmodes: Not installed
2024-03-16 16:55:58,546:INFO:             mlxtend: Not installed
2024-03-16 16:55:58,546:INFO:       statsforecast: Not installed
2024-03-16 16:55:58,546:INFO:        tune_sklearn: Not installed
2024-03-16 16:55:58,546:INFO:                 ray: Not installed
2024-03-16 16:55:58,546:INFO:            hyperopt: Not installed
2024-03-16 16:55:58,546:INFO:              optuna: Not installed
2024-03-16 16:55:58,546:INFO:               skopt: Not installed
2024-03-16 16:55:58,546:INFO:              mlflow: 2.11.1
2024-03-16 16:55:58,546:INFO:              gradio: Not installed
2024-03-16 16:55:58,546:INFO:             fastapi: Not installed
2024-03-16 16:55:58,546:INFO:             uvicorn: Not installed
2024-03-16 16:55:58,546:INFO:              m2cgen: Not installed
2024-03-16 16:55:58,546:INFO:           evidently: Not installed
2024-03-16 16:55:58,546:INFO:               fugue: Not installed
2024-03-16 16:55:58,546:INFO:           streamlit: Not installed
2024-03-16 16:55:58,546:INFO:             prophet: Not installed
2024-03-16 16:55:58,546:INFO:None
2024-03-16 16:55:58,546:INFO:Set up data.
2024-03-16 16:55:58,551:INFO:Set up folding strategy.
2024-03-16 16:55:58,551:INFO:Set up train/test split.
2024-03-16 16:55:58,557:INFO:Set up index.
2024-03-16 16:55:58,557:INFO:Assigning column types.
2024-03-16 16:55:58,561:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 16:55:58,561:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,565:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,682:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,682:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:58,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:58,686:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,690:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,695:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,808:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:58,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:58,812:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 16:55:58,817:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,822:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,928:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:58,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:58,936:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 16:55:58,941:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,048:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,048:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,052:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 16:55:59,061:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,174:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,188:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,296:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,299:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 16:55:59,367:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,414:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,493:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,540:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,543:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 16:55:59,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,652:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 16:55:59,775:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:55:59,778:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 16:55:59,913:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:55:59,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:56:00,043:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:56:00,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:56:00,047:INFO:Preparing preprocessing pipeline...
2024-03-16 16:56:00,047:INFO:Set up simple imputation.
2024-03-16 16:56:00,048:INFO:Set up column name cleaning.
2024-03-16 16:56:00,075:INFO:Finished creating preprocessing pipeline.
2024-03-16 16:56:00,080:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:56:00,080:INFO:Creating final display dataframe.
2024-03-16 16:56:00,177:INFO:Setup _display_container:                     Description             Value
0                    Session id              4256
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 12)
4        Transformed data shape        (1859, 12)
5   Transformed train set shape        (1301, 12)
6    Transformed test set shape         (558, 12)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              ce52
2024-03-16 16:56:00,296:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:56:00,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:56:00,409:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 16:56:00,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 16:56:00,412:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 16:56:00,413:INFO:Logging experiment in loggers
2024-03-16 16:56:00,477:INFO:SubProcess save_model() called ==================================
2024-03-16 16:56:00,488:INFO:Initializing save_model()
2024-03-16 16:56:00,488:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpx2314t_n\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 16:56:00,488:INFO:Adding model into prep_pipe
2024-03-16 16:56:00,488:WARNING:Only Model saved as it was a pipeline.
2024-03-16 16:56:00,491:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpx2314t_n\Transformation Pipeline.pkl saved in current working directory
2024-03-16 16:56:00,496:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'Leeds.trains',
                                             'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 16:56:00,496:INFO:save_model() successfully completed......................................
2024-03-16 16:56:00,669:INFO:SubProcess save_model() end ==================================
2024-03-16 16:56:00,681:INFO:setup() successfully completed in 1.87s...............
2024-03-16 16:56:00,682:INFO:Initializing compare_models()
2024-03-16 16:56:00,682:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 16:56:00,682:INFO:Checking exceptions
2024-03-16 16:56:00,685:INFO:Preparing display monitor
2024-03-16 16:56:00,716:INFO:Initializing Linear Regression
2024-03-16 16:56:00,716:INFO:Total runtime is 0.0 minutes
2024-03-16 16:56:00,722:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:00,722:INFO:Initializing create_model()
2024-03-16 16:56:00,723:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:00,723:INFO:Checking exceptions
2024-03-16 16:56:00,723:INFO:Importing libraries
2024-03-16 16:56:00,723:INFO:Copying training dataset
2024-03-16 16:56:00,729:INFO:Defining folds
2024-03-16 16:56:00,729:INFO:Declaring metric variables
2024-03-16 16:56:00,733:INFO:Importing untrained model
2024-03-16 16:56:00,739:INFO:Linear Regression Imported successfully
2024-03-16 16:56:00,747:INFO:Starting cross validation
2024-03-16 16:56:00,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:00,854:INFO:Calculating mean and std
2024-03-16 16:56:00,854:INFO:Creating metrics dataframe
2024-03-16 16:56:00,856:INFO:Uploading results into container
2024-03-16 16:56:00,856:INFO:Uploading model into container now
2024-03-16 16:56:00,856:INFO:_master_model_container: 1
2024-03-16 16:56:00,856:INFO:_display_container: 2
2024-03-16 16:56:00,857:INFO:LinearRegression(n_jobs=-1)
2024-03-16 16:56:00,857:INFO:create_model() successfully completed......................................
2024-03-16 16:56:00,982:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:00,982:INFO:Creating metrics dataframe
2024-03-16 16:56:00,990:INFO:Initializing Lasso Regression
2024-03-16 16:56:00,990:INFO:Total runtime is 0.004560347398122152 minutes
2024-03-16 16:56:00,994:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:00,995:INFO:Initializing create_model()
2024-03-16 16:56:00,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:00,995:INFO:Checking exceptions
2024-03-16 16:56:00,995:INFO:Importing libraries
2024-03-16 16:56:00,995:INFO:Copying training dataset
2024-03-16 16:56:01,001:INFO:Defining folds
2024-03-16 16:56:01,001:INFO:Declaring metric variables
2024-03-16 16:56:01,008:INFO:Importing untrained model
2024-03-16 16:56:01,011:INFO:Lasso Regression Imported successfully
2024-03-16 16:56:01,020:INFO:Starting cross validation
2024-03-16 16:56:01,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:01,146:INFO:Calculating mean and std
2024-03-16 16:56:01,146:INFO:Creating metrics dataframe
2024-03-16 16:56:01,148:INFO:Uploading results into container
2024-03-16 16:56:01,149:INFO:Uploading model into container now
2024-03-16 16:56:01,149:INFO:_master_model_container: 2
2024-03-16 16:56:01,149:INFO:_display_container: 2
2024-03-16 16:56:01,149:INFO:Lasso(random_state=4256)
2024-03-16 16:56:01,149:INFO:create_model() successfully completed......................................
2024-03-16 16:56:01,287:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:01,287:INFO:Creating metrics dataframe
2024-03-16 16:56:01,295:INFO:Initializing Ridge Regression
2024-03-16 16:56:01,295:INFO:Total runtime is 0.009647150834401447 minutes
2024-03-16 16:56:01,299:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:01,299:INFO:Initializing create_model()
2024-03-16 16:56:01,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:01,299:INFO:Checking exceptions
2024-03-16 16:56:01,299:INFO:Importing libraries
2024-03-16 16:56:01,300:INFO:Copying training dataset
2024-03-16 16:56:01,305:INFO:Defining folds
2024-03-16 16:56:01,306:INFO:Declaring metric variables
2024-03-16 16:56:01,308:INFO:Importing untrained model
2024-03-16 16:56:01,313:INFO:Ridge Regression Imported successfully
2024-03-16 16:56:01,320:INFO:Starting cross validation
2024-03-16 16:56:01,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:01,349:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.91859e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,360:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.74161e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,361:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.33829e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,368:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.20509e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,376:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.61798e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,378:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.67472e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,388:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.7683e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,392:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.47992e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,395:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.88307e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,403:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.28884e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 16:56:01,412:INFO:Calculating mean and std
2024-03-16 16:56:01,412:INFO:Creating metrics dataframe
2024-03-16 16:56:01,414:INFO:Uploading results into container
2024-03-16 16:56:01,415:INFO:Uploading model into container now
2024-03-16 16:56:01,415:INFO:_master_model_container: 3
2024-03-16 16:56:01,415:INFO:_display_container: 2
2024-03-16 16:56:01,415:INFO:Ridge(random_state=4256)
2024-03-16 16:56:01,415:INFO:create_model() successfully completed......................................
2024-03-16 16:56:01,551:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:01,551:INFO:Creating metrics dataframe
2024-03-16 16:56:01,559:INFO:Initializing Elastic Net
2024-03-16 16:56:01,559:INFO:Total runtime is 0.014036373297373454 minutes
2024-03-16 16:56:01,563:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:01,563:INFO:Initializing create_model()
2024-03-16 16:56:01,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:01,563:INFO:Checking exceptions
2024-03-16 16:56:01,563:INFO:Importing libraries
2024-03-16 16:56:01,563:INFO:Copying training dataset
2024-03-16 16:56:01,569:INFO:Defining folds
2024-03-16 16:56:01,570:INFO:Declaring metric variables
2024-03-16 16:56:01,573:INFO:Importing untrained model
2024-03-16 16:56:01,577:INFO:Elastic Net Imported successfully
2024-03-16 16:56:01,584:INFO:Starting cross validation
2024-03-16 16:56:01,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:01,687:INFO:Calculating mean and std
2024-03-16 16:56:01,687:INFO:Creating metrics dataframe
2024-03-16 16:56:01,689:INFO:Uploading results into container
2024-03-16 16:56:01,690:INFO:Uploading model into container now
2024-03-16 16:56:01,690:INFO:_master_model_container: 4
2024-03-16 16:56:01,690:INFO:_display_container: 2
2024-03-16 16:56:01,690:INFO:ElasticNet(random_state=4256)
2024-03-16 16:56:01,691:INFO:create_model() successfully completed......................................
2024-03-16 16:56:01,833:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:01,833:INFO:Creating metrics dataframe
2024-03-16 16:56:01,842:INFO:Initializing Least Angle Regression
2024-03-16 16:56:01,842:INFO:Total runtime is 0.018753310044606526 minutes
2024-03-16 16:56:01,845:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:01,846:INFO:Initializing create_model()
2024-03-16 16:56:01,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:01,846:INFO:Checking exceptions
2024-03-16 16:56:01,846:INFO:Importing libraries
2024-03-16 16:56:01,846:INFO:Copying training dataset
2024-03-16 16:56:01,852:INFO:Defining folds
2024-03-16 16:56:01,853:INFO:Declaring metric variables
2024-03-16 16:56:01,857:INFO:Importing untrained model
2024-03-16 16:56:01,861:INFO:Least Angle Regression Imported successfully
2024-03-16 16:56:01,869:INFO:Starting cross validation
2024-03-16 16:56:01,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:01,978:INFO:Calculating mean and std
2024-03-16 16:56:01,979:INFO:Creating metrics dataframe
2024-03-16 16:56:01,981:INFO:Uploading results into container
2024-03-16 16:56:01,982:INFO:Uploading model into container now
2024-03-16 16:56:01,982:INFO:_master_model_container: 5
2024-03-16 16:56:01,983:INFO:_display_container: 2
2024-03-16 16:56:01,983:INFO:Lars(random_state=4256)
2024-03-16 16:56:01,983:INFO:create_model() successfully completed......................................
2024-03-16 16:56:02,124:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:02,124:INFO:Creating metrics dataframe
2024-03-16 16:56:02,132:INFO:Initializing Lasso Least Angle Regression
2024-03-16 16:56:02,133:INFO:Total runtime is 0.023596497376759847 minutes
2024-03-16 16:56:02,137:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:02,137:INFO:Initializing create_model()
2024-03-16 16:56:02,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:02,138:INFO:Checking exceptions
2024-03-16 16:56:02,138:INFO:Importing libraries
2024-03-16 16:56:02,138:INFO:Copying training dataset
2024-03-16 16:56:02,145:INFO:Defining folds
2024-03-16 16:56:02,145:INFO:Declaring metric variables
2024-03-16 16:56:02,148:INFO:Importing untrained model
2024-03-16 16:56:02,154:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 16:56:02,160:INFO:Starting cross validation
2024-03-16 16:56:02,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:02,309:INFO:Calculating mean and std
2024-03-16 16:56:02,310:INFO:Creating metrics dataframe
2024-03-16 16:56:02,312:INFO:Uploading results into container
2024-03-16 16:56:02,313:INFO:Uploading model into container now
2024-03-16 16:56:02,313:INFO:_master_model_container: 6
2024-03-16 16:56:02,313:INFO:_display_container: 2
2024-03-16 16:56:02,314:INFO:LassoLars(random_state=4256)
2024-03-16 16:56:02,314:INFO:create_model() successfully completed......................................
2024-03-16 16:56:02,450:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:02,451:INFO:Creating metrics dataframe
2024-03-16 16:56:02,460:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 16:56:02,460:INFO:Total runtime is 0.029058432579040526 minutes
2024-03-16 16:56:02,463:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:02,464:INFO:Initializing create_model()
2024-03-16 16:56:02,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:02,464:INFO:Checking exceptions
2024-03-16 16:56:02,464:INFO:Importing libraries
2024-03-16 16:56:02,464:INFO:Copying training dataset
2024-03-16 16:56:02,470:INFO:Defining folds
2024-03-16 16:56:02,471:INFO:Declaring metric variables
2024-03-16 16:56:02,474:INFO:Importing untrained model
2024-03-16 16:56:02,478:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:56:02,485:INFO:Starting cross validation
2024-03-16 16:56:02,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:02,606:INFO:Calculating mean and std
2024-03-16 16:56:02,607:INFO:Creating metrics dataframe
2024-03-16 16:56:02,609:INFO:Uploading results into container
2024-03-16 16:56:02,609:INFO:Uploading model into container now
2024-03-16 16:56:02,609:INFO:_master_model_container: 7
2024-03-16 16:56:02,611:INFO:_display_container: 2
2024-03-16 16:56:02,611:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:56:02,611:INFO:create_model() successfully completed......................................
2024-03-16 16:56:02,788:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:02,788:INFO:Creating metrics dataframe
2024-03-16 16:56:02,799:INFO:Initializing Bayesian Ridge
2024-03-16 16:56:02,799:INFO:Total runtime is 0.034708122412363686 minutes
2024-03-16 16:56:02,804:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:02,805:INFO:Initializing create_model()
2024-03-16 16:56:02,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:02,805:INFO:Checking exceptions
2024-03-16 16:56:02,805:INFO:Importing libraries
2024-03-16 16:56:02,805:INFO:Copying training dataset
2024-03-16 16:56:02,811:INFO:Defining folds
2024-03-16 16:56:02,811:INFO:Declaring metric variables
2024-03-16 16:56:02,817:INFO:Importing untrained model
2024-03-16 16:56:02,822:INFO:Bayesian Ridge Imported successfully
2024-03-16 16:56:02,832:INFO:Starting cross validation
2024-03-16 16:56:02,834:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:02,980:INFO:Calculating mean and std
2024-03-16 16:56:02,981:INFO:Creating metrics dataframe
2024-03-16 16:56:02,984:INFO:Uploading results into container
2024-03-16 16:56:02,985:INFO:Uploading model into container now
2024-03-16 16:56:02,986:INFO:_master_model_container: 8
2024-03-16 16:56:02,986:INFO:_display_container: 2
2024-03-16 16:56:02,987:INFO:BayesianRidge()
2024-03-16 16:56:02,987:INFO:create_model() successfully completed......................................
2024-03-16 16:56:03,146:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:03,147:INFO:Creating metrics dataframe
2024-03-16 16:56:03,156:INFO:Initializing Passive Aggressive Regressor
2024-03-16 16:56:03,157:INFO:Total runtime is 0.040674245357513426 minutes
2024-03-16 16:56:03,160:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:03,161:INFO:Initializing create_model()
2024-03-16 16:56:03,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:03,161:INFO:Checking exceptions
2024-03-16 16:56:03,161:INFO:Importing libraries
2024-03-16 16:56:03,161:INFO:Copying training dataset
2024-03-16 16:56:03,168:INFO:Defining folds
2024-03-16 16:56:03,168:INFO:Declaring metric variables
2024-03-16 16:56:03,172:INFO:Importing untrained model
2024-03-16 16:56:03,176:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 16:56:03,185:INFO:Starting cross validation
2024-03-16 16:56:03,186:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:03,298:INFO:Calculating mean and std
2024-03-16 16:56:03,300:INFO:Creating metrics dataframe
2024-03-16 16:56:03,302:INFO:Uploading results into container
2024-03-16 16:56:03,302:INFO:Uploading model into container now
2024-03-16 16:56:03,303:INFO:_master_model_container: 9
2024-03-16 16:56:03,303:INFO:_display_container: 2
2024-03-16 16:56:03,304:INFO:PassiveAggressiveRegressor(random_state=4256)
2024-03-16 16:56:03,304:INFO:create_model() successfully completed......................................
2024-03-16 16:56:03,443:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:03,443:INFO:Creating metrics dataframe
2024-03-16 16:56:03,452:INFO:Initializing Huber Regressor
2024-03-16 16:56:03,452:INFO:Total runtime is 0.04559395313262939 minutes
2024-03-16 16:56:03,456:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:03,457:INFO:Initializing create_model()
2024-03-16 16:56:03,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:03,457:INFO:Checking exceptions
2024-03-16 16:56:03,457:INFO:Importing libraries
2024-03-16 16:56:03,457:INFO:Copying training dataset
2024-03-16 16:56:03,463:INFO:Defining folds
2024-03-16 16:56:03,463:INFO:Declaring metric variables
2024-03-16 16:56:03,468:INFO:Importing untrained model
2024-03-16 16:56:03,472:INFO:Huber Regressor Imported successfully
2024-03-16 16:56:03,481:INFO:Starting cross validation
2024-03-16 16:56:03,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:03,597:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:56:03,607:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:56:03,624:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:56:03,635:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:56:03,643:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 16:56:03,654:INFO:Calculating mean and std
2024-03-16 16:56:03,655:INFO:Creating metrics dataframe
2024-03-16 16:56:03,657:INFO:Uploading results into container
2024-03-16 16:56:03,658:INFO:Uploading model into container now
2024-03-16 16:56:03,658:INFO:_master_model_container: 10
2024-03-16 16:56:03,659:INFO:_display_container: 2
2024-03-16 16:56:03,659:INFO:HuberRegressor()
2024-03-16 16:56:03,659:INFO:create_model() successfully completed......................................
2024-03-16 16:56:03,789:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:03,789:INFO:Creating metrics dataframe
2024-03-16 16:56:03,800:INFO:Initializing K Neighbors Regressor
2024-03-16 16:56:03,800:INFO:Total runtime is 0.05138779481252034 minutes
2024-03-16 16:56:03,804:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:03,805:INFO:Initializing create_model()
2024-03-16 16:56:03,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:03,805:INFO:Checking exceptions
2024-03-16 16:56:03,805:INFO:Importing libraries
2024-03-16 16:56:03,805:INFO:Copying training dataset
2024-03-16 16:56:03,811:INFO:Defining folds
2024-03-16 16:56:03,811:INFO:Declaring metric variables
2024-03-16 16:56:03,815:INFO:Importing untrained model
2024-03-16 16:56:03,819:INFO:K Neighbors Regressor Imported successfully
2024-03-16 16:56:03,827:INFO:Starting cross validation
2024-03-16 16:56:03,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:03,961:INFO:Calculating mean and std
2024-03-16 16:56:03,962:INFO:Creating metrics dataframe
2024-03-16 16:56:03,964:INFO:Uploading results into container
2024-03-16 16:56:03,964:INFO:Uploading model into container now
2024-03-16 16:56:03,965:INFO:_master_model_container: 11
2024-03-16 16:56:03,965:INFO:_display_container: 2
2024-03-16 16:56:03,965:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 16:56:03,966:INFO:create_model() successfully completed......................................
2024-03-16 16:56:04,132:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:04,132:INFO:Creating metrics dataframe
2024-03-16 16:56:04,142:INFO:Initializing Decision Tree Regressor
2024-03-16 16:56:04,143:INFO:Total runtime is 0.05711572170257568 minutes
2024-03-16 16:56:04,147:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:04,147:INFO:Initializing create_model()
2024-03-16 16:56:04,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:04,148:INFO:Checking exceptions
2024-03-16 16:56:04,148:INFO:Importing libraries
2024-03-16 16:56:04,148:INFO:Copying training dataset
2024-03-16 16:56:04,154:INFO:Defining folds
2024-03-16 16:56:04,154:INFO:Declaring metric variables
2024-03-16 16:56:04,160:INFO:Importing untrained model
2024-03-16 16:56:04,164:INFO:Decision Tree Regressor Imported successfully
2024-03-16 16:56:04,172:INFO:Starting cross validation
2024-03-16 16:56:04,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:04,294:INFO:Calculating mean and std
2024-03-16 16:56:04,295:INFO:Creating metrics dataframe
2024-03-16 16:56:04,298:INFO:Uploading results into container
2024-03-16 16:56:04,299:INFO:Uploading model into container now
2024-03-16 16:56:04,299:INFO:_master_model_container: 12
2024-03-16 16:56:04,299:INFO:_display_container: 2
2024-03-16 16:56:04,300:INFO:DecisionTreeRegressor(random_state=4256)
2024-03-16 16:56:04,300:INFO:create_model() successfully completed......................................
2024-03-16 16:56:04,467:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:04,468:INFO:Creating metrics dataframe
2024-03-16 16:56:04,480:INFO:Initializing Random Forest Regressor
2024-03-16 16:56:04,480:INFO:Total runtime is 0.06272384325663248 minutes
2024-03-16 16:56:04,484:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:04,485:INFO:Initializing create_model()
2024-03-16 16:56:04,486:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:04,486:INFO:Checking exceptions
2024-03-16 16:56:04,486:INFO:Importing libraries
2024-03-16 16:56:04,486:INFO:Copying training dataset
2024-03-16 16:56:04,492:INFO:Defining folds
2024-03-16 16:56:04,492:INFO:Declaring metric variables
2024-03-16 16:56:04,497:INFO:Importing untrained model
2024-03-16 16:56:04,502:INFO:Random Forest Regressor Imported successfully
2024-03-16 16:56:04,527:INFO:Starting cross validation
2024-03-16 16:56:04,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:05,946:INFO:Calculating mean and std
2024-03-16 16:56:05,947:INFO:Creating metrics dataframe
2024-03-16 16:56:05,949:INFO:Uploading results into container
2024-03-16 16:56:05,951:INFO:Uploading model into container now
2024-03-16 16:56:05,951:INFO:_master_model_container: 13
2024-03-16 16:56:05,951:INFO:_display_container: 2
2024-03-16 16:56:05,951:INFO:RandomForestRegressor(n_jobs=-1, random_state=4256)
2024-03-16 16:56:05,951:INFO:create_model() successfully completed......................................
2024-03-16 16:56:06,110:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:06,110:INFO:Creating metrics dataframe
2024-03-16 16:56:06,120:INFO:Initializing Extra Trees Regressor
2024-03-16 16:56:06,120:INFO:Total runtime is 0.09006396134694417 minutes
2024-03-16 16:56:06,124:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:06,124:INFO:Initializing create_model()
2024-03-16 16:56:06,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:06,124:INFO:Checking exceptions
2024-03-16 16:56:06,124:INFO:Importing libraries
2024-03-16 16:56:06,124:INFO:Copying training dataset
2024-03-16 16:56:06,129:INFO:Defining folds
2024-03-16 16:56:06,129:INFO:Declaring metric variables
2024-03-16 16:56:06,133:INFO:Importing untrained model
2024-03-16 16:56:06,138:INFO:Extra Trees Regressor Imported successfully
2024-03-16 16:56:06,144:INFO:Starting cross validation
2024-03-16 16:56:06,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:07,198:INFO:Calculating mean and std
2024-03-16 16:56:07,201:INFO:Creating metrics dataframe
2024-03-16 16:56:07,204:INFO:Uploading results into container
2024-03-16 16:56:07,205:INFO:Uploading model into container now
2024-03-16 16:56:07,205:INFO:_master_model_container: 14
2024-03-16 16:56:07,205:INFO:_display_container: 2
2024-03-16 16:56:07,206:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4256)
2024-03-16 16:56:07,206:INFO:create_model() successfully completed......................................
2024-03-16 16:56:07,379:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:07,379:INFO:Creating metrics dataframe
2024-03-16 16:56:07,390:INFO:Initializing AdaBoost Regressor
2024-03-16 16:56:07,390:INFO:Total runtime is 0.11123160123825072 minutes
2024-03-16 16:56:07,394:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:07,394:INFO:Initializing create_model()
2024-03-16 16:56:07,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:07,394:INFO:Checking exceptions
2024-03-16 16:56:07,394:INFO:Importing libraries
2024-03-16 16:56:07,394:INFO:Copying training dataset
2024-03-16 16:56:07,401:INFO:Defining folds
2024-03-16 16:56:07,401:INFO:Declaring metric variables
2024-03-16 16:56:07,405:INFO:Importing untrained model
2024-03-16 16:56:07,409:INFO:AdaBoost Regressor Imported successfully
2024-03-16 16:56:07,416:INFO:Starting cross validation
2024-03-16 16:56:07,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:07,702:INFO:Calculating mean and std
2024-03-16 16:56:07,703:INFO:Creating metrics dataframe
2024-03-16 16:56:07,705:INFO:Uploading results into container
2024-03-16 16:56:07,706:INFO:Uploading model into container now
2024-03-16 16:56:07,706:INFO:_master_model_container: 15
2024-03-16 16:56:07,706:INFO:_display_container: 2
2024-03-16 16:56:07,706:INFO:AdaBoostRegressor(random_state=4256)
2024-03-16 16:56:07,707:INFO:create_model() successfully completed......................................
2024-03-16 16:56:07,850:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:07,850:INFO:Creating metrics dataframe
2024-03-16 16:56:07,860:INFO:Initializing Gradient Boosting Regressor
2024-03-16 16:56:07,860:INFO:Total runtime is 0.119065789381663 minutes
2024-03-16 16:56:07,863:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:07,863:INFO:Initializing create_model()
2024-03-16 16:56:07,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:07,864:INFO:Checking exceptions
2024-03-16 16:56:07,864:INFO:Importing libraries
2024-03-16 16:56:07,864:INFO:Copying training dataset
2024-03-16 16:56:07,869:INFO:Defining folds
2024-03-16 16:56:07,870:INFO:Declaring metric variables
2024-03-16 16:56:07,875:INFO:Importing untrained model
2024-03-16 16:56:07,878:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 16:56:07,887:INFO:Starting cross validation
2024-03-16 16:56:07,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:08,326:INFO:Calculating mean and std
2024-03-16 16:56:08,327:INFO:Creating metrics dataframe
2024-03-16 16:56:08,330:INFO:Uploading results into container
2024-03-16 16:56:08,330:INFO:Uploading model into container now
2024-03-16 16:56:08,331:INFO:_master_model_container: 16
2024-03-16 16:56:08,331:INFO:_display_container: 2
2024-03-16 16:56:08,332:INFO:GradientBoostingRegressor(random_state=4256)
2024-03-16 16:56:08,332:INFO:create_model() successfully completed......................................
2024-03-16 16:56:08,463:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:08,463:INFO:Creating metrics dataframe
2024-03-16 16:56:08,474:INFO:Initializing Extreme Gradient Boosting
2024-03-16 16:56:08,474:INFO:Total runtime is 0.12928868929545084 minutes
2024-03-16 16:56:08,477:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:08,478:INFO:Initializing create_model()
2024-03-16 16:56:08,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:08,478:INFO:Checking exceptions
2024-03-16 16:56:08,478:INFO:Importing libraries
2024-03-16 16:56:08,478:INFO:Copying training dataset
2024-03-16 16:56:08,483:INFO:Defining folds
2024-03-16 16:56:08,484:INFO:Declaring metric variables
2024-03-16 16:56:08,487:INFO:Importing untrained model
2024-03-16 16:56:08,491:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 16:56:08,498:INFO:Starting cross validation
2024-03-16 16:56:08,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:08,823:INFO:Calculating mean and std
2024-03-16 16:56:08,824:INFO:Creating metrics dataframe
2024-03-16 16:56:08,826:INFO:Uploading results into container
2024-03-16 16:56:08,827:INFO:Uploading model into container now
2024-03-16 16:56:08,827:INFO:_master_model_container: 17
2024-03-16 16:56:08,827:INFO:_display_container: 2
2024-03-16 16:56:08,828:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4256, ...)
2024-03-16 16:56:08,829:INFO:create_model() successfully completed......................................
2024-03-16 16:56:08,955:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:08,955:INFO:Creating metrics dataframe
2024-03-16 16:56:08,966:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 16:56:08,967:INFO:Total runtime is 0.137507955233256 minutes
2024-03-16 16:56:08,970:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:08,971:INFO:Initializing create_model()
2024-03-16 16:56:08,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:08,971:INFO:Checking exceptions
2024-03-16 16:56:08,971:INFO:Importing libraries
2024-03-16 16:56:08,971:INFO:Copying training dataset
2024-03-16 16:56:08,976:INFO:Defining folds
2024-03-16 16:56:08,977:INFO:Declaring metric variables
2024-03-16 16:56:08,981:INFO:Importing untrained model
2024-03-16 16:56:08,985:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 16:56:08,992:INFO:Starting cross validation
2024-03-16 16:56:08,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:10,596:INFO:Calculating mean and std
2024-03-16 16:56:10,598:INFO:Creating metrics dataframe
2024-03-16 16:56:10,602:INFO:Uploading results into container
2024-03-16 16:56:10,603:INFO:Uploading model into container now
2024-03-16 16:56:10,604:INFO:_master_model_container: 18
2024-03-16 16:56:10,604:INFO:_display_container: 2
2024-03-16 16:56:10,605:INFO:LGBMRegressor(n_jobs=-1, random_state=4256)
2024-03-16 16:56:10,605:INFO:create_model() successfully completed......................................
2024-03-16 16:56:10,775:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:10,776:INFO:Creating metrics dataframe
2024-03-16 16:56:10,790:INFO:Initializing Dummy Regressor
2024-03-16 16:56:10,790:INFO:Total runtime is 0.16788718303044636 minutes
2024-03-16 16:56:10,796:INFO:SubProcess create_model() called ==================================
2024-03-16 16:56:10,796:INFO:Initializing create_model()
2024-03-16 16:56:10,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D6790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:10,796:INFO:Checking exceptions
2024-03-16 16:56:10,797:INFO:Importing libraries
2024-03-16 16:56:10,797:INFO:Copying training dataset
2024-03-16 16:56:10,808:INFO:Defining folds
2024-03-16 16:56:10,809:INFO:Declaring metric variables
2024-03-16 16:56:10,816:INFO:Importing untrained model
2024-03-16 16:56:10,822:INFO:Dummy Regressor Imported successfully
2024-03-16 16:56:10,836:INFO:Starting cross validation
2024-03-16 16:56:10,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 16:56:10,985:INFO:Calculating mean and std
2024-03-16 16:56:10,987:INFO:Creating metrics dataframe
2024-03-16 16:56:10,990:INFO:Uploading results into container
2024-03-16 16:56:10,991:INFO:Uploading model into container now
2024-03-16 16:56:10,991:INFO:_master_model_container: 19
2024-03-16 16:56:10,991:INFO:_display_container: 2
2024-03-16 16:56:10,992:INFO:DummyRegressor()
2024-03-16 16:56:10,992:INFO:create_model() successfully completed......................................
2024-03-16 16:56:11,161:INFO:SubProcess create_model() end ==================================
2024-03-16 16:56:11,161:INFO:Creating metrics dataframe
2024-03-16 16:56:11,173:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 16:56:11,181:INFO:Initializing create_model()
2024-03-16 16:56:11,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 16:56:11,182:INFO:Checking exceptions
2024-03-16 16:56:11,184:INFO:Importing libraries
2024-03-16 16:56:11,184:INFO:Copying training dataset
2024-03-16 16:56:11,191:INFO:Defining folds
2024-03-16 16:56:11,191:INFO:Declaring metric variables
2024-03-16 16:56:11,191:INFO:Importing untrained model
2024-03-16 16:56:11,191:INFO:Declaring custom model
2024-03-16 16:56:11,191:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 16:56:11,192:INFO:Cross validation set to False
2024-03-16 16:56:11,192:INFO:Fitting Model
2024-03-16 16:56:11,204:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:56:11,204:INFO:create_model() successfully completed......................................
2024-03-16 16:56:11,364:INFO:Creating Dashboard logs
2024-03-16 16:56:11,371:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 16:56:11,455:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 16:56:11,528:INFO:Initializing predict_model()
2024-03-16 16:56:11,528:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85A441A50>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B868898720>)
2024-03-16 16:56:11,528:INFO:Checking exceptions
2024-03-16 16:56:11,528:INFO:Preloading libraries
2024-03-16 16:56:11,594:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 16:56:11,907:INFO:Creating Dashboard logs
2024-03-16 16:56:11,911:INFO:Model: Bayesian Ridge
2024-03-16 16:56:11,964:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 16:56:12,213:INFO:Creating Dashboard logs
2024-03-16 16:56:12,219:INFO:Model: Elastic Net
2024-03-16 16:56:12,261:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4256, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:56:12,503:INFO:Creating Dashboard logs
2024-03-16 16:56:12,506:INFO:Model: Lasso Regression
2024-03-16 16:56:12,550:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4256, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 16:56:12,788:INFO:Creating Dashboard logs
2024-03-16 16:56:12,794:INFO:Model: Lasso Least Angle Regression
2024-03-16 16:56:12,836:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 4256, 'verbose': False}
2024-03-16 16:56:13,064:INFO:Creating Dashboard logs
2024-03-16 16:56:13,068:INFO:Model: Ridge Regression
2024-03-16 16:56:13,110:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 4256, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 16:56:13,332:INFO:Creating Dashboard logs
2024-03-16 16:56:13,336:INFO:Model: Linear Regression
2024-03-16 16:56:13,379:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 16:56:13,603:INFO:Creating Dashboard logs
2024-03-16 16:56:13,607:INFO:Model: Least Angle Regression
2024-03-16 16:56:13,653:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 4256, 'verbose': False}
2024-03-16 16:56:13,879:INFO:Creating Dashboard logs
2024-03-16 16:56:13,884:INFO:Model: Gradient Boosting Regressor
2024-03-16 16:56:13,939:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 4256, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:56:14,207:INFO:Creating Dashboard logs
2024-03-16 16:56:14,210:INFO:Model: Huber Regressor
2024-03-16 16:56:14,254:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 16:56:14,475:INFO:Creating Dashboard logs
2024-03-16 16:56:14,479:INFO:Model: Random Forest Regressor
2024-03-16 16:56:14,522:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4256, 'verbose': 0, 'warm_start': False}
2024-03-16 16:56:14,790:INFO:Creating Dashboard logs
2024-03-16 16:56:14,794:INFO:Model: Extra Trees Regressor
2024-03-16 16:56:14,836:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4256, 'verbose': 0, 'warm_start': False}
2024-03-16 16:56:15,089:INFO:Creating Dashboard logs
2024-03-16 16:56:15,092:INFO:Model: K Neighbors Regressor
2024-03-16 16:56:15,136:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 16:56:15,380:INFO:Creating Dashboard logs
2024-03-16 16:56:15,387:INFO:Model: Light Gradient Boosting Machine
2024-03-16 16:56:15,441:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 4256, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 16:56:15,773:INFO:Creating Dashboard logs
2024-03-16 16:56:15,777:INFO:Model: Extreme Gradient Boosting
2024-03-16 16:56:15,820:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 4256, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 16:56:16,107:INFO:Creating Dashboard logs
2024-03-16 16:56:16,111:INFO:Model: Decision Tree Regressor
2024-03-16 16:56:16,156:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4256, 'splitter': 'best'}
2024-03-16 16:56:16,397:INFO:Creating Dashboard logs
2024-03-16 16:56:16,400:INFO:Model: AdaBoost Regressor
2024-03-16 16:56:16,442:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 4256}
2024-03-16 16:56:16,673:INFO:Creating Dashboard logs
2024-03-16 16:56:16,677:INFO:Model: Dummy Regressor
2024-03-16 16:56:16,721:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 16:56:16,948:INFO:Creating Dashboard logs
2024-03-16 16:56:16,953:INFO:Model: Passive Aggressive Regressor
2024-03-16 16:56:16,999:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 4256, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 16:56:17,253:INFO:_master_model_container: 19
2024-03-16 16:56:17,253:INFO:_display_container: 2
2024-03-16 16:56:17,254:INFO:OrthogonalMatchingPursuit()
2024-03-16 16:56:17,254:INFO:compare_models() successfully completed......................................
2024-03-16 17:07:42,181:INFO:PyCaret RegressionExperiment
2024-03-16 17:07:42,182:INFO:Logging name: reg-default-name
2024-03-16 17:07:42,182:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:07:42,183:INFO:version 3.3.0
2024-03-16 17:07:42,183:INFO:Initializing setup()
2024-03-16 17:07:42,184:INFO:self.USI: 15bd
2024-03-16 17:07:42,184:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:07:42,184:INFO:Checking environment
2024-03-16 17:07:42,185:INFO:python_version: 3.11.5
2024-03-16 17:07:42,185:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:07:42,185:INFO:machine: AMD64
2024-03-16 17:07:42,185:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:07:42,186:INFO:Memory: svmem(total=34129678336, available=12390629376, percent=63.7, used=21739048960, free=12390629376)
2024-03-16 17:07:42,186:INFO:Physical Core: 6
2024-03-16 17:07:42,186:INFO:Logical Core: 12
2024-03-16 17:07:42,186:INFO:Checking libraries
2024-03-16 17:07:42,187:INFO:System:
2024-03-16 17:07:42,187:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:07:42,187:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:07:42,187:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:07:42,188:INFO:PyCaret required dependencies:
2024-03-16 17:07:42,188:INFO:                 pip: 24.0
2024-03-16 17:07:42,188:INFO:          setuptools: 68.0.0
2024-03-16 17:07:42,188:INFO:             pycaret: 3.3.0
2024-03-16 17:07:42,189:INFO:             IPython: 8.15.0
2024-03-16 17:07:42,189:INFO:          ipywidgets: 8.0.4
2024-03-16 17:07:42,189:INFO:                tqdm: 4.65.0
2024-03-16 17:07:42,189:INFO:               numpy: 1.24.3
2024-03-16 17:07:42,189:INFO:              pandas: 2.0.3
2024-03-16 17:07:42,189:INFO:              jinja2: 3.1.2
2024-03-16 17:07:42,190:INFO:               scipy: 1.11.1
2024-03-16 17:07:42,190:INFO:              joblib: 1.2.0
2024-03-16 17:07:42,190:INFO:             sklearn: 1.3.0
2024-03-16 17:07:42,190:INFO:                pyod: 1.1.3
2024-03-16 17:07:42,190:INFO:            imblearn: 0.10.1
2024-03-16 17:07:42,191:INFO:   category_encoders: 2.6.3
2024-03-16 17:07:42,191:INFO:            lightgbm: 4.3.0
2024-03-16 17:07:42,191:INFO:               numba: 0.57.1
2024-03-16 17:07:42,191:INFO:            requests: 2.31.0
2024-03-16 17:07:42,191:INFO:          matplotlib: 3.7.2
2024-03-16 17:07:42,192:INFO:          scikitplot: 0.3.7
2024-03-16 17:07:42,192:INFO:         yellowbrick: 1.5
2024-03-16 17:07:42,192:INFO:              plotly: 5.9.0
2024-03-16 17:07:42,192:INFO:    plotly-resampler: Not installed
2024-03-16 17:07:42,193:INFO:             kaleido: 0.2.1
2024-03-16 17:07:42,193:INFO:           schemdraw: 0.15
2024-03-16 17:07:42,193:INFO:         statsmodels: 0.14.0
2024-03-16 17:07:42,193:INFO:              sktime: 0.27.0
2024-03-16 17:07:42,194:INFO:               tbats: 1.1.3
2024-03-16 17:07:42,195:INFO:            pmdarima: 2.0.4
2024-03-16 17:07:42,195:INFO:              psutil: 5.9.0
2024-03-16 17:07:42,195:INFO:          markupsafe: 2.1.1
2024-03-16 17:07:42,195:INFO:             pickle5: Not installed
2024-03-16 17:07:42,196:INFO:         cloudpickle: 2.2.1
2024-03-16 17:07:42,196:INFO:         deprecation: 2.1.0
2024-03-16 17:07:42,196:INFO:              xxhash: 2.0.2
2024-03-16 17:07:42,196:INFO:           wurlitzer: Not installed
2024-03-16 17:07:42,197:INFO:PyCaret optional dependencies:
2024-03-16 17:07:42,197:INFO:                shap: Not installed
2024-03-16 17:07:42,197:INFO:           interpret: Not installed
2024-03-16 17:07:42,197:INFO:                umap: Not installed
2024-03-16 17:07:42,199:INFO:     ydata_profiling: Not installed
2024-03-16 17:07:42,199:INFO:  explainerdashboard: Not installed
2024-03-16 17:07:42,199:INFO:             autoviz: Not installed
2024-03-16 17:07:42,199:INFO:           fairlearn: Not installed
2024-03-16 17:07:42,199:INFO:          deepchecks: Not installed
2024-03-16 17:07:42,200:INFO:             xgboost: 2.0.3
2024-03-16 17:07:42,200:INFO:            catboost: Not installed
2024-03-16 17:07:42,201:INFO:              kmodes: Not installed
2024-03-16 17:07:42,201:INFO:             mlxtend: Not installed
2024-03-16 17:07:42,201:INFO:       statsforecast: Not installed
2024-03-16 17:07:42,202:INFO:        tune_sklearn: Not installed
2024-03-16 17:07:42,203:INFO:                 ray: Not installed
2024-03-16 17:07:42,206:INFO:            hyperopt: Not installed
2024-03-16 17:07:42,206:INFO:              optuna: Not installed
2024-03-16 17:07:42,207:INFO:               skopt: Not installed
2024-03-16 17:07:42,216:INFO:              mlflow: 2.11.1
2024-03-16 17:07:42,217:INFO:              gradio: Not installed
2024-03-16 17:07:42,217:INFO:             fastapi: Not installed
2024-03-16 17:07:42,217:INFO:             uvicorn: Not installed
2024-03-16 17:07:42,217:INFO:              m2cgen: Not installed
2024-03-16 17:07:42,217:INFO:           evidently: Not installed
2024-03-16 17:07:42,217:INFO:               fugue: Not installed
2024-03-16 17:07:42,219:INFO:           streamlit: Not installed
2024-03-16 17:07:42,219:INFO:             prophet: Not installed
2024-03-16 17:07:42,219:INFO:None
2024-03-16 17:07:42,220:INFO:Set up data.
2024-03-16 17:07:42,237:INFO:Set up folding strategy.
2024-03-16 17:07:42,237:INFO:Set up train/test split.
2024-03-16 17:07:42,258:INFO:Set up index.
2024-03-16 17:07:42,259:INFO:Assigning column types.
2024-03-16 17:07:42,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:07:42,287:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,320:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,354:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,932:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:42,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:42,945:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,960:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:07:42,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,385:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:43,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:43,395:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:07:43,408:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,432:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,706:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:43,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:43,725:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,734:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:43,962:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:43,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:43,973:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:07:44,016:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,372:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:44,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:44,408:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,801:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:44,805:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:44,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:44,815:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:07:45,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,135:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:45,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:45,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,379:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:45,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:45,384:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:07:45,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,600:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:45,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:45,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:07:45,826:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:45,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:45,835:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:07:46,345:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:46,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:46,961:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:46,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:46,975:INFO:Preparing preprocessing pipeline...
2024-03-16 17:07:46,975:INFO:Set up simple imputation.
2024-03-16 17:07:46,979:INFO:Set up column name cleaning.
2024-03-16 17:07:47,083:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:07:47,103:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:07:47,103:INFO:Creating final display dataframe.
2024-03-16 17:07:47,419:INFO:Setup _display_container:                     Description             Value
0                    Session id              8652
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 11)
4        Transformed data shape        (1859, 11)
5   Transformed train set shape        (1301, 11)
6    Transformed test set shape         (558, 11)
7              Numeric features                 3
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              15bd
2024-03-16 17:07:47,858:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:47,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:48,141:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:07:48,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:07:48,150:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:07:48,151:INFO:Logging experiment in loggers
2024-03-16 17:07:48,318:INFO:SubProcess save_model() called ==================================
2024-03-16 17:07:48,357:INFO:Initializing save_model()
2024-03-16 17:07:48,357:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp99x0to_r\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:07:48,357:INFO:Adding model into prep_pipe
2024-03-16 17:07:48,358:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:07:48,367:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp99x0to_r\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:07:48,389:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Hour', 'SHEFFLD_arr_delay',
                                             'LEEDS_dep_delay'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:07:48,389:INFO:save_model() successfully completed......................................
2024-03-16 17:07:48,773:INFO:SubProcess save_model() end ==================================
2024-03-16 17:07:48,798:INFO:setup() successfully completed in 5.98s...............
2024-03-16 17:07:48,798:INFO:Initializing compare_models()
2024-03-16 17:07:48,799:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:07:48,799:INFO:Checking exceptions
2024-03-16 17:07:48,804:INFO:Preparing display monitor
2024-03-16 17:07:48,889:INFO:Initializing Linear Regression
2024-03-16 17:07:48,890:INFO:Total runtime is 1.692374547322591e-05 minutes
2024-03-16 17:07:48,904:INFO:SubProcess create_model() called ==================================
2024-03-16 17:07:48,905:INFO:Initializing create_model()
2024-03-16 17:07:48,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:07:48,906:INFO:Checking exceptions
2024-03-16 17:07:48,907:INFO:Importing libraries
2024-03-16 17:07:48,907:INFO:Copying training dataset
2024-03-16 17:07:48,931:INFO:Defining folds
2024-03-16 17:07:48,932:INFO:Declaring metric variables
2024-03-16 17:07:48,949:INFO:Importing untrained model
2024-03-16 17:07:48,966:INFO:Linear Regression Imported successfully
2024-03-16 17:07:48,995:INFO:Starting cross validation
2024-03-16 17:07:49,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:21,051:INFO:Calculating mean and std
2024-03-16 17:08:21,057:INFO:Creating metrics dataframe
2024-03-16 17:08:21,074:INFO:Uploading results into container
2024-03-16 17:08:21,077:INFO:Uploading model into container now
2024-03-16 17:08:21,080:INFO:_master_model_container: 1
2024-03-16 17:08:21,080:INFO:_display_container: 2
2024-03-16 17:08:21,081:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:08:21,082:INFO:create_model() successfully completed......................................
2024-03-16 17:08:21,643:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:21,644:INFO:Creating metrics dataframe
2024-03-16 17:08:21,675:INFO:Initializing Lasso Regression
2024-03-16 17:08:21,677:INFO:Total runtime is 0.5464620391527811 minutes
2024-03-16 17:08:21,694:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:21,697:INFO:Initializing create_model()
2024-03-16 17:08:21,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:21,698:INFO:Checking exceptions
2024-03-16 17:08:21,699:INFO:Importing libraries
2024-03-16 17:08:21,700:INFO:Copying training dataset
2024-03-16 17:08:21,730:INFO:Defining folds
2024-03-16 17:08:21,732:INFO:Declaring metric variables
2024-03-16 17:08:21,755:INFO:Importing untrained model
2024-03-16 17:08:21,778:INFO:Lasso Regression Imported successfully
2024-03-16 17:08:21,820:INFO:Starting cross validation
2024-03-16 17:08:21,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:36,733:INFO:Calculating mean and std
2024-03-16 17:08:36,735:INFO:Creating metrics dataframe
2024-03-16 17:08:36,739:INFO:Uploading results into container
2024-03-16 17:08:36,740:INFO:Uploading model into container now
2024-03-16 17:08:36,741:INFO:_master_model_container: 2
2024-03-16 17:08:36,741:INFO:_display_container: 2
2024-03-16 17:08:36,744:INFO:Lasso(random_state=8652)
2024-03-16 17:08:36,744:INFO:create_model() successfully completed......................................
2024-03-16 17:08:36,993:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:36,993:INFO:Creating metrics dataframe
2024-03-16 17:08:37,007:INFO:Initializing Ridge Regression
2024-03-16 17:08:37,008:INFO:Total runtime is 0.8019601066907247 minutes
2024-03-16 17:08:37,015:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:37,016:INFO:Initializing create_model()
2024-03-16 17:08:37,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:37,018:INFO:Checking exceptions
2024-03-16 17:08:37,018:INFO:Importing libraries
2024-03-16 17:08:37,018:INFO:Copying training dataset
2024-03-16 17:08:37,027:INFO:Defining folds
2024-03-16 17:08:37,027:INFO:Declaring metric variables
2024-03-16 17:08:37,035:INFO:Importing untrained model
2024-03-16 17:08:37,040:INFO:Ridge Regression Imported successfully
2024-03-16 17:08:37,056:INFO:Starting cross validation
2024-03-16 17:08:37,060:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:37,128:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.78941e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,136:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.55173e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,156:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.02586e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,165:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.65727e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,174:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.04411e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,192:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.10087e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,213:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.07666e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,222:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.90331e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,241:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.00157e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,256:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.50946e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:08:37,287:INFO:Calculating mean and std
2024-03-16 17:08:37,289:INFO:Creating metrics dataframe
2024-03-16 17:08:37,294:INFO:Uploading results into container
2024-03-16 17:08:37,297:INFO:Uploading model into container now
2024-03-16 17:08:37,297:INFO:_master_model_container: 3
2024-03-16 17:08:37,299:INFO:_display_container: 2
2024-03-16 17:08:37,299:INFO:Ridge(random_state=8652)
2024-03-16 17:08:37,300:INFO:create_model() successfully completed......................................
2024-03-16 17:08:37,535:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:37,535:INFO:Creating metrics dataframe
2024-03-16 17:08:37,549:INFO:Initializing Elastic Net
2024-03-16 17:08:37,550:INFO:Total runtime is 0.8110136985778809 minutes
2024-03-16 17:08:37,556:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:37,556:INFO:Initializing create_model()
2024-03-16 17:08:37,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:37,557:INFO:Checking exceptions
2024-03-16 17:08:37,557:INFO:Importing libraries
2024-03-16 17:08:37,557:INFO:Copying training dataset
2024-03-16 17:08:37,571:INFO:Defining folds
2024-03-16 17:08:37,571:INFO:Declaring metric variables
2024-03-16 17:08:37,581:INFO:Importing untrained model
2024-03-16 17:08:37,593:INFO:Elastic Net Imported successfully
2024-03-16 17:08:37,609:INFO:Starting cross validation
2024-03-16 17:08:37,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:37,835:INFO:Calculating mean and std
2024-03-16 17:08:37,837:INFO:Creating metrics dataframe
2024-03-16 17:08:37,840:INFO:Uploading results into container
2024-03-16 17:08:37,841:INFO:Uploading model into container now
2024-03-16 17:08:37,843:INFO:_master_model_container: 4
2024-03-16 17:08:37,844:INFO:_display_container: 2
2024-03-16 17:08:37,845:INFO:ElasticNet(random_state=8652)
2024-03-16 17:08:37,846:INFO:create_model() successfully completed......................................
2024-03-16 17:08:38,091:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:38,091:INFO:Creating metrics dataframe
2024-03-16 17:08:38,106:INFO:Initializing Least Angle Regression
2024-03-16 17:08:38,107:INFO:Total runtime is 0.8202986637751262 minutes
2024-03-16 17:08:38,113:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:38,114:INFO:Initializing create_model()
2024-03-16 17:08:38,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:38,115:INFO:Checking exceptions
2024-03-16 17:08:38,115:INFO:Importing libraries
2024-03-16 17:08:38,115:INFO:Copying training dataset
2024-03-16 17:08:38,125:INFO:Defining folds
2024-03-16 17:08:38,126:INFO:Declaring metric variables
2024-03-16 17:08:38,133:INFO:Importing untrained model
2024-03-16 17:08:38,143:INFO:Least Angle Regression Imported successfully
2024-03-16 17:08:38,164:INFO:Starting cross validation
2024-03-16 17:08:38,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:38,391:INFO:Calculating mean and std
2024-03-16 17:08:38,394:INFO:Creating metrics dataframe
2024-03-16 17:08:38,399:INFO:Uploading results into container
2024-03-16 17:08:38,399:INFO:Uploading model into container now
2024-03-16 17:08:38,400:INFO:_master_model_container: 5
2024-03-16 17:08:38,400:INFO:_display_container: 2
2024-03-16 17:08:38,401:INFO:Lars(random_state=8652)
2024-03-16 17:08:38,401:INFO:create_model() successfully completed......................................
2024-03-16 17:08:38,655:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:38,655:INFO:Creating metrics dataframe
2024-03-16 17:08:38,678:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:08:38,679:INFO:Total runtime is 0.8298117399215699 minutes
2024-03-16 17:08:38,688:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:38,689:INFO:Initializing create_model()
2024-03-16 17:08:38,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:38,689:INFO:Checking exceptions
2024-03-16 17:08:38,689:INFO:Importing libraries
2024-03-16 17:08:38,689:INFO:Copying training dataset
2024-03-16 17:08:38,703:INFO:Defining folds
2024-03-16 17:08:38,703:INFO:Declaring metric variables
2024-03-16 17:08:38,712:INFO:Importing untrained model
2024-03-16 17:08:38,721:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:08:38,740:INFO:Starting cross validation
2024-03-16 17:08:38,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:38,957:INFO:Calculating mean and std
2024-03-16 17:08:38,961:INFO:Creating metrics dataframe
2024-03-16 17:08:38,965:INFO:Uploading results into container
2024-03-16 17:08:38,965:INFO:Uploading model into container now
2024-03-16 17:08:38,966:INFO:_master_model_container: 6
2024-03-16 17:08:38,966:INFO:_display_container: 2
2024-03-16 17:08:38,967:INFO:LassoLars(random_state=8652)
2024-03-16 17:08:38,967:INFO:create_model() successfully completed......................................
2024-03-16 17:08:39,191:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:39,191:INFO:Creating metrics dataframe
2024-03-16 17:08:39,215:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:08:39,215:INFO:Total runtime is 0.8387614051500957 minutes
2024-03-16 17:08:39,224:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:39,225:INFO:Initializing create_model()
2024-03-16 17:08:39,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:39,226:INFO:Checking exceptions
2024-03-16 17:08:39,226:INFO:Importing libraries
2024-03-16 17:08:39,226:INFO:Copying training dataset
2024-03-16 17:08:39,242:INFO:Defining folds
2024-03-16 17:08:39,245:INFO:Declaring metric variables
2024-03-16 17:08:39,256:INFO:Importing untrained model
2024-03-16 17:08:39,265:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:08:39,292:INFO:Starting cross validation
2024-03-16 17:08:39,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:39,661:INFO:Calculating mean and std
2024-03-16 17:08:39,664:INFO:Creating metrics dataframe
2024-03-16 17:08:39,667:INFO:Uploading results into container
2024-03-16 17:08:39,667:INFO:Uploading model into container now
2024-03-16 17:08:39,669:INFO:_master_model_container: 7
2024-03-16 17:08:39,670:INFO:_display_container: 2
2024-03-16 17:08:39,670:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:08:39,671:INFO:create_model() successfully completed......................................
2024-03-16 17:08:39,901:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:39,901:INFO:Creating metrics dataframe
2024-03-16 17:08:39,918:INFO:Initializing Bayesian Ridge
2024-03-16 17:08:39,918:INFO:Total runtime is 0.8504766980806987 minutes
2024-03-16 17:08:39,925:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:39,925:INFO:Initializing create_model()
2024-03-16 17:08:39,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:39,926:INFO:Checking exceptions
2024-03-16 17:08:39,926:INFO:Importing libraries
2024-03-16 17:08:39,926:INFO:Copying training dataset
2024-03-16 17:08:39,936:INFO:Defining folds
2024-03-16 17:08:39,937:INFO:Declaring metric variables
2024-03-16 17:08:39,945:INFO:Importing untrained model
2024-03-16 17:08:39,953:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:08:39,971:INFO:Starting cross validation
2024-03-16 17:08:39,974:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:40,219:INFO:Calculating mean and std
2024-03-16 17:08:40,223:INFO:Creating metrics dataframe
2024-03-16 17:08:40,227:INFO:Uploading results into container
2024-03-16 17:08:40,228:INFO:Uploading model into container now
2024-03-16 17:08:40,230:INFO:_master_model_container: 8
2024-03-16 17:08:40,231:INFO:_display_container: 2
2024-03-16 17:08:40,231:INFO:BayesianRidge()
2024-03-16 17:08:40,232:INFO:create_model() successfully completed......................................
2024-03-16 17:08:40,569:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:40,570:INFO:Creating metrics dataframe
2024-03-16 17:08:40,610:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:08:40,611:INFO:Total runtime is 0.8620210011800131 minutes
2024-03-16 17:08:40,624:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:40,625:INFO:Initializing create_model()
2024-03-16 17:08:40,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:40,626:INFO:Checking exceptions
2024-03-16 17:08:40,627:INFO:Importing libraries
2024-03-16 17:08:40,627:INFO:Copying training dataset
2024-03-16 17:08:40,657:INFO:Defining folds
2024-03-16 17:08:40,657:INFO:Declaring metric variables
2024-03-16 17:08:40,685:INFO:Importing untrained model
2024-03-16 17:08:40,700:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:08:40,728:INFO:Starting cross validation
2024-03-16 17:08:40,732:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:41,303:INFO:Calculating mean and std
2024-03-16 17:08:41,307:INFO:Creating metrics dataframe
2024-03-16 17:08:41,316:INFO:Uploading results into container
2024-03-16 17:08:41,319:INFO:Uploading model into container now
2024-03-16 17:08:41,321:INFO:_master_model_container: 9
2024-03-16 17:08:41,323:INFO:_display_container: 2
2024-03-16 17:08:41,324:INFO:PassiveAggressiveRegressor(random_state=8652)
2024-03-16 17:08:41,325:INFO:create_model() successfully completed......................................
2024-03-16 17:08:41,807:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:41,807:INFO:Creating metrics dataframe
2024-03-16 17:08:41,839:INFO:Initializing Huber Regressor
2024-03-16 17:08:41,839:INFO:Total runtime is 0.8824998577435812 minutes
2024-03-16 17:08:41,853:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:41,854:INFO:Initializing create_model()
2024-03-16 17:08:41,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:41,854:INFO:Checking exceptions
2024-03-16 17:08:41,855:INFO:Importing libraries
2024-03-16 17:08:41,855:INFO:Copying training dataset
2024-03-16 17:08:41,871:INFO:Defining folds
2024-03-16 17:08:41,872:INFO:Declaring metric variables
2024-03-16 17:08:41,887:INFO:Importing untrained model
2024-03-16 17:08:41,900:INFO:Huber Regressor Imported successfully
2024-03-16 17:08:41,926:INFO:Starting cross validation
2024-03-16 17:08:41,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:42,248:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,291:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,314:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,325:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,473:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,504:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,525:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,554:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,566:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:08:42,607:INFO:Calculating mean and std
2024-03-16 17:08:42,615:INFO:Creating metrics dataframe
2024-03-16 17:08:42,621:INFO:Uploading results into container
2024-03-16 17:08:42,622:INFO:Uploading model into container now
2024-03-16 17:08:42,623:INFO:_master_model_container: 10
2024-03-16 17:08:42,623:INFO:_display_container: 2
2024-03-16 17:08:42,625:INFO:HuberRegressor()
2024-03-16 17:08:42,626:INFO:create_model() successfully completed......................................
2024-03-16 17:08:42,939:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:42,939:INFO:Creating metrics dataframe
2024-03-16 17:08:42,967:INFO:Initializing K Neighbors Regressor
2024-03-16 17:08:42,968:INFO:Total runtime is 0.9013076504071554 minutes
2024-03-16 17:08:42,975:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:42,976:INFO:Initializing create_model()
2024-03-16 17:08:42,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:42,977:INFO:Checking exceptions
2024-03-16 17:08:42,977:INFO:Importing libraries
2024-03-16 17:08:42,977:INFO:Copying training dataset
2024-03-16 17:08:43,027:INFO:Defining folds
2024-03-16 17:08:43,028:INFO:Declaring metric variables
2024-03-16 17:08:43,040:INFO:Importing untrained model
2024-03-16 17:08:43,054:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:08:43,101:INFO:Starting cross validation
2024-03-16 17:08:43,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:43,628:INFO:Calculating mean and std
2024-03-16 17:08:43,633:INFO:Creating metrics dataframe
2024-03-16 17:08:43,638:INFO:Uploading results into container
2024-03-16 17:08:43,640:INFO:Uploading model into container now
2024-03-16 17:08:43,642:INFO:_master_model_container: 11
2024-03-16 17:08:43,642:INFO:_display_container: 2
2024-03-16 17:08:43,644:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:08:43,645:INFO:create_model() successfully completed......................................
2024-03-16 17:08:43,987:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:43,987:INFO:Creating metrics dataframe
2024-03-16 17:08:44,018:INFO:Initializing Decision Tree Regressor
2024-03-16 17:08:44,018:INFO:Total runtime is 0.9188155293464662 minutes
2024-03-16 17:08:44,028:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:44,029:INFO:Initializing create_model()
2024-03-16 17:08:44,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:44,030:INFO:Checking exceptions
2024-03-16 17:08:44,030:INFO:Importing libraries
2024-03-16 17:08:44,030:INFO:Copying training dataset
2024-03-16 17:08:44,045:INFO:Defining folds
2024-03-16 17:08:44,045:INFO:Declaring metric variables
2024-03-16 17:08:44,055:INFO:Importing untrained model
2024-03-16 17:08:44,070:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:08:44,095:INFO:Starting cross validation
2024-03-16 17:08:44,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:44,409:INFO:Calculating mean and std
2024-03-16 17:08:44,412:INFO:Creating metrics dataframe
2024-03-16 17:08:44,416:INFO:Uploading results into container
2024-03-16 17:08:44,417:INFO:Uploading model into container now
2024-03-16 17:08:44,418:INFO:_master_model_container: 12
2024-03-16 17:08:44,418:INFO:_display_container: 2
2024-03-16 17:08:44,419:INFO:DecisionTreeRegressor(random_state=8652)
2024-03-16 17:08:44,419:INFO:create_model() successfully completed......................................
2024-03-16 17:08:44,684:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:44,684:INFO:Creating metrics dataframe
2024-03-16 17:08:44,708:INFO:Initializing Random Forest Regressor
2024-03-16 17:08:44,708:INFO:Total runtime is 0.9303024927775067 minutes
2024-03-16 17:08:44,720:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:44,720:INFO:Initializing create_model()
2024-03-16 17:08:44,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:44,721:INFO:Checking exceptions
2024-03-16 17:08:44,721:INFO:Importing libraries
2024-03-16 17:08:44,721:INFO:Copying training dataset
2024-03-16 17:08:44,735:INFO:Defining folds
2024-03-16 17:08:44,736:INFO:Declaring metric variables
2024-03-16 17:08:44,745:INFO:Importing untrained model
2024-03-16 17:08:44,754:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:08:44,784:INFO:Starting cross validation
2024-03-16 17:08:44,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:47,632:INFO:Calculating mean and std
2024-03-16 17:08:47,636:INFO:Creating metrics dataframe
2024-03-16 17:08:47,647:INFO:Uploading results into container
2024-03-16 17:08:47,649:INFO:Uploading model into container now
2024-03-16 17:08:47,651:INFO:_master_model_container: 13
2024-03-16 17:08:47,651:INFO:_display_container: 2
2024-03-16 17:08:47,653:INFO:RandomForestRegressor(n_jobs=-1, random_state=8652)
2024-03-16 17:08:47,653:INFO:create_model() successfully completed......................................
2024-03-16 17:08:48,007:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:48,007:INFO:Creating metrics dataframe
2024-03-16 17:08:48,035:INFO:Initializing Extra Trees Regressor
2024-03-16 17:08:48,036:INFO:Total runtime is 0.9857718467712404 minutes
2024-03-16 17:08:48,043:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:48,044:INFO:Initializing create_model()
2024-03-16 17:08:48,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:48,045:INFO:Checking exceptions
2024-03-16 17:08:48,045:INFO:Importing libraries
2024-03-16 17:08:48,045:INFO:Copying training dataset
2024-03-16 17:08:48,056:INFO:Defining folds
2024-03-16 17:08:48,057:INFO:Declaring metric variables
2024-03-16 17:08:48,064:INFO:Importing untrained model
2024-03-16 17:08:48,072:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:08:48,088:INFO:Starting cross validation
2024-03-16 17:08:48,093:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:50,147:INFO:Calculating mean and std
2024-03-16 17:08:50,153:INFO:Creating metrics dataframe
2024-03-16 17:08:50,162:INFO:Uploading results into container
2024-03-16 17:08:50,166:INFO:Uploading model into container now
2024-03-16 17:08:50,168:INFO:_master_model_container: 14
2024-03-16 17:08:50,168:INFO:_display_container: 2
2024-03-16 17:08:50,170:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8652)
2024-03-16 17:08:50,170:INFO:create_model() successfully completed......................................
2024-03-16 17:08:50,543:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:50,544:INFO:Creating metrics dataframe
2024-03-16 17:08:50,585:INFO:Initializing AdaBoost Regressor
2024-03-16 17:08:50,585:INFO:Total runtime is 1.0282522201538087 minutes
2024-03-16 17:08:50,595:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:50,596:INFO:Initializing create_model()
2024-03-16 17:08:50,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:50,597:INFO:Checking exceptions
2024-03-16 17:08:50,597:INFO:Importing libraries
2024-03-16 17:08:50,598:INFO:Copying training dataset
2024-03-16 17:08:50,617:INFO:Defining folds
2024-03-16 17:08:50,617:INFO:Declaring metric variables
2024-03-16 17:08:50,631:INFO:Importing untrained model
2024-03-16 17:08:50,647:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:08:50,681:INFO:Starting cross validation
2024-03-16 17:08:50,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:51,754:INFO:Calculating mean and std
2024-03-16 17:08:51,762:INFO:Creating metrics dataframe
2024-03-16 17:08:51,772:INFO:Uploading results into container
2024-03-16 17:08:51,774:INFO:Uploading model into container now
2024-03-16 17:08:51,776:INFO:_master_model_container: 15
2024-03-16 17:08:51,777:INFO:_display_container: 2
2024-03-16 17:08:51,778:INFO:AdaBoostRegressor(random_state=8652)
2024-03-16 17:08:51,779:INFO:create_model() successfully completed......................................
2024-03-16 17:08:52,151:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:52,151:INFO:Creating metrics dataframe
2024-03-16 17:08:52,187:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:08:52,187:INFO:Total runtime is 1.054955800374349 minutes
2024-03-16 17:08:52,197:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:52,198:INFO:Initializing create_model()
2024-03-16 17:08:52,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:52,198:INFO:Checking exceptions
2024-03-16 17:08:52,198:INFO:Importing libraries
2024-03-16 17:08:52,199:INFO:Copying training dataset
2024-03-16 17:08:52,215:INFO:Defining folds
2024-03-16 17:08:52,215:INFO:Declaring metric variables
2024-03-16 17:08:52,223:INFO:Importing untrained model
2024-03-16 17:08:52,235:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:08:52,256:INFO:Starting cross validation
2024-03-16 17:08:52,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:53,570:INFO:Calculating mean and std
2024-03-16 17:08:53,575:INFO:Creating metrics dataframe
2024-03-16 17:08:53,584:INFO:Uploading results into container
2024-03-16 17:08:53,586:INFO:Uploading model into container now
2024-03-16 17:08:53,587:INFO:_master_model_container: 16
2024-03-16 17:08:53,588:INFO:_display_container: 2
2024-03-16 17:08:53,589:INFO:GradientBoostingRegressor(random_state=8652)
2024-03-16 17:08:53,589:INFO:create_model() successfully completed......................................
2024-03-16 17:08:53,934:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:53,934:INFO:Creating metrics dataframe
2024-03-16 17:08:53,958:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:08:53,960:INFO:Total runtime is 1.0845060785611471 minutes
2024-03-16 17:08:53,968:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:53,968:INFO:Initializing create_model()
2024-03-16 17:08:53,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:53,969:INFO:Checking exceptions
2024-03-16 17:08:53,969:INFO:Importing libraries
2024-03-16 17:08:53,969:INFO:Copying training dataset
2024-03-16 17:08:53,982:INFO:Defining folds
2024-03-16 17:08:53,982:INFO:Declaring metric variables
2024-03-16 17:08:53,991:INFO:Importing untrained model
2024-03-16 17:08:54,004:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:08:54,023:INFO:Starting cross validation
2024-03-16 17:08:54,027:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:08:55,020:INFO:Calculating mean and std
2024-03-16 17:08:55,024:INFO:Creating metrics dataframe
2024-03-16 17:08:55,030:INFO:Uploading results into container
2024-03-16 17:08:55,031:INFO:Uploading model into container now
2024-03-16 17:08:55,033:INFO:_master_model_container: 17
2024-03-16 17:08:55,033:INFO:_display_container: 2
2024-03-16 17:08:55,038:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8652, ...)
2024-03-16 17:08:55,039:INFO:create_model() successfully completed......................................
2024-03-16 17:08:55,352:INFO:SubProcess create_model() end ==================================
2024-03-16 17:08:55,352:INFO:Creating metrics dataframe
2024-03-16 17:08:55,386:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:08:55,386:INFO:Total runtime is 1.1082802931467692 minutes
2024-03-16 17:08:55,396:INFO:SubProcess create_model() called ==================================
2024-03-16 17:08:55,397:INFO:Initializing create_model()
2024-03-16 17:08:55,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:08:55,398:INFO:Checking exceptions
2024-03-16 17:08:55,398:INFO:Importing libraries
2024-03-16 17:08:55,398:INFO:Copying training dataset
2024-03-16 17:08:55,410:INFO:Defining folds
2024-03-16 17:08:55,411:INFO:Declaring metric variables
2024-03-16 17:08:55,421:INFO:Importing untrained model
2024-03-16 17:08:55,432:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:08:55,454:INFO:Starting cross validation
2024-03-16 17:08:55,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:09:05,692:INFO:Calculating mean and std
2024-03-16 17:09:05,697:INFO:Creating metrics dataframe
2024-03-16 17:09:05,710:INFO:Uploading results into container
2024-03-16 17:09:05,713:INFO:Uploading model into container now
2024-03-16 17:09:05,716:INFO:_master_model_container: 18
2024-03-16 17:09:05,717:INFO:_display_container: 2
2024-03-16 17:09:05,718:INFO:LGBMRegressor(n_jobs=-1, random_state=8652)
2024-03-16 17:09:05,719:INFO:create_model() successfully completed......................................
2024-03-16 17:09:06,106:INFO:SubProcess create_model() end ==================================
2024-03-16 17:09:06,106:INFO:Creating metrics dataframe
2024-03-16 17:09:06,164:INFO:Initializing Dummy Regressor
2024-03-16 17:09:06,165:INFO:Total runtime is 1.2879229466120403 minutes
2024-03-16 17:09:06,180:INFO:SubProcess create_model() called ==================================
2024-03-16 17:09:06,181:INFO:Initializing create_model()
2024-03-16 17:09:06,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A6C4590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:09:06,182:INFO:Checking exceptions
2024-03-16 17:09:06,183:INFO:Importing libraries
2024-03-16 17:09:06,183:INFO:Copying training dataset
2024-03-16 17:09:06,213:INFO:Defining folds
2024-03-16 17:09:06,214:INFO:Declaring metric variables
2024-03-16 17:09:06,227:INFO:Importing untrained model
2024-03-16 17:09:06,248:INFO:Dummy Regressor Imported successfully
2024-03-16 17:09:06,285:INFO:Starting cross validation
2024-03-16 17:09:06,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:09:06,653:INFO:Calculating mean and std
2024-03-16 17:09:06,655:INFO:Creating metrics dataframe
2024-03-16 17:09:06,664:INFO:Uploading results into container
2024-03-16 17:09:06,666:INFO:Uploading model into container now
2024-03-16 17:09:06,667:INFO:_master_model_container: 19
2024-03-16 17:09:06,668:INFO:_display_container: 2
2024-03-16 17:09:06,668:INFO:DummyRegressor()
2024-03-16 17:09:06,668:INFO:create_model() successfully completed......................................
2024-03-16 17:09:06,966:INFO:SubProcess create_model() end ==================================
2024-03-16 17:09:06,967:INFO:Creating metrics dataframe
2024-03-16 17:09:06,993:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:09:07,015:INFO:Initializing create_model()
2024-03-16 17:09:07,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:09:07,016:INFO:Checking exceptions
2024-03-16 17:09:07,019:INFO:Importing libraries
2024-03-16 17:09:07,020:INFO:Copying training dataset
2024-03-16 17:09:07,032:INFO:Defining folds
2024-03-16 17:09:07,032:INFO:Declaring metric variables
2024-03-16 17:09:07,032:INFO:Importing untrained model
2024-03-16 17:09:07,032:INFO:Declaring custom model
2024-03-16 17:09:07,033:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:09:07,035:INFO:Cross validation set to False
2024-03-16 17:09:07,035:INFO:Fitting Model
2024-03-16 17:09:07,072:INFO:BayesianRidge()
2024-03-16 17:09:07,072:INFO:create_model() successfully completed......................................
2024-03-16 17:09:07,377:INFO:Creating Dashboard logs
2024-03-16 17:09:07,387:INFO:Model: Bayesian Ridge
2024-03-16 17:09:07,484:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:09:07,638:INFO:Initializing predict_model()
2024-03-16 17:09:07,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84413A350>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D249760>)
2024-03-16 17:09:07,638:INFO:Checking exceptions
2024-03-16 17:09:07,639:INFO:Preloading libraries
2024-03-16 17:09:07,753:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:09:08,291:INFO:Creating Dashboard logs
2024-03-16 17:09:08,297:INFO:Model: Elastic Net
2024-03-16 17:09:08,374:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8652, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:09:08,980:INFO:Creating Dashboard logs
2024-03-16 17:09:08,986:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:09:09,062:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:09:09,490:INFO:Creating Dashboard logs
2024-03-16 17:09:09,496:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:09:09,567:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 8652, 'verbose': False}
2024-03-16 17:09:10,028:INFO:Creating Dashboard logs
2024-03-16 17:09:10,034:INFO:Model: Lasso Regression
2024-03-16 17:09:10,105:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8652, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:09:10,600:INFO:Creating Dashboard logs
2024-03-16 17:09:10,606:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:09:10,690:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 8652, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:09:11,319:INFO:Creating Dashboard logs
2024-03-16 17:09:11,328:INFO:Model: Ridge Regression
2024-03-16 17:09:11,461:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 8652, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:09:12,385:INFO:Creating Dashboard logs
2024-03-16 17:09:12,396:INFO:Model: Linear Regression
2024-03-16 17:09:12,529:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:09:13,031:INFO:Creating Dashboard logs
2024-03-16 17:09:13,038:INFO:Model: Least Angle Regression
2024-03-16 17:09:13,116:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 8652, 'verbose': False}
2024-03-16 17:09:13,567:INFO:Creating Dashboard logs
2024-03-16 17:09:13,573:INFO:Model: Huber Regressor
2024-03-16 17:09:13,651:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:09:14,148:INFO:Creating Dashboard logs
2024-03-16 17:09:14,153:INFO:Model: Random Forest Regressor
2024-03-16 17:09:14,239:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8652, 'verbose': 0, 'warm_start': False}
2024-03-16 17:09:14,717:INFO:Creating Dashboard logs
2024-03-16 17:09:14,723:INFO:Model: Extra Trees Regressor
2024-03-16 17:09:14,809:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8652, 'verbose': 0, 'warm_start': False}
2024-03-16 17:09:15,267:INFO:Creating Dashboard logs
2024-03-16 17:09:15,273:INFO:Model: K Neighbors Regressor
2024-03-16 17:09:15,346:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:09:15,747:INFO:Creating Dashboard logs
2024-03-16 17:09:15,754:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:09:15,838:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 8652, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:09:16,591:INFO:Creating Dashboard logs
2024-03-16 17:09:16,602:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:09:16,723:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 8652, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:09:17,477:INFO:Creating Dashboard logs
2024-03-16 17:09:17,486:INFO:Model: AdaBoost Regressor
2024-03-16 17:09:17,589:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 8652}
2024-03-16 17:09:18,069:INFO:Creating Dashboard logs
2024-03-16 17:09:18,077:INFO:Model: Decision Tree Regressor
2024-03-16 17:09:18,173:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 8652, 'splitter': 'best'}
2024-03-16 17:09:18,833:INFO:Creating Dashboard logs
2024-03-16 17:09:18,844:INFO:Model: Dummy Regressor
2024-03-16 17:09:19,038:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:09:19,817:INFO:Creating Dashboard logs
2024-03-16 17:09:19,826:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:09:19,933:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 8652, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:09:20,565:INFO:_master_model_container: 19
2024-03-16 17:09:20,566:INFO:_display_container: 2
2024-03-16 17:09:20,567:INFO:BayesianRidge()
2024-03-16 17:09:20,567:INFO:compare_models() successfully completed......................................
2024-03-16 17:11:24,785:INFO:PyCaret RegressionExperiment
2024-03-16 17:11:24,785:INFO:Logging name: reg-default-name
2024-03-16 17:11:24,786:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:11:24,786:INFO:version 3.3.0
2024-03-16 17:11:24,786:INFO:Initializing setup()
2024-03-16 17:11:24,786:INFO:self.USI: 077e
2024-03-16 17:11:24,786:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:11:24,786:INFO:Checking environment
2024-03-16 17:11:24,786:INFO:python_version: 3.11.5
2024-03-16 17:11:24,786:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:11:24,786:INFO:machine: AMD64
2024-03-16 17:11:24,786:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:11:24,787:INFO:Memory: svmem(total=34129678336, available=10199597056, percent=70.1, used=23930081280, free=10199597056)
2024-03-16 17:11:24,787:INFO:Physical Core: 6
2024-03-16 17:11:24,787:INFO:Logical Core: 12
2024-03-16 17:11:24,787:INFO:Checking libraries
2024-03-16 17:11:24,787:INFO:System:
2024-03-16 17:11:24,788:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:11:24,788:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:11:24,788:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:11:24,788:INFO:PyCaret required dependencies:
2024-03-16 17:11:24,788:INFO:                 pip: 24.0
2024-03-16 17:11:24,788:INFO:          setuptools: 68.0.0
2024-03-16 17:11:24,789:INFO:             pycaret: 3.3.0
2024-03-16 17:11:24,789:INFO:             IPython: 8.15.0
2024-03-16 17:11:24,789:INFO:          ipywidgets: 8.0.4
2024-03-16 17:11:24,789:INFO:                tqdm: 4.65.0
2024-03-16 17:11:24,789:INFO:               numpy: 1.24.3
2024-03-16 17:11:24,789:INFO:              pandas: 2.0.3
2024-03-16 17:11:24,789:INFO:              jinja2: 3.1.2
2024-03-16 17:11:24,789:INFO:               scipy: 1.11.1
2024-03-16 17:11:24,789:INFO:              joblib: 1.2.0
2024-03-16 17:11:24,789:INFO:             sklearn: 1.3.0
2024-03-16 17:11:24,790:INFO:                pyod: 1.1.3
2024-03-16 17:11:24,790:INFO:            imblearn: 0.10.1
2024-03-16 17:11:24,790:INFO:   category_encoders: 2.6.3
2024-03-16 17:11:24,790:INFO:            lightgbm: 4.3.0
2024-03-16 17:11:24,790:INFO:               numba: 0.57.1
2024-03-16 17:11:24,790:INFO:            requests: 2.31.0
2024-03-16 17:11:24,790:INFO:          matplotlib: 3.7.2
2024-03-16 17:11:24,790:INFO:          scikitplot: 0.3.7
2024-03-16 17:11:24,790:INFO:         yellowbrick: 1.5
2024-03-16 17:11:24,790:INFO:              plotly: 5.9.0
2024-03-16 17:11:24,790:INFO:    plotly-resampler: Not installed
2024-03-16 17:11:24,790:INFO:             kaleido: 0.2.1
2024-03-16 17:11:24,790:INFO:           schemdraw: 0.15
2024-03-16 17:11:24,790:INFO:         statsmodels: 0.14.0
2024-03-16 17:11:24,790:INFO:              sktime: 0.27.0
2024-03-16 17:11:24,790:INFO:               tbats: 1.1.3
2024-03-16 17:11:24,791:INFO:            pmdarima: 2.0.4
2024-03-16 17:11:24,791:INFO:              psutil: 5.9.0
2024-03-16 17:11:24,791:INFO:          markupsafe: 2.1.1
2024-03-16 17:11:24,791:INFO:             pickle5: Not installed
2024-03-16 17:11:24,791:INFO:         cloudpickle: 2.2.1
2024-03-16 17:11:24,791:INFO:         deprecation: 2.1.0
2024-03-16 17:11:24,791:INFO:              xxhash: 2.0.2
2024-03-16 17:11:24,791:INFO:           wurlitzer: Not installed
2024-03-16 17:11:24,791:INFO:PyCaret optional dependencies:
2024-03-16 17:11:24,792:INFO:                shap: Not installed
2024-03-16 17:11:24,792:INFO:           interpret: Not installed
2024-03-16 17:11:24,792:INFO:                umap: Not installed
2024-03-16 17:11:24,792:INFO:     ydata_profiling: Not installed
2024-03-16 17:11:24,792:INFO:  explainerdashboard: Not installed
2024-03-16 17:11:24,792:INFO:             autoviz: Not installed
2024-03-16 17:11:24,792:INFO:           fairlearn: Not installed
2024-03-16 17:11:24,792:INFO:          deepchecks: Not installed
2024-03-16 17:11:24,792:INFO:             xgboost: 2.0.3
2024-03-16 17:11:24,792:INFO:            catboost: Not installed
2024-03-16 17:11:24,793:INFO:              kmodes: Not installed
2024-03-16 17:11:24,793:INFO:             mlxtend: Not installed
2024-03-16 17:11:24,793:INFO:       statsforecast: Not installed
2024-03-16 17:11:24,793:INFO:        tune_sklearn: Not installed
2024-03-16 17:11:24,793:INFO:                 ray: Not installed
2024-03-16 17:11:24,793:INFO:            hyperopt: Not installed
2024-03-16 17:11:24,793:INFO:              optuna: Not installed
2024-03-16 17:11:24,793:INFO:               skopt: Not installed
2024-03-16 17:11:24,793:INFO:              mlflow: 2.11.1
2024-03-16 17:11:24,793:INFO:              gradio: Not installed
2024-03-16 17:11:24,794:INFO:             fastapi: Not installed
2024-03-16 17:11:24,794:INFO:             uvicorn: Not installed
2024-03-16 17:11:24,794:INFO:              m2cgen: Not installed
2024-03-16 17:11:24,794:INFO:           evidently: Not installed
2024-03-16 17:11:24,794:INFO:               fugue: Not installed
2024-03-16 17:11:24,794:INFO:           streamlit: Not installed
2024-03-16 17:11:24,794:INFO:             prophet: Not installed
2024-03-16 17:11:24,794:INFO:None
2024-03-16 17:11:24,795:INFO:Set up data.
2024-03-16 17:11:24,811:INFO:Set up folding strategy.
2024-03-16 17:11:24,811:INFO:Set up train/test split.
2024-03-16 17:11:24,825:INFO:Set up index.
2024-03-16 17:11:24,825:INFO:Assigning column types.
2024-03-16 17:11:24,840:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:11:24,841:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:11:24,849:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:11:24,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:24,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,136:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,139:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:25,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:25,151:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,165:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,182:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,442:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:25,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:25,448:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:11:25,457:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,717:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:25,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:25,734:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:25,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,023:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,024:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:26,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:26,030:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:11:26,058:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,290:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:26,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:26,329:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,594:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:26,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:26,599:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:11:26,739:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:26,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:26,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:26,997:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:27,117:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:11:27,118:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:27,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:27,125:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:11:27,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:27,332:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:27,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:27,450:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:11:27,521:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:27,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:27,529:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:11:27,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:27,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:27,951:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:27,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:27,957:INFO:Preparing preprocessing pipeline...
2024-03-16 17:11:27,957:INFO:Set up simple imputation.
2024-03-16 17:11:27,958:INFO:Set up column name cleaning.
2024-03-16 17:11:28,030:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:11:28,041:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:11:28,042:INFO:Creating final display dataframe.
2024-03-16 17:11:28,247:INFO:Setup _display_container:                     Description             Value
0                    Session id              5821
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 23)
4        Transformed data shape        (1859, 23)
5   Transformed train set shape        (1301, 23)
6    Transformed test set shape         (558, 23)
7              Numeric features                22
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              077e
2024-03-16 17:11:28,659:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:28,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:28,926:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:11:28,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:11:28,939:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:11:28,939:INFO:Logging experiment in loggers
2024-03-16 17:11:29,125:INFO:SubProcess save_model() called ==================================
2024-03-16 17:11:29,161:INFO:Initializing save_model()
2024-03-16 17:11:29,161:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp8to99r3g\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:11:29,161:INFO:Adding model into prep_pipe
2024-03-16 17:11:29,161:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:11:29,170:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp8to99r3g\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:11:29,189:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'WKFLDKG_stay_subtract',
                                             'BNSLY_stay_subtract',
                                             'MEADWHL_stay_subtract...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:11:29,190:INFO:save_model() successfully completed......................................
2024-03-16 17:11:29,552:INFO:SubProcess save_model() end ==================================
2024-03-16 17:11:29,600:INFO:setup() successfully completed in 4.16s...............
2024-03-16 17:11:29,601:INFO:Initializing compare_models()
2024-03-16 17:11:29,601:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:11:29,601:INFO:Checking exceptions
2024-03-16 17:11:29,614:INFO:Preparing display monitor
2024-03-16 17:11:29,779:INFO:Initializing Linear Regression
2024-03-16 17:11:29,779:INFO:Total runtime is 0.0 minutes
2024-03-16 17:11:29,794:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:29,795:INFO:Initializing create_model()
2024-03-16 17:11:29,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:29,796:INFO:Checking exceptions
2024-03-16 17:11:29,796:INFO:Importing libraries
2024-03-16 17:11:29,797:INFO:Copying training dataset
2024-03-16 17:11:29,826:INFO:Defining folds
2024-03-16 17:11:29,826:INFO:Declaring metric variables
2024-03-16 17:11:29,840:INFO:Importing untrained model
2024-03-16 17:11:29,858:INFO:Linear Regression Imported successfully
2024-03-16 17:11:29,893:INFO:Starting cross validation
2024-03-16 17:11:29,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:30,365:INFO:Calculating mean and std
2024-03-16 17:11:30,366:INFO:Creating metrics dataframe
2024-03-16 17:11:30,371:INFO:Uploading results into container
2024-03-16 17:11:30,373:INFO:Uploading model into container now
2024-03-16 17:11:30,374:INFO:_master_model_container: 1
2024-03-16 17:11:30,374:INFO:_display_container: 2
2024-03-16 17:11:30,375:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:11:30,375:INFO:create_model() successfully completed......................................
2024-03-16 17:11:30,664:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:30,665:INFO:Creating metrics dataframe
2024-03-16 17:11:30,681:INFO:Initializing Lasso Regression
2024-03-16 17:11:30,682:INFO:Total runtime is 0.015054841836293539 minutes
2024-03-16 17:11:30,691:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:30,692:INFO:Initializing create_model()
2024-03-16 17:11:30,692:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:30,692:INFO:Checking exceptions
2024-03-16 17:11:30,693:INFO:Importing libraries
2024-03-16 17:11:30,693:INFO:Copying training dataset
2024-03-16 17:11:30,713:INFO:Defining folds
2024-03-16 17:11:30,713:INFO:Declaring metric variables
2024-03-16 17:11:30,724:INFO:Importing untrained model
2024-03-16 17:11:30,735:INFO:Lasso Regression Imported successfully
2024-03-16 17:11:30,759:INFO:Starting cross validation
2024-03-16 17:11:30,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:31,060:INFO:Calculating mean and std
2024-03-16 17:11:31,062:INFO:Creating metrics dataframe
2024-03-16 17:11:31,066:INFO:Uploading results into container
2024-03-16 17:11:31,067:INFO:Uploading model into container now
2024-03-16 17:11:31,068:INFO:_master_model_container: 2
2024-03-16 17:11:31,068:INFO:_display_container: 2
2024-03-16 17:11:31,069:INFO:Lasso(random_state=5821)
2024-03-16 17:11:31,070:INFO:create_model() successfully completed......................................
2024-03-16 17:11:31,355:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:31,355:INFO:Creating metrics dataframe
2024-03-16 17:11:31,367:INFO:Initializing Ridge Regression
2024-03-16 17:11:31,367:INFO:Total runtime is 0.026465686162312825 minutes
2024-03-16 17:11:31,375:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:31,375:INFO:Initializing create_model()
2024-03-16 17:11:31,376:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:31,376:INFO:Checking exceptions
2024-03-16 17:11:31,376:INFO:Importing libraries
2024-03-16 17:11:31,376:INFO:Copying training dataset
2024-03-16 17:11:31,390:INFO:Defining folds
2024-03-16 17:11:31,391:INFO:Declaring metric variables
2024-03-16 17:11:31,398:INFO:Importing untrained model
2024-03-16 17:11:31,408:INFO:Ridge Regression Imported successfully
2024-03-16 17:11:31,425:INFO:Starting cross validation
2024-03-16 17:11:31,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:31,497:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.66111e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,513:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.20817e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,531:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.54344e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,535:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.60662e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,567:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.03266e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,576:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.19213e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,586:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.60017e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,604:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.22487e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,621:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.71753e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,642:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.59423e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:11:31,660:INFO:Calculating mean and std
2024-03-16 17:11:31,661:INFO:Creating metrics dataframe
2024-03-16 17:11:31,666:INFO:Uploading results into container
2024-03-16 17:11:31,667:INFO:Uploading model into container now
2024-03-16 17:11:31,668:INFO:_master_model_container: 3
2024-03-16 17:11:31,668:INFO:_display_container: 2
2024-03-16 17:11:31,668:INFO:Ridge(random_state=5821)
2024-03-16 17:11:31,669:INFO:create_model() successfully completed......................................
2024-03-16 17:11:32,040:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:32,040:INFO:Creating metrics dataframe
2024-03-16 17:11:32,064:INFO:Initializing Elastic Net
2024-03-16 17:11:32,064:INFO:Total runtime is 0.03808641036351522 minutes
2024-03-16 17:11:32,074:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:32,075:INFO:Initializing create_model()
2024-03-16 17:11:32,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:32,075:INFO:Checking exceptions
2024-03-16 17:11:32,076:INFO:Importing libraries
2024-03-16 17:11:32,076:INFO:Copying training dataset
2024-03-16 17:11:32,093:INFO:Defining folds
2024-03-16 17:11:32,094:INFO:Declaring metric variables
2024-03-16 17:11:32,101:INFO:Importing untrained model
2024-03-16 17:11:32,111:INFO:Elastic Net Imported successfully
2024-03-16 17:11:32,127:INFO:Starting cross validation
2024-03-16 17:11:32,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:32,474:INFO:Calculating mean and std
2024-03-16 17:11:32,477:INFO:Creating metrics dataframe
2024-03-16 17:11:32,481:INFO:Uploading results into container
2024-03-16 17:11:32,482:INFO:Uploading model into container now
2024-03-16 17:11:32,483:INFO:_master_model_container: 4
2024-03-16 17:11:32,484:INFO:_display_container: 2
2024-03-16 17:11:32,484:INFO:ElasticNet(random_state=5821)
2024-03-16 17:11:32,485:INFO:create_model() successfully completed......................................
2024-03-16 17:11:32,793:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:32,793:INFO:Creating metrics dataframe
2024-03-16 17:11:32,807:INFO:Initializing Least Angle Regression
2024-03-16 17:11:32,808:INFO:Total runtime is 0.05048626661300659 minutes
2024-03-16 17:11:32,817:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:32,817:INFO:Initializing create_model()
2024-03-16 17:11:32,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:32,818:INFO:Checking exceptions
2024-03-16 17:11:32,818:INFO:Importing libraries
2024-03-16 17:11:32,818:INFO:Copying training dataset
2024-03-16 17:11:32,842:INFO:Defining folds
2024-03-16 17:11:32,842:INFO:Declaring metric variables
2024-03-16 17:11:32,851:INFO:Importing untrained model
2024-03-16 17:11:32,861:INFO:Least Angle Regression Imported successfully
2024-03-16 17:11:32,877:INFO:Starting cross validation
2024-03-16 17:11:32,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:33,170:INFO:Calculating mean and std
2024-03-16 17:11:33,174:INFO:Creating metrics dataframe
2024-03-16 17:11:33,180:INFO:Uploading results into container
2024-03-16 17:11:33,181:INFO:Uploading model into container now
2024-03-16 17:11:33,182:INFO:_master_model_container: 5
2024-03-16 17:11:33,182:INFO:_display_container: 2
2024-03-16 17:11:33,183:INFO:Lars(random_state=5821)
2024-03-16 17:11:33,183:INFO:create_model() successfully completed......................................
2024-03-16 17:11:33,476:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:33,479:INFO:Creating metrics dataframe
2024-03-16 17:11:33,495:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:11:33,496:INFO:Total runtime is 0.06195598045984904 minutes
2024-03-16 17:11:33,502:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:33,503:INFO:Initializing create_model()
2024-03-16 17:11:33,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:33,504:INFO:Checking exceptions
2024-03-16 17:11:33,504:INFO:Importing libraries
2024-03-16 17:11:33,504:INFO:Copying training dataset
2024-03-16 17:11:33,522:INFO:Defining folds
2024-03-16 17:11:33,522:INFO:Declaring metric variables
2024-03-16 17:11:33,530:INFO:Importing untrained model
2024-03-16 17:11:33,538:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:11:33,575:INFO:Starting cross validation
2024-03-16 17:11:33,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:33,969:INFO:Calculating mean and std
2024-03-16 17:11:33,974:INFO:Creating metrics dataframe
2024-03-16 17:11:33,980:INFO:Uploading results into container
2024-03-16 17:11:33,981:INFO:Uploading model into container now
2024-03-16 17:11:33,982:INFO:_master_model_container: 6
2024-03-16 17:11:33,982:INFO:_display_container: 2
2024-03-16 17:11:33,983:INFO:LassoLars(random_state=5821)
2024-03-16 17:11:33,984:INFO:create_model() successfully completed......................................
2024-03-16 17:11:34,318:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:34,318:INFO:Creating metrics dataframe
2024-03-16 17:11:34,342:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:11:34,343:INFO:Total runtime is 0.07606246074040732 minutes
2024-03-16 17:11:34,350:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:34,351:INFO:Initializing create_model()
2024-03-16 17:11:34,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:34,352:INFO:Checking exceptions
2024-03-16 17:11:34,352:INFO:Importing libraries
2024-03-16 17:11:34,352:INFO:Copying training dataset
2024-03-16 17:11:34,376:INFO:Defining folds
2024-03-16 17:11:34,378:INFO:Declaring metric variables
2024-03-16 17:11:34,386:INFO:Importing untrained model
2024-03-16 17:11:34,399:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:11:34,417:INFO:Starting cross validation
2024-03-16 17:11:34,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:34,725:INFO:Calculating mean and std
2024-03-16 17:11:34,729:INFO:Creating metrics dataframe
2024-03-16 17:11:34,735:INFO:Uploading results into container
2024-03-16 17:11:34,740:INFO:Uploading model into container now
2024-03-16 17:11:34,744:INFO:_master_model_container: 7
2024-03-16 17:11:34,745:INFO:_display_container: 2
2024-03-16 17:11:34,745:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:11:34,746:INFO:create_model() successfully completed......................................
2024-03-16 17:11:35,113:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:35,114:INFO:Creating metrics dataframe
2024-03-16 17:11:35,148:INFO:Initializing Bayesian Ridge
2024-03-16 17:11:35,149:INFO:Total runtime is 0.08950232267379762 minutes
2024-03-16 17:11:35,162:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:35,164:INFO:Initializing create_model()
2024-03-16 17:11:35,164:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:35,164:INFO:Checking exceptions
2024-03-16 17:11:35,165:INFO:Importing libraries
2024-03-16 17:11:35,165:INFO:Copying training dataset
2024-03-16 17:11:35,200:INFO:Defining folds
2024-03-16 17:11:35,201:INFO:Declaring metric variables
2024-03-16 17:11:35,214:INFO:Importing untrained model
2024-03-16 17:11:35,230:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:11:35,262:INFO:Starting cross validation
2024-03-16 17:11:35,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:35,642:INFO:Calculating mean and std
2024-03-16 17:11:35,649:INFO:Creating metrics dataframe
2024-03-16 17:11:35,654:INFO:Uploading results into container
2024-03-16 17:11:35,657:INFO:Uploading model into container now
2024-03-16 17:11:35,658:INFO:_master_model_container: 8
2024-03-16 17:11:35,660:INFO:_display_container: 2
2024-03-16 17:11:35,662:INFO:BayesianRidge()
2024-03-16 17:11:35,665:INFO:create_model() successfully completed......................................
2024-03-16 17:11:36,117:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:36,117:INFO:Creating metrics dataframe
2024-03-16 17:11:36,147:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:11:36,147:INFO:Total runtime is 0.10614314476648969 minutes
2024-03-16 17:11:36,159:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:36,161:INFO:Initializing create_model()
2024-03-16 17:11:36,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:36,162:INFO:Checking exceptions
2024-03-16 17:11:36,162:INFO:Importing libraries
2024-03-16 17:11:36,162:INFO:Copying training dataset
2024-03-16 17:11:36,200:INFO:Defining folds
2024-03-16 17:11:36,200:INFO:Declaring metric variables
2024-03-16 17:11:36,216:INFO:Importing untrained model
2024-03-16 17:11:36,233:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:11:36,263:INFO:Starting cross validation
2024-03-16 17:11:36,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:36,640:INFO:Calculating mean and std
2024-03-16 17:11:36,643:INFO:Creating metrics dataframe
2024-03-16 17:11:36,651:INFO:Uploading results into container
2024-03-16 17:11:36,652:INFO:Uploading model into container now
2024-03-16 17:11:36,654:INFO:_master_model_container: 9
2024-03-16 17:11:36,654:INFO:_display_container: 2
2024-03-16 17:11:36,656:INFO:PassiveAggressiveRegressor(random_state=5821)
2024-03-16 17:11:36,657:INFO:create_model() successfully completed......................................
2024-03-16 17:11:36,978:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:36,978:INFO:Creating metrics dataframe
2024-03-16 17:11:37,006:INFO:Initializing Huber Regressor
2024-03-16 17:11:37,006:INFO:Total runtime is 0.12045497099558515 minutes
2024-03-16 17:11:37,015:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:37,016:INFO:Initializing create_model()
2024-03-16 17:11:37,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:37,017:INFO:Checking exceptions
2024-03-16 17:11:37,017:INFO:Importing libraries
2024-03-16 17:11:37,017:INFO:Copying training dataset
2024-03-16 17:11:37,037:INFO:Defining folds
2024-03-16 17:11:37,038:INFO:Declaring metric variables
2024-03-16 17:11:37,048:INFO:Importing untrained model
2024-03-16 17:11:37,057:INFO:Huber Regressor Imported successfully
2024-03-16 17:11:37,076:INFO:Starting cross validation
2024-03-16 17:11:37,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:37,344:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,406:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,423:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,427:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,434:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,498:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,560:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,571:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,580:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,608:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:11:37,640:INFO:Calculating mean and std
2024-03-16 17:11:37,644:INFO:Creating metrics dataframe
2024-03-16 17:11:37,651:INFO:Uploading results into container
2024-03-16 17:11:37,652:INFO:Uploading model into container now
2024-03-16 17:11:37,653:INFO:_master_model_container: 10
2024-03-16 17:11:37,654:INFO:_display_container: 2
2024-03-16 17:11:37,655:INFO:HuberRegressor()
2024-03-16 17:11:37,656:INFO:create_model() successfully completed......................................
2024-03-16 17:11:37,976:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:37,977:INFO:Creating metrics dataframe
2024-03-16 17:11:38,008:INFO:Initializing K Neighbors Regressor
2024-03-16 17:11:38,009:INFO:Total runtime is 0.13716936906178795 minutes
2024-03-16 17:11:38,018:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:38,019:INFO:Initializing create_model()
2024-03-16 17:11:38,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:38,020:INFO:Checking exceptions
2024-03-16 17:11:38,020:INFO:Importing libraries
2024-03-16 17:11:38,020:INFO:Copying training dataset
2024-03-16 17:11:38,043:INFO:Defining folds
2024-03-16 17:11:38,043:INFO:Declaring metric variables
2024-03-16 17:11:38,054:INFO:Importing untrained model
2024-03-16 17:11:38,066:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:11:38,086:INFO:Starting cross validation
2024-03-16 17:11:38,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:39,442:INFO:Calculating mean and std
2024-03-16 17:11:39,444:INFO:Creating metrics dataframe
2024-03-16 17:11:39,448:INFO:Uploading results into container
2024-03-16 17:11:39,451:INFO:Uploading model into container now
2024-03-16 17:11:39,452:INFO:_master_model_container: 11
2024-03-16 17:11:39,452:INFO:_display_container: 2
2024-03-16 17:11:39,452:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:11:39,453:INFO:create_model() successfully completed......................................
2024-03-16 17:11:39,703:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:39,704:INFO:Creating metrics dataframe
2024-03-16 17:11:39,721:INFO:Initializing Decision Tree Regressor
2024-03-16 17:11:39,721:INFO:Total runtime is 0.16570444504419965 minutes
2024-03-16 17:11:39,727:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:39,728:INFO:Initializing create_model()
2024-03-16 17:11:39,728:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:39,728:INFO:Checking exceptions
2024-03-16 17:11:39,728:INFO:Importing libraries
2024-03-16 17:11:39,728:INFO:Copying training dataset
2024-03-16 17:11:39,743:INFO:Defining folds
2024-03-16 17:11:39,744:INFO:Declaring metric variables
2024-03-16 17:11:39,750:INFO:Importing untrained model
2024-03-16 17:11:39,758:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:11:39,776:INFO:Starting cross validation
2024-03-16 17:11:39,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:40,033:INFO:Calculating mean and std
2024-03-16 17:11:40,034:INFO:Creating metrics dataframe
2024-03-16 17:11:40,040:INFO:Uploading results into container
2024-03-16 17:11:40,041:INFO:Uploading model into container now
2024-03-16 17:11:40,042:INFO:_master_model_container: 12
2024-03-16 17:11:40,042:INFO:_display_container: 2
2024-03-16 17:11:40,043:INFO:DecisionTreeRegressor(random_state=5821)
2024-03-16 17:11:40,043:INFO:create_model() successfully completed......................................
2024-03-16 17:11:40,262:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:40,263:INFO:Creating metrics dataframe
2024-03-16 17:11:40,281:INFO:Initializing Random Forest Regressor
2024-03-16 17:11:40,281:INFO:Total runtime is 0.17503798405329388 minutes
2024-03-16 17:11:40,287:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:40,288:INFO:Initializing create_model()
2024-03-16 17:11:40,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:40,288:INFO:Checking exceptions
2024-03-16 17:11:40,288:INFO:Importing libraries
2024-03-16 17:11:40,288:INFO:Copying training dataset
2024-03-16 17:11:40,301:INFO:Defining folds
2024-03-16 17:11:40,302:INFO:Declaring metric variables
2024-03-16 17:11:40,312:INFO:Importing untrained model
2024-03-16 17:11:40,317:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:11:40,334:INFO:Starting cross validation
2024-03-16 17:11:40,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:47,143:INFO:Calculating mean and std
2024-03-16 17:11:47,148:INFO:Creating metrics dataframe
2024-03-16 17:11:47,159:INFO:Uploading results into container
2024-03-16 17:11:47,160:INFO:Uploading model into container now
2024-03-16 17:11:47,162:INFO:_master_model_container: 13
2024-03-16 17:11:47,163:INFO:_display_container: 2
2024-03-16 17:11:47,165:INFO:RandomForestRegressor(n_jobs=-1, random_state=5821)
2024-03-16 17:11:47,166:INFO:create_model() successfully completed......................................
2024-03-16 17:11:47,660:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:47,660:INFO:Creating metrics dataframe
2024-03-16 17:11:47,699:INFO:Initializing Extra Trees Regressor
2024-03-16 17:11:47,700:INFO:Total runtime is 0.2986833413441976 minutes
2024-03-16 17:11:47,711:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:47,711:INFO:Initializing create_model()
2024-03-16 17:11:47,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:47,712:INFO:Checking exceptions
2024-03-16 17:11:47,712:INFO:Importing libraries
2024-03-16 17:11:47,712:INFO:Copying training dataset
2024-03-16 17:11:47,737:INFO:Defining folds
2024-03-16 17:11:47,738:INFO:Declaring metric variables
2024-03-16 17:11:47,753:INFO:Importing untrained model
2024-03-16 17:11:47,769:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:11:47,801:INFO:Starting cross validation
2024-03-16 17:11:47,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:51,690:INFO:Calculating mean and std
2024-03-16 17:11:51,693:INFO:Creating metrics dataframe
2024-03-16 17:11:51,699:INFO:Uploading results into container
2024-03-16 17:11:51,704:INFO:Uploading model into container now
2024-03-16 17:11:51,706:INFO:_master_model_container: 14
2024-03-16 17:11:51,707:INFO:_display_container: 2
2024-03-16 17:11:51,708:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5821)
2024-03-16 17:11:51,708:INFO:create_model() successfully completed......................................
2024-03-16 17:11:52,085:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:52,085:INFO:Creating metrics dataframe
2024-03-16 17:11:52,123:INFO:Initializing AdaBoost Regressor
2024-03-16 17:11:52,124:INFO:Total runtime is 0.37241833607355757 minutes
2024-03-16 17:11:52,133:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:52,134:INFO:Initializing create_model()
2024-03-16 17:11:52,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:52,135:INFO:Checking exceptions
2024-03-16 17:11:52,135:INFO:Importing libraries
2024-03-16 17:11:52,135:INFO:Copying training dataset
2024-03-16 17:11:52,160:INFO:Defining folds
2024-03-16 17:11:52,160:INFO:Declaring metric variables
2024-03-16 17:11:52,171:INFO:Importing untrained model
2024-03-16 17:11:52,189:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:11:52,222:INFO:Starting cross validation
2024-03-16 17:11:52,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:53,115:INFO:Calculating mean and std
2024-03-16 17:11:53,117:INFO:Creating metrics dataframe
2024-03-16 17:11:53,123:INFO:Uploading results into container
2024-03-16 17:11:53,124:INFO:Uploading model into container now
2024-03-16 17:11:53,126:INFO:_master_model_container: 15
2024-03-16 17:11:53,126:INFO:_display_container: 2
2024-03-16 17:11:53,127:INFO:AdaBoostRegressor(random_state=5821)
2024-03-16 17:11:53,127:INFO:create_model() successfully completed......................................
2024-03-16 17:11:53,366:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:53,367:INFO:Creating metrics dataframe
2024-03-16 17:11:53,384:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:11:53,384:INFO:Total runtime is 0.3934151887893677 minutes
2024-03-16 17:11:53,391:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:53,392:INFO:Initializing create_model()
2024-03-16 17:11:53,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:53,392:INFO:Checking exceptions
2024-03-16 17:11:53,393:INFO:Importing libraries
2024-03-16 17:11:53,393:INFO:Copying training dataset
2024-03-16 17:11:53,407:INFO:Defining folds
2024-03-16 17:11:53,407:INFO:Declaring metric variables
2024-03-16 17:11:53,414:INFO:Importing untrained model
2024-03-16 17:11:53,422:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:11:53,435:INFO:Starting cross validation
2024-03-16 17:11:53,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:55,447:INFO:Calculating mean and std
2024-03-16 17:11:55,450:INFO:Creating metrics dataframe
2024-03-16 17:11:55,455:INFO:Uploading results into container
2024-03-16 17:11:55,457:INFO:Uploading model into container now
2024-03-16 17:11:55,458:INFO:_master_model_container: 16
2024-03-16 17:11:55,458:INFO:_display_container: 2
2024-03-16 17:11:55,458:INFO:GradientBoostingRegressor(random_state=5821)
2024-03-16 17:11:55,458:INFO:create_model() successfully completed......................................
2024-03-16 17:11:55,692:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:55,693:INFO:Creating metrics dataframe
2024-03-16 17:11:55,716:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:11:55,716:INFO:Total runtime is 0.43228276570638025 minutes
2024-03-16 17:11:55,726:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:55,727:INFO:Initializing create_model()
2024-03-16 17:11:55,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:55,728:INFO:Checking exceptions
2024-03-16 17:11:55,728:INFO:Importing libraries
2024-03-16 17:11:55,728:INFO:Copying training dataset
2024-03-16 17:11:55,750:INFO:Defining folds
2024-03-16 17:11:55,751:INFO:Declaring metric variables
2024-03-16 17:11:55,760:INFO:Importing untrained model
2024-03-16 17:11:55,772:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:11:55,790:INFO:Starting cross validation
2024-03-16 17:11:55,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:11:57,843:INFO:Calculating mean and std
2024-03-16 17:11:57,847:INFO:Creating metrics dataframe
2024-03-16 17:11:57,852:INFO:Uploading results into container
2024-03-16 17:11:57,854:INFO:Uploading model into container now
2024-03-16 17:11:57,855:INFO:_master_model_container: 17
2024-03-16 17:11:57,856:INFO:_display_container: 2
2024-03-16 17:11:57,858:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=5821, ...)
2024-03-16 17:11:57,858:INFO:create_model() successfully completed......................................
2024-03-16 17:11:58,181:INFO:SubProcess create_model() end ==================================
2024-03-16 17:11:58,181:INFO:Creating metrics dataframe
2024-03-16 17:11:58,213:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:11:58,213:INFO:Total runtime is 0.47390548785527553 minutes
2024-03-16 17:11:58,224:INFO:SubProcess create_model() called ==================================
2024-03-16 17:11:58,225:INFO:Initializing create_model()
2024-03-16 17:11:58,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:11:58,226:INFO:Checking exceptions
2024-03-16 17:11:58,226:INFO:Importing libraries
2024-03-16 17:11:58,226:INFO:Copying training dataset
2024-03-16 17:11:58,246:INFO:Defining folds
2024-03-16 17:11:58,246:INFO:Declaring metric variables
2024-03-16 17:11:58,255:INFO:Importing untrained model
2024-03-16 17:11:58,267:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:11:58,286:INFO:Starting cross validation
2024-03-16 17:11:58,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:12:08,227:INFO:Calculating mean and std
2024-03-16 17:12:08,231:INFO:Creating metrics dataframe
2024-03-16 17:12:08,238:INFO:Uploading results into container
2024-03-16 17:12:08,241:INFO:Uploading model into container now
2024-03-16 17:12:08,243:INFO:_master_model_container: 18
2024-03-16 17:12:08,243:INFO:_display_container: 2
2024-03-16 17:12:08,245:INFO:LGBMRegressor(n_jobs=-1, random_state=5821)
2024-03-16 17:12:08,245:INFO:create_model() successfully completed......................................
2024-03-16 17:12:08,652:INFO:SubProcess create_model() end ==================================
2024-03-16 17:12:08,653:INFO:Creating metrics dataframe
2024-03-16 17:12:08,712:INFO:Initializing Dummy Regressor
2024-03-16 17:12:08,713:INFO:Total runtime is 0.6488985657691956 minutes
2024-03-16 17:12:08,742:INFO:SubProcess create_model() called ==================================
2024-03-16 17:12:08,743:INFO:Initializing create_model()
2024-03-16 17:12:08,743:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8546B1410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:12:08,743:INFO:Checking exceptions
2024-03-16 17:12:08,744:INFO:Importing libraries
2024-03-16 17:12:08,744:INFO:Copying training dataset
2024-03-16 17:12:08,786:INFO:Defining folds
2024-03-16 17:12:08,786:INFO:Declaring metric variables
2024-03-16 17:12:08,799:INFO:Importing untrained model
2024-03-16 17:12:08,812:INFO:Dummy Regressor Imported successfully
2024-03-16 17:12:08,835:INFO:Starting cross validation
2024-03-16 17:12:08,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:12:09,298:INFO:Calculating mean and std
2024-03-16 17:12:09,300:INFO:Creating metrics dataframe
2024-03-16 17:12:09,308:INFO:Uploading results into container
2024-03-16 17:12:09,310:INFO:Uploading model into container now
2024-03-16 17:12:09,311:INFO:_master_model_container: 19
2024-03-16 17:12:09,311:INFO:_display_container: 2
2024-03-16 17:12:09,312:INFO:DummyRegressor()
2024-03-16 17:12:09,312:INFO:create_model() successfully completed......................................
2024-03-16 17:12:09,625:INFO:SubProcess create_model() end ==================================
2024-03-16 17:12:09,625:INFO:Creating metrics dataframe
2024-03-16 17:12:09,661:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:12:09,683:INFO:Initializing create_model()
2024-03-16 17:12:09,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=Lasso(random_state=5821), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:12:09,683:INFO:Checking exceptions
2024-03-16 17:12:09,689:INFO:Importing libraries
2024-03-16 17:12:09,689:INFO:Copying training dataset
2024-03-16 17:12:09,710:INFO:Defining folds
2024-03-16 17:12:09,711:INFO:Declaring metric variables
2024-03-16 17:12:09,711:INFO:Importing untrained model
2024-03-16 17:12:09,711:INFO:Declaring custom model
2024-03-16 17:12:09,713:INFO:Lasso Regression Imported successfully
2024-03-16 17:12:09,716:INFO:Cross validation set to False
2024-03-16 17:12:09,716:INFO:Fitting Model
2024-03-16 17:12:09,752:INFO:Lasso(random_state=5821)
2024-03-16 17:12:09,752:INFO:create_model() successfully completed......................................
2024-03-16 17:12:10,025:INFO:Creating Dashboard logs
2024-03-16 17:12:10,031:INFO:Model: Lasso Regression
2024-03-16 17:12:10,109:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 5821, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:12:10,268:INFO:Initializing predict_model()
2024-03-16 17:12:10,268:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B84440C7D0>, estimator=Lasso(random_state=5821), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B8542540E0>)
2024-03-16 17:12:10,268:INFO:Checking exceptions
2024-03-16 17:12:10,268:INFO:Preloading libraries
2024-03-16 17:12:10,391:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:12:10,901:INFO:Creating Dashboard logs
2024-03-16 17:12:10,909:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:12:10,996:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 5821, 'verbose': False}
2024-03-16 17:12:11,799:INFO:Creating Dashboard logs
2024-03-16 17:12:11,806:INFO:Model: Ridge Regression
2024-03-16 17:12:11,905:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 5821, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:12:12,380:INFO:Creating Dashboard logs
2024-03-16 17:12:12,385:INFO:Model: Elastic Net
2024-03-16 17:12:12,467:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 5821, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:12:12,936:INFO:Creating Dashboard logs
2024-03-16 17:12:12,944:INFO:Model: Linear Regression
2024-03-16 17:12:13,018:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:12:13,581:INFO:Creating Dashboard logs
2024-03-16 17:12:13,587:INFO:Model: Bayesian Ridge
2024-03-16 17:12:13,665:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:12:14,118:INFO:Creating Dashboard logs
2024-03-16 17:12:14,126:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:12:14,193:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:12:14,626:INFO:Creating Dashboard logs
2024-03-16 17:12:14,635:INFO:Model: Least Angle Regression
2024-03-16 17:12:14,725:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 5821, 'verbose': False}
2024-03-16 17:12:15,428:INFO:Creating Dashboard logs
2024-03-16 17:12:15,436:INFO:Model: Huber Regressor
2024-03-16 17:12:15,523:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:12:15,956:INFO:Creating Dashboard logs
2024-03-16 17:12:15,962:INFO:Model: Extra Trees Regressor
2024-03-16 17:12:16,043:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 5821, 'verbose': 0, 'warm_start': False}
2024-03-16 17:12:16,531:INFO:Creating Dashboard logs
2024-03-16 17:12:16,537:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:12:16,625:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 5821, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:12:17,401:INFO:Creating Dashboard logs
2024-03-16 17:12:17,413:INFO:Model: Random Forest Regressor
2024-03-16 17:12:17,545:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 5821, 'verbose': 0, 'warm_start': False}
2024-03-16 17:12:18,099:INFO:Creating Dashboard logs
2024-03-16 17:12:18,105:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:12:18,180:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 5821, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:12:18,663:INFO:Creating Dashboard logs
2024-03-16 17:12:18,668:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:12:18,736:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 5821, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:12:19,367:INFO:Creating Dashboard logs
2024-03-16 17:12:19,375:INFO:Model: K Neighbors Regressor
2024-03-16 17:12:19,440:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:12:19,950:INFO:Creating Dashboard logs
2024-03-16 17:12:19,957:INFO:Model: AdaBoost Regressor
2024-03-16 17:12:20,037:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 5821}
2024-03-16 17:12:20,448:INFO:Creating Dashboard logs
2024-03-16 17:12:20,453:INFO:Model: Decision Tree Regressor
2024-03-16 17:12:20,517:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 5821, 'splitter': 'best'}
2024-03-16 17:12:20,901:INFO:Creating Dashboard logs
2024-03-16 17:12:20,907:INFO:Model: Dummy Regressor
2024-03-16 17:12:20,977:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:12:21,375:INFO:Creating Dashboard logs
2024-03-16 17:12:21,380:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:12:21,442:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 5821, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:12:21,851:INFO:_master_model_container: 19
2024-03-16 17:12:21,852:INFO:_display_container: 2
2024-03-16 17:12:21,853:INFO:Lasso(random_state=5821)
2024-03-16 17:12:21,853:INFO:compare_models() successfully completed......................................
2024-03-16 17:13:32,310:INFO:PyCaret RegressionExperiment
2024-03-16 17:13:32,310:INFO:Logging name: reg-default-name
2024-03-16 17:13:32,310:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:13:32,311:INFO:version 3.3.0
2024-03-16 17:13:32,311:INFO:Initializing setup()
2024-03-16 17:13:32,311:INFO:self.USI: 4824
2024-03-16 17:13:32,311:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:13:32,311:INFO:Checking environment
2024-03-16 17:13:32,311:INFO:python_version: 3.11.5
2024-03-16 17:13:32,311:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:13:32,311:INFO:machine: AMD64
2024-03-16 17:13:32,311:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:13:32,312:INFO:Memory: svmem(total=34129678336, available=10223083520, percent=70.0, used=23906594816, free=10223083520)
2024-03-16 17:13:32,312:INFO:Physical Core: 6
2024-03-16 17:13:32,312:INFO:Logical Core: 12
2024-03-16 17:13:32,312:INFO:Checking libraries
2024-03-16 17:13:32,312:INFO:System:
2024-03-16 17:13:32,312:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:13:32,312:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:13:32,312:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:13:32,312:INFO:PyCaret required dependencies:
2024-03-16 17:13:32,313:INFO:                 pip: 24.0
2024-03-16 17:13:32,313:INFO:          setuptools: 68.0.0
2024-03-16 17:13:32,313:INFO:             pycaret: 3.3.0
2024-03-16 17:13:32,313:INFO:             IPython: 8.15.0
2024-03-16 17:13:32,313:INFO:          ipywidgets: 8.0.4
2024-03-16 17:13:32,313:INFO:                tqdm: 4.65.0
2024-03-16 17:13:32,313:INFO:               numpy: 1.24.3
2024-03-16 17:13:32,313:INFO:              pandas: 2.0.3
2024-03-16 17:13:32,313:INFO:              jinja2: 3.1.2
2024-03-16 17:13:32,313:INFO:               scipy: 1.11.1
2024-03-16 17:13:32,314:INFO:              joblib: 1.2.0
2024-03-16 17:13:32,314:INFO:             sklearn: 1.3.0
2024-03-16 17:13:32,314:INFO:                pyod: 1.1.3
2024-03-16 17:13:32,314:INFO:            imblearn: 0.10.1
2024-03-16 17:13:32,314:INFO:   category_encoders: 2.6.3
2024-03-16 17:13:32,314:INFO:            lightgbm: 4.3.0
2024-03-16 17:13:32,314:INFO:               numba: 0.57.1
2024-03-16 17:13:32,314:INFO:            requests: 2.31.0
2024-03-16 17:13:32,314:INFO:          matplotlib: 3.7.2
2024-03-16 17:13:32,314:INFO:          scikitplot: 0.3.7
2024-03-16 17:13:32,314:INFO:         yellowbrick: 1.5
2024-03-16 17:13:32,315:INFO:              plotly: 5.9.0
2024-03-16 17:13:32,315:INFO:    plotly-resampler: Not installed
2024-03-16 17:13:32,315:INFO:             kaleido: 0.2.1
2024-03-16 17:13:32,315:INFO:           schemdraw: 0.15
2024-03-16 17:13:32,315:INFO:         statsmodels: 0.14.0
2024-03-16 17:13:32,316:INFO:              sktime: 0.27.0
2024-03-16 17:13:32,316:INFO:               tbats: 1.1.3
2024-03-16 17:13:32,317:INFO:            pmdarima: 2.0.4
2024-03-16 17:13:32,317:INFO:              psutil: 5.9.0
2024-03-16 17:13:32,317:INFO:          markupsafe: 2.1.1
2024-03-16 17:13:32,317:INFO:             pickle5: Not installed
2024-03-16 17:13:32,317:INFO:         cloudpickle: 2.2.1
2024-03-16 17:13:32,317:INFO:         deprecation: 2.1.0
2024-03-16 17:13:32,318:INFO:              xxhash: 2.0.2
2024-03-16 17:13:32,318:INFO:           wurlitzer: Not installed
2024-03-16 17:13:32,318:INFO:PyCaret optional dependencies:
2024-03-16 17:13:32,318:INFO:                shap: Not installed
2024-03-16 17:13:32,318:INFO:           interpret: Not installed
2024-03-16 17:13:32,318:INFO:                umap: Not installed
2024-03-16 17:13:32,319:INFO:     ydata_profiling: Not installed
2024-03-16 17:13:32,319:INFO:  explainerdashboard: Not installed
2024-03-16 17:13:32,319:INFO:             autoviz: Not installed
2024-03-16 17:13:32,319:INFO:           fairlearn: Not installed
2024-03-16 17:13:32,319:INFO:          deepchecks: Not installed
2024-03-16 17:13:32,319:INFO:             xgboost: 2.0.3
2024-03-16 17:13:32,319:INFO:            catboost: Not installed
2024-03-16 17:13:32,319:INFO:              kmodes: Not installed
2024-03-16 17:13:32,320:INFO:             mlxtend: Not installed
2024-03-16 17:13:32,320:INFO:       statsforecast: Not installed
2024-03-16 17:13:32,320:INFO:        tune_sklearn: Not installed
2024-03-16 17:13:32,320:INFO:                 ray: Not installed
2024-03-16 17:13:32,320:INFO:            hyperopt: Not installed
2024-03-16 17:13:32,320:INFO:              optuna: Not installed
2024-03-16 17:13:32,320:INFO:               skopt: Not installed
2024-03-16 17:13:32,320:INFO:              mlflow: 2.11.1
2024-03-16 17:13:32,320:INFO:              gradio: Not installed
2024-03-16 17:13:32,321:INFO:             fastapi: Not installed
2024-03-16 17:13:32,321:INFO:             uvicorn: Not installed
2024-03-16 17:13:32,321:INFO:              m2cgen: Not installed
2024-03-16 17:13:32,321:INFO:           evidently: Not installed
2024-03-16 17:13:32,321:INFO:               fugue: Not installed
2024-03-16 17:13:32,322:INFO:           streamlit: Not installed
2024-03-16 17:13:32,322:INFO:             prophet: Not installed
2024-03-16 17:13:32,322:INFO:None
2024-03-16 17:13:32,322:INFO:Set up data.
2024-03-16 17:13:32,332:INFO:Set up folding strategy.
2024-03-16 17:13:32,332:INFO:Set up train/test split.
2024-03-16 17:13:32,350:INFO:Set up index.
2024-03-16 17:13:32,351:INFO:Assigning column types.
2024-03-16 17:13:32,373:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:13:32,373:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,381:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,402:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,525:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,610:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:32,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:32,615:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,628:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,743:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,823:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:32,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:32,827:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:13:32,834:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:32,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,047:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:33,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:33,061:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,072:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,172:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,258:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,259:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:33,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:33,268:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:13:33,287:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,465:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:33,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:33,491:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,594:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,667:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:33,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:33,672:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:13:33,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:33,850:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:33,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:33,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:34,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:13:34,031:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:34,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:34,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:13:34,143:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:34,207:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:34,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:34,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:13:34,402:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:34,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:34,406:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:13:34,597:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:34,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:34,807:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:34,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:34,812:INFO:Preparing preprocessing pipeline...
2024-03-16 17:13:34,812:INFO:Set up simple imputation.
2024-03-16 17:13:34,814:INFO:Set up column name cleaning.
2024-03-16 17:13:34,872:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:13:34,881:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:13:34,881:INFO:Creating final display dataframe.
2024-03-16 17:13:35,068:INFO:Setup _display_container:                     Description             Value
0                    Session id              5381
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 18)
4        Transformed data shape        (1859, 18)
5   Transformed train set shape        (1301, 18)
6    Transformed test set shape         (558, 18)
7              Numeric features                17
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              4824
2024-03-16 17:13:35,269:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:35,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:35,467:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:13:35,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:13:35,473:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:13:35,473:INFO:Logging experiment in loggers
2024-03-16 17:13:35,593:INFO:SubProcess save_model() called ==================================
2024-03-16 17:13:35,611:INFO:Initializing save_model()
2024-03-16 17:13:35,611:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpii9a5xhx\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:13:35,611:INFO:Adding model into prep_pipe
2024-03-16 17:13:35,611:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:13:35,614:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpii9a5xhx\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:13:35,623:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:13:35,623:INFO:save_model() successfully completed......................................
2024-03-16 17:13:35,827:INFO:SubProcess save_model() end ==================================
2024-03-16 17:13:35,841:INFO:setup() successfully completed in 3.17s...............
2024-03-16 17:13:35,841:INFO:Initializing compare_models()
2024-03-16 17:13:35,842:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:13:35,842:INFO:Checking exceptions
2024-03-16 17:13:35,845:INFO:Preparing display monitor
2024-03-16 17:13:35,892:INFO:Initializing Linear Regression
2024-03-16 17:13:35,892:INFO:Total runtime is 0.0 minutes
2024-03-16 17:13:35,898:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:35,900:INFO:Initializing create_model()
2024-03-16 17:13:35,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:35,901:INFO:Checking exceptions
2024-03-16 17:13:35,901:INFO:Importing libraries
2024-03-16 17:13:35,901:INFO:Copying training dataset
2024-03-16 17:13:35,915:INFO:Defining folds
2024-03-16 17:13:35,915:INFO:Declaring metric variables
2024-03-16 17:13:35,926:INFO:Importing untrained model
2024-03-16 17:13:35,936:INFO:Linear Regression Imported successfully
2024-03-16 17:13:35,955:INFO:Starting cross validation
2024-03-16 17:13:35,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:36,189:INFO:Calculating mean and std
2024-03-16 17:13:36,190:INFO:Creating metrics dataframe
2024-03-16 17:13:36,192:INFO:Uploading results into container
2024-03-16 17:13:36,193:INFO:Uploading model into container now
2024-03-16 17:13:36,193:INFO:_master_model_container: 1
2024-03-16 17:13:36,193:INFO:_display_container: 2
2024-03-16 17:13:36,194:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:13:36,194:INFO:create_model() successfully completed......................................
2024-03-16 17:13:36,462:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:36,463:INFO:Creating metrics dataframe
2024-03-16 17:13:36,477:INFO:Initializing Lasso Regression
2024-03-16 17:13:36,477:INFO:Total runtime is 0.009745502471923828 minutes
2024-03-16 17:13:36,483:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:36,484:INFO:Initializing create_model()
2024-03-16 17:13:36,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:36,485:INFO:Checking exceptions
2024-03-16 17:13:36,486:INFO:Importing libraries
2024-03-16 17:13:36,486:INFO:Copying training dataset
2024-03-16 17:13:36,497:INFO:Defining folds
2024-03-16 17:13:36,497:INFO:Declaring metric variables
2024-03-16 17:13:36,506:INFO:Importing untrained model
2024-03-16 17:13:36,513:INFO:Lasso Regression Imported successfully
2024-03-16 17:13:36,528:INFO:Starting cross validation
2024-03-16 17:13:36,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:36,824:INFO:Calculating mean and std
2024-03-16 17:13:36,825:INFO:Creating metrics dataframe
2024-03-16 17:13:36,828:INFO:Uploading results into container
2024-03-16 17:13:36,829:INFO:Uploading model into container now
2024-03-16 17:13:36,830:INFO:_master_model_container: 2
2024-03-16 17:13:36,830:INFO:_display_container: 2
2024-03-16 17:13:36,831:INFO:Lasso(random_state=5381)
2024-03-16 17:13:36,831:INFO:create_model() successfully completed......................................
2024-03-16 17:13:37,144:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:37,144:INFO:Creating metrics dataframe
2024-03-16 17:13:37,165:INFO:Initializing Ridge Regression
2024-03-16 17:13:37,165:INFO:Total runtime is 0.02121345599492391 minutes
2024-03-16 17:13:37,177:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:37,178:INFO:Initializing create_model()
2024-03-16 17:13:37,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:37,178:INFO:Checking exceptions
2024-03-16 17:13:37,178:INFO:Importing libraries
2024-03-16 17:13:37,178:INFO:Copying training dataset
2024-03-16 17:13:37,193:INFO:Defining folds
2024-03-16 17:13:37,193:INFO:Declaring metric variables
2024-03-16 17:13:37,207:INFO:Importing untrained model
2024-03-16 17:13:37,216:INFO:Ridge Regression Imported successfully
2024-03-16 17:13:37,236:INFO:Starting cross validation
2024-03-16 17:13:37,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:37,346:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.80059e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,363:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.56616e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,381:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.68521e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,398:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.26368e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,441:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.39796e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,450:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.8407e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,486:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.87804e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,513:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.8866e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,530:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.89072e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,562:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.98874e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:13:37,582:INFO:Calculating mean and std
2024-03-16 17:13:37,586:INFO:Creating metrics dataframe
2024-03-16 17:13:37,592:INFO:Uploading results into container
2024-03-16 17:13:37,594:INFO:Uploading model into container now
2024-03-16 17:13:37,595:INFO:_master_model_container: 3
2024-03-16 17:13:37,595:INFO:_display_container: 2
2024-03-16 17:13:37,596:INFO:Ridge(random_state=5381)
2024-03-16 17:13:37,596:INFO:create_model() successfully completed......................................
2024-03-16 17:13:37,861:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:37,862:INFO:Creating metrics dataframe
2024-03-16 17:13:37,877:INFO:Initializing Elastic Net
2024-03-16 17:13:37,877:INFO:Total runtime is 0.033091692129770915 minutes
2024-03-16 17:13:37,884:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:37,884:INFO:Initializing create_model()
2024-03-16 17:13:37,885:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:37,885:INFO:Checking exceptions
2024-03-16 17:13:37,885:INFO:Importing libraries
2024-03-16 17:13:37,885:INFO:Copying training dataset
2024-03-16 17:13:37,898:INFO:Defining folds
2024-03-16 17:13:37,898:INFO:Declaring metric variables
2024-03-16 17:13:37,908:INFO:Importing untrained model
2024-03-16 17:13:37,914:INFO:Elastic Net Imported successfully
2024-03-16 17:13:37,929:INFO:Starting cross validation
2024-03-16 17:13:37,933:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:38,140:INFO:Calculating mean and std
2024-03-16 17:13:38,141:INFO:Creating metrics dataframe
2024-03-16 17:13:38,145:INFO:Uploading results into container
2024-03-16 17:13:38,146:INFO:Uploading model into container now
2024-03-16 17:13:38,147:INFO:_master_model_container: 4
2024-03-16 17:13:38,147:INFO:_display_container: 2
2024-03-16 17:13:38,148:INFO:ElasticNet(random_state=5381)
2024-03-16 17:13:38,149:INFO:create_model() successfully completed......................................
2024-03-16 17:13:38,390:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:38,390:INFO:Creating metrics dataframe
2024-03-16 17:13:38,404:INFO:Initializing Least Angle Regression
2024-03-16 17:13:38,405:INFO:Total runtime is 0.04189287026723226 minutes
2024-03-16 17:13:38,411:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:38,412:INFO:Initializing create_model()
2024-03-16 17:13:38,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:38,412:INFO:Checking exceptions
2024-03-16 17:13:38,413:INFO:Importing libraries
2024-03-16 17:13:38,413:INFO:Copying training dataset
2024-03-16 17:13:38,425:INFO:Defining folds
2024-03-16 17:13:38,426:INFO:Declaring metric variables
2024-03-16 17:13:38,435:INFO:Importing untrained model
2024-03-16 17:13:38,443:INFO:Least Angle Regression Imported successfully
2024-03-16 17:13:38,459:INFO:Starting cross validation
2024-03-16 17:13:38,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:38,702:INFO:Calculating mean and std
2024-03-16 17:13:38,705:INFO:Creating metrics dataframe
2024-03-16 17:13:38,709:INFO:Uploading results into container
2024-03-16 17:13:38,710:INFO:Uploading model into container now
2024-03-16 17:13:38,710:INFO:_master_model_container: 5
2024-03-16 17:13:38,711:INFO:_display_container: 2
2024-03-16 17:13:38,711:INFO:Lars(random_state=5381)
2024-03-16 17:13:38,712:INFO:create_model() successfully completed......................................
2024-03-16 17:13:38,992:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:38,992:INFO:Creating metrics dataframe
2024-03-16 17:13:39,012:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:13:39,012:INFO:Total runtime is 0.05200144052505493 minutes
2024-03-16 17:13:39,022:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:39,022:INFO:Initializing create_model()
2024-03-16 17:13:39,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:39,023:INFO:Checking exceptions
2024-03-16 17:13:39,023:INFO:Importing libraries
2024-03-16 17:13:39,023:INFO:Copying training dataset
2024-03-16 17:13:39,039:INFO:Defining folds
2024-03-16 17:13:39,039:INFO:Declaring metric variables
2024-03-16 17:13:39,048:INFO:Importing untrained model
2024-03-16 17:13:39,058:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:13:39,076:INFO:Starting cross validation
2024-03-16 17:13:39,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:39,326:INFO:Calculating mean and std
2024-03-16 17:13:39,328:INFO:Creating metrics dataframe
2024-03-16 17:13:39,331:INFO:Uploading results into container
2024-03-16 17:13:39,333:INFO:Uploading model into container now
2024-03-16 17:13:39,335:INFO:_master_model_container: 6
2024-03-16 17:13:39,335:INFO:_display_container: 2
2024-03-16 17:13:39,337:INFO:LassoLars(random_state=5381)
2024-03-16 17:13:39,338:INFO:create_model() successfully completed......................................
2024-03-16 17:13:39,612:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:39,613:INFO:Creating metrics dataframe
2024-03-16 17:13:39,637:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:13:39,637:INFO:Total runtime is 0.0624255379041036 minutes
2024-03-16 17:13:39,647:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:39,648:INFO:Initializing create_model()
2024-03-16 17:13:39,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:39,649:INFO:Checking exceptions
2024-03-16 17:13:39,650:INFO:Importing libraries
2024-03-16 17:13:39,650:INFO:Copying training dataset
2024-03-16 17:13:39,672:INFO:Defining folds
2024-03-16 17:13:39,672:INFO:Declaring metric variables
2024-03-16 17:13:39,680:INFO:Importing untrained model
2024-03-16 17:13:39,693:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:13:39,717:INFO:Starting cross validation
2024-03-16 17:13:39,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:40,069:INFO:Calculating mean and std
2024-03-16 17:13:40,073:INFO:Creating metrics dataframe
2024-03-16 17:13:40,078:INFO:Uploading results into container
2024-03-16 17:13:40,079:INFO:Uploading model into container now
2024-03-16 17:13:40,081:INFO:_master_model_container: 7
2024-03-16 17:13:40,081:INFO:_display_container: 2
2024-03-16 17:13:40,083:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:13:40,084:INFO:create_model() successfully completed......................................
2024-03-16 17:13:40,487:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:40,487:INFO:Creating metrics dataframe
2024-03-16 17:13:40,513:INFO:Initializing Bayesian Ridge
2024-03-16 17:13:40,514:INFO:Total runtime is 0.07704256772994995 minutes
2024-03-16 17:13:40,524:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:40,525:INFO:Initializing create_model()
2024-03-16 17:13:40,525:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:40,525:INFO:Checking exceptions
2024-03-16 17:13:40,526:INFO:Importing libraries
2024-03-16 17:13:40,526:INFO:Copying training dataset
2024-03-16 17:13:40,544:INFO:Defining folds
2024-03-16 17:13:40,544:INFO:Declaring metric variables
2024-03-16 17:13:40,609:INFO:Importing untrained model
2024-03-16 17:13:40,625:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:13:40,659:INFO:Starting cross validation
2024-03-16 17:13:40,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:41,059:INFO:Calculating mean and std
2024-03-16 17:13:41,061:INFO:Creating metrics dataframe
2024-03-16 17:13:41,065:INFO:Uploading results into container
2024-03-16 17:13:41,066:INFO:Uploading model into container now
2024-03-16 17:13:41,068:INFO:_master_model_container: 8
2024-03-16 17:13:41,068:INFO:_display_container: 2
2024-03-16 17:13:41,071:INFO:BayesianRidge()
2024-03-16 17:13:41,072:INFO:create_model() successfully completed......................................
2024-03-16 17:13:41,380:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:41,381:INFO:Creating metrics dataframe
2024-03-16 17:13:41,401:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:13:41,402:INFO:Total runtime is 0.09183845520019532 minutes
2024-03-16 17:13:41,408:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:41,409:INFO:Initializing create_model()
2024-03-16 17:13:41,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:41,409:INFO:Checking exceptions
2024-03-16 17:13:41,410:INFO:Importing libraries
2024-03-16 17:13:41,410:INFO:Copying training dataset
2024-03-16 17:13:41,425:INFO:Defining folds
2024-03-16 17:13:41,426:INFO:Declaring metric variables
2024-03-16 17:13:41,434:INFO:Importing untrained model
2024-03-16 17:13:41,441:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:13:41,458:INFO:Starting cross validation
2024-03-16 17:13:41,461:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:41,828:INFO:Calculating mean and std
2024-03-16 17:13:41,832:INFO:Creating metrics dataframe
2024-03-16 17:13:41,839:INFO:Uploading results into container
2024-03-16 17:13:41,841:INFO:Uploading model into container now
2024-03-16 17:13:41,844:INFO:_master_model_container: 9
2024-03-16 17:13:41,844:INFO:_display_container: 2
2024-03-16 17:13:41,845:INFO:PassiveAggressiveRegressor(random_state=5381)
2024-03-16 17:13:41,845:INFO:create_model() successfully completed......................................
2024-03-16 17:13:42,164:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:42,164:INFO:Creating metrics dataframe
2024-03-16 17:13:42,187:INFO:Initializing Huber Regressor
2024-03-16 17:13:42,188:INFO:Total runtime is 0.10492223898569744 minutes
2024-03-16 17:13:42,197:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:42,198:INFO:Initializing create_model()
2024-03-16 17:13:42,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:42,198:INFO:Checking exceptions
2024-03-16 17:13:42,198:INFO:Importing libraries
2024-03-16 17:13:42,199:INFO:Copying training dataset
2024-03-16 17:13:42,220:INFO:Defining folds
2024-03-16 17:13:42,221:INFO:Declaring metric variables
2024-03-16 17:13:42,232:INFO:Importing untrained model
2024-03-16 17:13:42,246:INFO:Huber Regressor Imported successfully
2024-03-16 17:13:42,269:INFO:Starting cross validation
2024-03-16 17:13:42,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:42,543:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,591:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,639:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,674:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,739:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,804:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,822:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,884:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,892:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,956:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:13:42,987:INFO:Calculating mean and std
2024-03-16 17:13:42,991:INFO:Creating metrics dataframe
2024-03-16 17:13:42,996:INFO:Uploading results into container
2024-03-16 17:13:42,997:INFO:Uploading model into container now
2024-03-16 17:13:42,998:INFO:_master_model_container: 10
2024-03-16 17:13:42,998:INFO:_display_container: 2
2024-03-16 17:13:43,001:INFO:HuberRegressor()
2024-03-16 17:13:43,002:INFO:create_model() successfully completed......................................
2024-03-16 17:13:43,332:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:43,333:INFO:Creating metrics dataframe
2024-03-16 17:13:43,358:INFO:Initializing K Neighbors Regressor
2024-03-16 17:13:43,358:INFO:Total runtime is 0.12443391084671021 minutes
2024-03-16 17:13:43,364:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:43,365:INFO:Initializing create_model()
2024-03-16 17:13:43,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:43,365:INFO:Checking exceptions
2024-03-16 17:13:43,365:INFO:Importing libraries
2024-03-16 17:13:43,366:INFO:Copying training dataset
2024-03-16 17:13:43,387:INFO:Defining folds
2024-03-16 17:13:43,388:INFO:Declaring metric variables
2024-03-16 17:13:43,394:INFO:Importing untrained model
2024-03-16 17:13:43,406:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:13:43,422:INFO:Starting cross validation
2024-03-16 17:13:43,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:44,130:INFO:Calculating mean and std
2024-03-16 17:13:44,131:INFO:Creating metrics dataframe
2024-03-16 17:13:44,136:INFO:Uploading results into container
2024-03-16 17:13:44,137:INFO:Uploading model into container now
2024-03-16 17:13:44,138:INFO:_master_model_container: 11
2024-03-16 17:13:44,138:INFO:_display_container: 2
2024-03-16 17:13:44,138:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:13:44,139:INFO:create_model() successfully completed......................................
2024-03-16 17:13:44,397:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:44,397:INFO:Creating metrics dataframe
2024-03-16 17:13:44,419:INFO:Initializing Decision Tree Regressor
2024-03-16 17:13:44,419:INFO:Total runtime is 0.14210997819900514 minutes
2024-03-16 17:13:44,426:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:44,427:INFO:Initializing create_model()
2024-03-16 17:13:44,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:44,427:INFO:Checking exceptions
2024-03-16 17:13:44,427:INFO:Importing libraries
2024-03-16 17:13:44,427:INFO:Copying training dataset
2024-03-16 17:13:44,441:INFO:Defining folds
2024-03-16 17:13:44,442:INFO:Declaring metric variables
2024-03-16 17:13:44,448:INFO:Importing untrained model
2024-03-16 17:13:44,459:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:13:44,475:INFO:Starting cross validation
2024-03-16 17:13:44,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:44,783:INFO:Calculating mean and std
2024-03-16 17:13:44,787:INFO:Creating metrics dataframe
2024-03-16 17:13:44,792:INFO:Uploading results into container
2024-03-16 17:13:44,794:INFO:Uploading model into container now
2024-03-16 17:13:44,795:INFO:_master_model_container: 12
2024-03-16 17:13:44,795:INFO:_display_container: 2
2024-03-16 17:13:44,796:INFO:DecisionTreeRegressor(random_state=5381)
2024-03-16 17:13:44,797:INFO:create_model() successfully completed......................................
2024-03-16 17:13:45,093:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:45,094:INFO:Creating metrics dataframe
2024-03-16 17:13:45,113:INFO:Initializing Random Forest Regressor
2024-03-16 17:13:45,114:INFO:Total runtime is 0.1536952058474223 minutes
2024-03-16 17:13:45,121:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:45,122:INFO:Initializing create_model()
2024-03-16 17:13:45,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:45,122:INFO:Checking exceptions
2024-03-16 17:13:45,123:INFO:Importing libraries
2024-03-16 17:13:45,123:INFO:Copying training dataset
2024-03-16 17:13:45,139:INFO:Defining folds
2024-03-16 17:13:45,139:INFO:Declaring metric variables
2024-03-16 17:13:45,150:INFO:Importing untrained model
2024-03-16 17:13:45,161:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:13:45,176:INFO:Starting cross validation
2024-03-16 17:13:45,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:50,410:INFO:Calculating mean and std
2024-03-16 17:13:50,415:INFO:Creating metrics dataframe
2024-03-16 17:13:50,424:INFO:Uploading results into container
2024-03-16 17:13:50,426:INFO:Uploading model into container now
2024-03-16 17:13:50,428:INFO:_master_model_container: 13
2024-03-16 17:13:50,428:INFO:_display_container: 2
2024-03-16 17:13:50,430:INFO:RandomForestRegressor(n_jobs=-1, random_state=5381)
2024-03-16 17:13:50,430:INFO:create_model() successfully completed......................................
2024-03-16 17:13:50,783:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:50,783:INFO:Creating metrics dataframe
2024-03-16 17:13:50,809:INFO:Initializing Extra Trees Regressor
2024-03-16 17:13:50,810:INFO:Total runtime is 0.2486394286155701 minutes
2024-03-16 17:13:50,817:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:50,818:INFO:Initializing create_model()
2024-03-16 17:13:50,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:50,818:INFO:Checking exceptions
2024-03-16 17:13:50,818:INFO:Importing libraries
2024-03-16 17:13:50,820:INFO:Copying training dataset
2024-03-16 17:13:50,839:INFO:Defining folds
2024-03-16 17:13:50,839:INFO:Declaring metric variables
2024-03-16 17:13:50,847:INFO:Importing untrained model
2024-03-16 17:13:50,858:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:13:50,877:INFO:Starting cross validation
2024-03-16 17:13:50,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:54,241:INFO:Calculating mean and std
2024-03-16 17:13:54,244:INFO:Creating metrics dataframe
2024-03-16 17:13:54,252:INFO:Uploading results into container
2024-03-16 17:13:54,254:INFO:Uploading model into container now
2024-03-16 17:13:54,256:INFO:_master_model_container: 14
2024-03-16 17:13:54,256:INFO:_display_container: 2
2024-03-16 17:13:54,258:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5381)
2024-03-16 17:13:54,258:INFO:create_model() successfully completed......................................
2024-03-16 17:13:54,567:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:54,567:INFO:Creating metrics dataframe
2024-03-16 17:13:54,596:INFO:Initializing AdaBoost Regressor
2024-03-16 17:13:54,597:INFO:Total runtime is 0.3117515285809835 minutes
2024-03-16 17:13:54,606:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:54,608:INFO:Initializing create_model()
2024-03-16 17:13:54,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:54,608:INFO:Checking exceptions
2024-03-16 17:13:54,608:INFO:Importing libraries
2024-03-16 17:13:54,608:INFO:Copying training dataset
2024-03-16 17:13:54,625:INFO:Defining folds
2024-03-16 17:13:54,626:INFO:Declaring metric variables
2024-03-16 17:13:54,633:INFO:Importing untrained model
2024-03-16 17:13:54,641:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:13:54,656:INFO:Starting cross validation
2024-03-16 17:13:54,657:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:55,737:INFO:Calculating mean and std
2024-03-16 17:13:55,739:INFO:Creating metrics dataframe
2024-03-16 17:13:55,744:INFO:Uploading results into container
2024-03-16 17:13:55,746:INFO:Uploading model into container now
2024-03-16 17:13:55,747:INFO:_master_model_container: 15
2024-03-16 17:13:55,748:INFO:_display_container: 2
2024-03-16 17:13:55,749:INFO:AdaBoostRegressor(random_state=5381)
2024-03-16 17:13:55,750:INFO:create_model() successfully completed......................................
2024-03-16 17:13:56,097:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:56,097:INFO:Creating metrics dataframe
2024-03-16 17:13:56,146:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:13:56,147:INFO:Total runtime is 0.3375731945037842 minutes
2024-03-16 17:13:56,159:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:56,160:INFO:Initializing create_model()
2024-03-16 17:13:56,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:56,160:INFO:Checking exceptions
2024-03-16 17:13:56,161:INFO:Importing libraries
2024-03-16 17:13:56,161:INFO:Copying training dataset
2024-03-16 17:13:56,191:INFO:Defining folds
2024-03-16 17:13:56,191:INFO:Declaring metric variables
2024-03-16 17:13:56,208:INFO:Importing untrained model
2024-03-16 17:13:56,226:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:13:56,253:INFO:Starting cross validation
2024-03-16 17:13:56,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:13:58,879:INFO:Calculating mean and std
2024-03-16 17:13:58,884:INFO:Creating metrics dataframe
2024-03-16 17:13:58,892:INFO:Uploading results into container
2024-03-16 17:13:58,893:INFO:Uploading model into container now
2024-03-16 17:13:58,894:INFO:_master_model_container: 16
2024-03-16 17:13:58,894:INFO:_display_container: 2
2024-03-16 17:13:58,896:INFO:GradientBoostingRegressor(random_state=5381)
2024-03-16 17:13:58,897:INFO:create_model() successfully completed......................................
2024-03-16 17:13:59,251:INFO:SubProcess create_model() end ==================================
2024-03-16 17:13:59,252:INFO:Creating metrics dataframe
2024-03-16 17:13:59,280:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:13:59,281:INFO:Total runtime is 0.38981690804163616 minutes
2024-03-16 17:13:59,292:INFO:SubProcess create_model() called ==================================
2024-03-16 17:13:59,293:INFO:Initializing create_model()
2024-03-16 17:13:59,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:13:59,294:INFO:Checking exceptions
2024-03-16 17:13:59,294:INFO:Importing libraries
2024-03-16 17:13:59,294:INFO:Copying training dataset
2024-03-16 17:13:59,316:INFO:Defining folds
2024-03-16 17:13:59,317:INFO:Declaring metric variables
2024-03-16 17:13:59,329:INFO:Importing untrained model
2024-03-16 17:13:59,342:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:13:59,363:INFO:Starting cross validation
2024-03-16 17:13:59,365:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:14:01,080:INFO:Calculating mean and std
2024-03-16 17:14:01,084:INFO:Creating metrics dataframe
2024-03-16 17:14:01,091:INFO:Uploading results into container
2024-03-16 17:14:01,093:INFO:Uploading model into container now
2024-03-16 17:14:01,095:INFO:_master_model_container: 17
2024-03-16 17:14:01,095:INFO:_display_container: 2
2024-03-16 17:14:01,097:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=5381, ...)
2024-03-16 17:14:01,098:INFO:create_model() successfully completed......................................
2024-03-16 17:14:01,407:INFO:SubProcess create_model() end ==================================
2024-03-16 17:14:01,407:INFO:Creating metrics dataframe
2024-03-16 17:14:01,443:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:14:01,443:INFO:Total runtime is 0.42585756778717043 minutes
2024-03-16 17:14:01,456:INFO:SubProcess create_model() called ==================================
2024-03-16 17:14:01,458:INFO:Initializing create_model()
2024-03-16 17:14:01,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:14:01,458:INFO:Checking exceptions
2024-03-16 17:14:01,458:INFO:Importing libraries
2024-03-16 17:14:01,458:INFO:Copying training dataset
2024-03-16 17:14:01,480:INFO:Defining folds
2024-03-16 17:14:01,482:INFO:Declaring metric variables
2024-03-16 17:14:01,495:INFO:Importing untrained model
2024-03-16 17:14:01,508:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:14:01,534:INFO:Starting cross validation
2024-03-16 17:14:01,536:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:14:09,889:INFO:Calculating mean and std
2024-03-16 17:14:09,892:INFO:Creating metrics dataframe
2024-03-16 17:14:09,899:INFO:Uploading results into container
2024-03-16 17:14:09,902:INFO:Uploading model into container now
2024-03-16 17:14:09,904:INFO:_master_model_container: 18
2024-03-16 17:14:09,904:INFO:_display_container: 2
2024-03-16 17:14:09,906:INFO:LGBMRegressor(n_jobs=-1, random_state=5381)
2024-03-16 17:14:09,907:INFO:create_model() successfully completed......................................
2024-03-16 17:14:10,349:INFO:SubProcess create_model() end ==================================
2024-03-16 17:14:10,350:INFO:Creating metrics dataframe
2024-03-16 17:14:10,382:INFO:Initializing Dummy Regressor
2024-03-16 17:14:10,382:INFO:Total runtime is 0.574837040901184 minutes
2024-03-16 17:14:10,393:INFO:SubProcess create_model() called ==================================
2024-03-16 17:14:10,394:INFO:Initializing create_model()
2024-03-16 17:14:10,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A7D7310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:14:10,394:INFO:Checking exceptions
2024-03-16 17:14:10,394:INFO:Importing libraries
2024-03-16 17:14:10,394:INFO:Copying training dataset
2024-03-16 17:14:10,411:INFO:Defining folds
2024-03-16 17:14:10,412:INFO:Declaring metric variables
2024-03-16 17:14:10,423:INFO:Importing untrained model
2024-03-16 17:14:10,436:INFO:Dummy Regressor Imported successfully
2024-03-16 17:14:10,457:INFO:Starting cross validation
2024-03-16 17:14:10,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:14:10,737:INFO:Calculating mean and std
2024-03-16 17:14:10,740:INFO:Creating metrics dataframe
2024-03-16 17:14:10,745:INFO:Uploading results into container
2024-03-16 17:14:10,746:INFO:Uploading model into container now
2024-03-16 17:14:10,747:INFO:_master_model_container: 19
2024-03-16 17:14:10,747:INFO:_display_container: 2
2024-03-16 17:14:10,748:INFO:DummyRegressor()
2024-03-16 17:14:10,749:INFO:create_model() successfully completed......................................
2024-03-16 17:14:11,082:INFO:SubProcess create_model() end ==================================
2024-03-16 17:14:11,083:INFO:Creating metrics dataframe
2024-03-16 17:14:11,131:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:14:11,165:INFO:Initializing create_model()
2024-03-16 17:14:11,167:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:14:11,168:INFO:Checking exceptions
2024-03-16 17:14:11,175:INFO:Importing libraries
2024-03-16 17:14:11,176:INFO:Copying training dataset
2024-03-16 17:14:11,201:INFO:Defining folds
2024-03-16 17:14:11,201:INFO:Declaring metric variables
2024-03-16 17:14:11,202:INFO:Importing untrained model
2024-03-16 17:14:11,203:INFO:Declaring custom model
2024-03-16 17:14:11,204:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:14:11,208:INFO:Cross validation set to False
2024-03-16 17:14:11,208:INFO:Fitting Model
2024-03-16 17:14:11,257:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:14:11,258:INFO:create_model() successfully completed......................................
2024-03-16 17:14:11,693:INFO:Creating Dashboard logs
2024-03-16 17:14:11,705:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:14:11,830:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:14:11,997:INFO:Initializing predict_model()
2024-03-16 17:14:11,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B85483A010>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B858934680>)
2024-03-16 17:14:11,998:INFO:Checking exceptions
2024-03-16 17:14:11,998:INFO:Preloading libraries
2024-03-16 17:14:12,169:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:14:12,805:INFO:Creating Dashboard logs
2024-03-16 17:14:12,812:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:14:12,919:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 5381, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:14:13,525:INFO:Creating Dashboard logs
2024-03-16 17:14:13,536:INFO:Model: Bayesian Ridge
2024-03-16 17:14:13,647:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:14:14,274:INFO:Creating Dashboard logs
2024-03-16 17:14:14,280:INFO:Model: Elastic Net
2024-03-16 17:14:14,366:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 5381, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:14:14,853:INFO:Creating Dashboard logs
2024-03-16 17:14:14,859:INFO:Model: Ridge Regression
2024-03-16 17:14:14,949:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 5381, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:14:15,374:INFO:Creating Dashboard logs
2024-03-16 17:14:15,379:INFO:Model: Lasso Regression
2024-03-16 17:14:15,454:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 5381, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:14:15,879:INFO:Creating Dashboard logs
2024-03-16 17:14:15,889:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:14:15,976:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 5381, 'verbose': False}
2024-03-16 17:14:16,553:INFO:Creating Dashboard logs
2024-03-16 17:14:16,559:INFO:Model: Linear Regression
2024-03-16 17:14:16,629:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:14:17,074:INFO:Creating Dashboard logs
2024-03-16 17:14:17,082:INFO:Model: Least Angle Regression
2024-03-16 17:14:17,165:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 5381, 'verbose': False}
2024-03-16 17:14:17,577:INFO:Creating Dashboard logs
2024-03-16 17:14:17,582:INFO:Model: Huber Regressor
2024-03-16 17:14:17,646:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:14:18,052:INFO:Creating Dashboard logs
2024-03-16 17:14:18,057:INFO:Model: Extra Trees Regressor
2024-03-16 17:14:18,123:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 5381, 'verbose': 0, 'warm_start': False}
2024-03-16 17:14:18,513:INFO:Creating Dashboard logs
2024-03-16 17:14:18,519:INFO:Model: Random Forest Regressor
2024-03-16 17:14:18,595:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 5381, 'verbose': 0, 'warm_start': False}
2024-03-16 17:14:19,017:INFO:Creating Dashboard logs
2024-03-16 17:14:19,023:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:14:19,084:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 5381, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:14:19,661:INFO:Creating Dashboard logs
2024-03-16 17:14:19,671:INFO:Model: K Neighbors Regressor
2024-03-16 17:14:19,789:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:14:20,293:INFO:Creating Dashboard logs
2024-03-16 17:14:20,300:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:14:20,378:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 5381, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:14:20,857:INFO:Creating Dashboard logs
2024-03-16 17:14:20,864:INFO:Model: AdaBoost Regressor
2024-03-16 17:14:20,946:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 5381}
2024-03-16 17:14:21,441:INFO:Creating Dashboard logs
2024-03-16 17:14:21,450:INFO:Model: Decision Tree Regressor
2024-03-16 17:14:21,540:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 5381, 'splitter': 'best'}
2024-03-16 17:14:22,021:INFO:Creating Dashboard logs
2024-03-16 17:14:22,026:INFO:Model: Dummy Regressor
2024-03-16 17:14:22,117:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:14:22,578:INFO:Creating Dashboard logs
2024-03-16 17:14:22,587:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:14:22,662:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 5381, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:14:23,138:INFO:_master_model_container: 19
2024-03-16 17:14:23,138:INFO:_display_container: 2
2024-03-16 17:14:23,139:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:14:23,139:INFO:compare_models() successfully completed......................................
2024-03-16 17:23:15,338:INFO:PyCaret RegressionExperiment
2024-03-16 17:23:15,338:INFO:Logging name: reg-default-name
2024-03-16 17:23:15,338:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:23:15,338:INFO:version 3.3.0
2024-03-16 17:23:15,338:INFO:Initializing setup()
2024-03-16 17:23:15,338:INFO:self.USI: ab6e
2024-03-16 17:23:15,338:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:23:15,338:INFO:Checking environment
2024-03-16 17:23:15,339:INFO:python_version: 3.11.5
2024-03-16 17:23:15,339:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:23:15,339:INFO:machine: AMD64
2024-03-16 17:23:15,339:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:23:15,339:INFO:Memory: svmem(total=34129678336, available=12647223296, percent=62.9, used=21482455040, free=12647223296)
2024-03-16 17:23:15,339:INFO:Physical Core: 6
2024-03-16 17:23:15,340:INFO:Logical Core: 12
2024-03-16 17:23:15,340:INFO:Checking libraries
2024-03-16 17:23:15,340:INFO:System:
2024-03-16 17:23:15,340:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:23:15,340:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:23:15,340:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:23:15,340:INFO:PyCaret required dependencies:
2024-03-16 17:23:15,340:INFO:                 pip: 24.0
2024-03-16 17:23:15,340:INFO:          setuptools: 68.0.0
2024-03-16 17:23:15,340:INFO:             pycaret: 3.3.0
2024-03-16 17:23:15,340:INFO:             IPython: 8.15.0
2024-03-16 17:23:15,340:INFO:          ipywidgets: 8.0.4
2024-03-16 17:23:15,340:INFO:                tqdm: 4.65.0
2024-03-16 17:23:15,341:INFO:               numpy: 1.24.3
2024-03-16 17:23:15,341:INFO:              pandas: 2.0.3
2024-03-16 17:23:15,341:INFO:              jinja2: 3.1.2
2024-03-16 17:23:15,341:INFO:               scipy: 1.11.1
2024-03-16 17:23:15,341:INFO:              joblib: 1.2.0
2024-03-16 17:23:15,341:INFO:             sklearn: 1.3.0
2024-03-16 17:23:15,341:INFO:                pyod: 1.1.3
2024-03-16 17:23:15,341:INFO:            imblearn: 0.10.1
2024-03-16 17:23:15,341:INFO:   category_encoders: 2.6.3
2024-03-16 17:23:15,341:INFO:            lightgbm: 4.3.0
2024-03-16 17:23:15,341:INFO:               numba: 0.57.1
2024-03-16 17:23:15,341:INFO:            requests: 2.31.0
2024-03-16 17:23:15,341:INFO:          matplotlib: 3.7.2
2024-03-16 17:23:15,341:INFO:          scikitplot: 0.3.7
2024-03-16 17:23:15,341:INFO:         yellowbrick: 1.5
2024-03-16 17:23:15,341:INFO:              plotly: 5.9.0
2024-03-16 17:23:15,341:INFO:    plotly-resampler: Not installed
2024-03-16 17:23:15,342:INFO:             kaleido: 0.2.1
2024-03-16 17:23:15,342:INFO:           schemdraw: 0.15
2024-03-16 17:23:15,342:INFO:         statsmodels: 0.14.0
2024-03-16 17:23:15,342:INFO:              sktime: 0.27.0
2024-03-16 17:23:15,342:INFO:               tbats: 1.1.3
2024-03-16 17:23:15,342:INFO:            pmdarima: 2.0.4
2024-03-16 17:23:15,342:INFO:              psutil: 5.9.0
2024-03-16 17:23:15,342:INFO:          markupsafe: 2.1.1
2024-03-16 17:23:15,342:INFO:             pickle5: Not installed
2024-03-16 17:23:15,342:INFO:         cloudpickle: 2.2.1
2024-03-16 17:23:15,342:INFO:         deprecation: 2.1.0
2024-03-16 17:23:15,342:INFO:              xxhash: 2.0.2
2024-03-16 17:23:15,342:INFO:           wurlitzer: Not installed
2024-03-16 17:23:15,342:INFO:PyCaret optional dependencies:
2024-03-16 17:23:15,342:INFO:                shap: Not installed
2024-03-16 17:23:15,343:INFO:           interpret: Not installed
2024-03-16 17:23:15,343:INFO:                umap: Not installed
2024-03-16 17:23:15,343:INFO:     ydata_profiling: Not installed
2024-03-16 17:23:15,343:INFO:  explainerdashboard: Not installed
2024-03-16 17:23:15,343:INFO:             autoviz: Not installed
2024-03-16 17:23:15,343:INFO:           fairlearn: Not installed
2024-03-16 17:23:15,343:INFO:          deepchecks: Not installed
2024-03-16 17:23:15,343:INFO:             xgboost: 2.0.3
2024-03-16 17:23:15,343:INFO:            catboost: Not installed
2024-03-16 17:23:15,343:INFO:              kmodes: Not installed
2024-03-16 17:23:15,343:INFO:             mlxtend: Not installed
2024-03-16 17:23:15,343:INFO:       statsforecast: Not installed
2024-03-16 17:23:15,343:INFO:        tune_sklearn: Not installed
2024-03-16 17:23:15,343:INFO:                 ray: Not installed
2024-03-16 17:23:15,343:INFO:            hyperopt: Not installed
2024-03-16 17:23:15,343:INFO:              optuna: Not installed
2024-03-16 17:23:15,343:INFO:               skopt: Not installed
2024-03-16 17:23:15,343:INFO:              mlflow: 2.11.1
2024-03-16 17:23:15,344:INFO:              gradio: Not installed
2024-03-16 17:23:15,344:INFO:             fastapi: Not installed
2024-03-16 17:23:15,344:INFO:             uvicorn: Not installed
2024-03-16 17:23:15,344:INFO:              m2cgen: Not installed
2024-03-16 17:23:15,344:INFO:           evidently: Not installed
2024-03-16 17:23:15,344:INFO:               fugue: Not installed
2024-03-16 17:23:15,344:INFO:           streamlit: Not installed
2024-03-16 17:23:15,344:INFO:             prophet: Not installed
2024-03-16 17:23:15,344:INFO:None
2024-03-16 17:23:15,344:INFO:Set up data.
2024-03-16 17:23:15,354:INFO:Set up folding strategy.
2024-03-16 17:23:15,355:INFO:Set up train/test split.
2024-03-16 17:23:15,363:INFO:Set up index.
2024-03-16 17:23:15,363:INFO:Assigning column types.
2024-03-16 17:23:15,375:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:23:15,375:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,381:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,389:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,532:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:15,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:15,535:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,541:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,551:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,689:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:15,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:15,693:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:23:15,698:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,778:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,837:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:15,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:15,846:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:15,950:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,035:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:16,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:16,043:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:23:16,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,320:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:16,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:16,349:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,501:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,617:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:16,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:16,624:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:23:16,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:16,837:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:16,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:17,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:17,186:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:23:17,187:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:17,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:17,193:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:23:17,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:17,605:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:17,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:17,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:23:18,047:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:18,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:18,054:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:23:18,550:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:18,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:18,985:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:18,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:19,001:INFO:Preparing preprocessing pipeline...
2024-03-16 17:23:19,002:INFO:Set up simple imputation.
2024-03-16 17:23:19,005:INFO:Set up column name cleaning.
2024-03-16 17:23:19,107:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:23:19,122:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:23:19,123:INFO:Creating final display dataframe.
2024-03-16 17:23:19,486:INFO:Setup _display_container:                     Description             Value
0                    Session id              8663
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 28)
4        Transformed data shape        (1859, 28)
5   Transformed train set shape        (1301, 28)
6    Transformed test set shape         (558, 28)
7              Numeric features                27
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              ab6e
2024-03-16 17:23:19,827:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:19,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:20,142:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:23:20,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:23:20,151:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:23:20,152:INFO:Logging experiment in loggers
2024-03-16 17:23:20,305:INFO:SubProcess save_model() called ==================================
2024-03-16 17:23:20,339:INFO:Initializing save_model()
2024-03-16 17:23:20,339:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp3pz6pp9l\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:23:20,339:INFO:Adding model into prep_pipe
2024-03-16 17:23:20,339:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:23:20,344:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp3pz6pp9l\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:23:20,357:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:23:20,357:INFO:save_model() successfully completed......................................
2024-03-16 17:23:20,755:INFO:SubProcess save_model() end ==================================
2024-03-16 17:23:20,775:INFO:setup() successfully completed in 4.82s...............
2024-03-16 17:23:20,776:INFO:Initializing compare_models()
2024-03-16 17:23:20,776:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:23:20,776:INFO:Checking exceptions
2024-03-16 17:23:20,784:INFO:Preparing display monitor
2024-03-16 17:23:20,848:INFO:Initializing Linear Regression
2024-03-16 17:23:20,848:INFO:Total runtime is 1.6649564107259113e-05 minutes
2024-03-16 17:23:20,858:INFO:SubProcess create_model() called ==================================
2024-03-16 17:23:20,859:INFO:Initializing create_model()
2024-03-16 17:23:20,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:23:20,859:INFO:Checking exceptions
2024-03-16 17:23:20,860:INFO:Importing libraries
2024-03-16 17:23:20,860:INFO:Copying training dataset
2024-03-16 17:23:20,883:INFO:Defining folds
2024-03-16 17:23:20,884:INFO:Declaring metric variables
2024-03-16 17:23:20,895:INFO:Importing untrained model
2024-03-16 17:23:20,905:INFO:Linear Regression Imported successfully
2024-03-16 17:23:20,926:INFO:Starting cross validation
2024-03-16 17:23:20,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:23:48,102:INFO:Calculating mean and std
2024-03-16 17:23:48,106:INFO:Creating metrics dataframe
2024-03-16 17:23:48,113:INFO:Uploading results into container
2024-03-16 17:23:48,115:INFO:Uploading model into container now
2024-03-16 17:23:48,117:INFO:_master_model_container: 1
2024-03-16 17:23:48,117:INFO:_display_container: 2
2024-03-16 17:23:48,119:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:23:48,120:INFO:create_model() successfully completed......................................
2024-03-16 17:23:48,749:INFO:SubProcess create_model() end ==================================
2024-03-16 17:23:48,749:INFO:Creating metrics dataframe
2024-03-16 17:23:48,781:INFO:Initializing Lasso Regression
2024-03-16 17:23:48,781:INFO:Total runtime is 0.4655633489290873 minutes
2024-03-16 17:23:48,798:INFO:SubProcess create_model() called ==================================
2024-03-16 17:23:48,798:INFO:Initializing create_model()
2024-03-16 17:23:48,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:23:48,798:INFO:Checking exceptions
2024-03-16 17:23:48,798:INFO:Importing libraries
2024-03-16 17:23:48,798:INFO:Copying training dataset
2024-03-16 17:23:48,875:INFO:Defining folds
2024-03-16 17:23:48,875:INFO:Declaring metric variables
2024-03-16 17:23:48,885:INFO:Importing untrained model
2024-03-16 17:23:48,917:INFO:Lasso Regression Imported successfully
2024-03-16 17:23:48,987:INFO:Starting cross validation
2024-03-16 17:23:48,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:01,996:INFO:Calculating mean and std
2024-03-16 17:24:01,998:INFO:Creating metrics dataframe
2024-03-16 17:24:02,002:INFO:Uploading results into container
2024-03-16 17:24:02,003:INFO:Uploading model into container now
2024-03-16 17:24:02,004:INFO:_master_model_container: 2
2024-03-16 17:24:02,004:INFO:_display_container: 2
2024-03-16 17:24:02,004:INFO:Lasso(random_state=8663)
2024-03-16 17:24:02,004:INFO:create_model() successfully completed......................................
2024-03-16 17:24:02,286:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:02,286:INFO:Creating metrics dataframe
2024-03-16 17:24:02,286:INFO:Initializing Ridge Regression
2024-03-16 17:24:02,286:INFO:Total runtime is 0.6906479517618815 minutes
2024-03-16 17:24:02,298:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:02,298:INFO:Initializing create_model()
2024-03-16 17:24:02,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:02,298:INFO:Checking exceptions
2024-03-16 17:24:02,298:INFO:Importing libraries
2024-03-16 17:24:02,298:INFO:Copying training dataset
2024-03-16 17:24:02,314:INFO:Defining folds
2024-03-16 17:24:02,315:INFO:Declaring metric variables
2024-03-16 17:24:02,320:INFO:Importing untrained model
2024-03-16 17:24:02,324:INFO:Ridge Regression Imported successfully
2024-03-16 17:24:02,335:INFO:Starting cross validation
2024-03-16 17:24:02,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:02,369:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.20671e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,384:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.92044e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,403:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.33105e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,415:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.94189e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,420:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.11551e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,434:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.14625e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,446:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.87432e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,451:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.3264e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,469:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.09899e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,481:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.36224e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:24:02,497:INFO:Calculating mean and std
2024-03-16 17:24:02,500:INFO:Creating metrics dataframe
2024-03-16 17:24:02,503:INFO:Uploading results into container
2024-03-16 17:24:02,504:INFO:Uploading model into container now
2024-03-16 17:24:02,504:INFO:_master_model_container: 3
2024-03-16 17:24:02,504:INFO:_display_container: 2
2024-03-16 17:24:02,505:INFO:Ridge(random_state=8663)
2024-03-16 17:24:02,505:INFO:create_model() successfully completed......................................
2024-03-16 17:24:02,746:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:02,746:INFO:Creating metrics dataframe
2024-03-16 17:24:02,765:INFO:Initializing Elastic Net
2024-03-16 17:24:02,765:INFO:Total runtime is 0.6986314574877421 minutes
2024-03-16 17:24:02,769:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:02,769:INFO:Initializing create_model()
2024-03-16 17:24:02,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:02,769:INFO:Checking exceptions
2024-03-16 17:24:02,769:INFO:Importing libraries
2024-03-16 17:24:02,769:INFO:Copying training dataset
2024-03-16 17:24:02,787:INFO:Defining folds
2024-03-16 17:24:02,787:INFO:Declaring metric variables
2024-03-16 17:24:02,792:INFO:Importing untrained model
2024-03-16 17:24:02,799:INFO:Elastic Net Imported successfully
2024-03-16 17:24:02,806:INFO:Starting cross validation
2024-03-16 17:24:02,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:02,994:INFO:Calculating mean and std
2024-03-16 17:24:02,997:INFO:Creating metrics dataframe
2024-03-16 17:24:03,001:INFO:Uploading results into container
2024-03-16 17:24:03,002:INFO:Uploading model into container now
2024-03-16 17:24:03,003:INFO:_master_model_container: 4
2024-03-16 17:24:03,003:INFO:_display_container: 2
2024-03-16 17:24:03,003:INFO:ElasticNet(random_state=8663)
2024-03-16 17:24:03,003:INFO:create_model() successfully completed......................................
2024-03-16 17:24:03,281:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:03,281:INFO:Creating metrics dataframe
2024-03-16 17:24:03,291:INFO:Initializing Least Angle Regression
2024-03-16 17:24:03,291:INFO:Total runtime is 0.7073948621749878 minutes
2024-03-16 17:24:03,295:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:03,296:INFO:Initializing create_model()
2024-03-16 17:24:03,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:03,297:INFO:Checking exceptions
2024-03-16 17:24:03,297:INFO:Importing libraries
2024-03-16 17:24:03,297:INFO:Copying training dataset
2024-03-16 17:24:03,310:INFO:Defining folds
2024-03-16 17:24:03,310:INFO:Declaring metric variables
2024-03-16 17:24:03,315:INFO:Importing untrained model
2024-03-16 17:24:03,321:INFO:Least Angle Regression Imported successfully
2024-03-16 17:24:03,338:INFO:Starting cross validation
2024-03-16 17:24:03,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:03,548:INFO:Calculating mean and std
2024-03-16 17:24:03,554:INFO:Creating metrics dataframe
2024-03-16 17:24:03,554:INFO:Uploading results into container
2024-03-16 17:24:03,554:INFO:Uploading model into container now
2024-03-16 17:24:03,554:INFO:_master_model_container: 5
2024-03-16 17:24:03,554:INFO:_display_container: 2
2024-03-16 17:24:03,554:INFO:Lars(random_state=8663)
2024-03-16 17:24:03,554:INFO:create_model() successfully completed......................................
2024-03-16 17:24:03,861:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:03,861:INFO:Creating metrics dataframe
2024-03-16 17:24:03,867:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:24:03,867:INFO:Total runtime is 0.7169914762179057 minutes
2024-03-16 17:24:03,867:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:03,867:INFO:Initializing create_model()
2024-03-16 17:24:03,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:03,867:INFO:Checking exceptions
2024-03-16 17:24:03,867:INFO:Importing libraries
2024-03-16 17:24:03,867:INFO:Copying training dataset
2024-03-16 17:24:03,900:INFO:Defining folds
2024-03-16 17:24:03,901:INFO:Declaring metric variables
2024-03-16 17:24:03,905:INFO:Importing untrained model
2024-03-16 17:24:03,918:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:24:03,936:INFO:Starting cross validation
2024-03-16 17:24:03,939:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:04,179:INFO:Calculating mean and std
2024-03-16 17:24:04,181:INFO:Creating metrics dataframe
2024-03-16 17:24:04,185:INFO:Uploading results into container
2024-03-16 17:24:04,186:INFO:Uploading model into container now
2024-03-16 17:24:04,187:INFO:_master_model_container: 6
2024-03-16 17:24:04,187:INFO:_display_container: 2
2024-03-16 17:24:04,188:INFO:LassoLars(random_state=8663)
2024-03-16 17:24:04,188:INFO:create_model() successfully completed......................................
2024-03-16 17:24:04,465:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:04,465:INFO:Creating metrics dataframe
2024-03-16 17:24:04,488:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:24:04,488:INFO:Total runtime is 0.727345605691274 minutes
2024-03-16 17:24:04,492:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:04,492:INFO:Initializing create_model()
2024-03-16 17:24:04,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:04,493:INFO:Checking exceptions
2024-03-16 17:24:04,493:INFO:Importing libraries
2024-03-16 17:24:04,493:INFO:Copying training dataset
2024-03-16 17:24:04,500:INFO:Defining folds
2024-03-16 17:24:04,500:INFO:Declaring metric variables
2024-03-16 17:24:04,514:INFO:Importing untrained model
2024-03-16 17:24:04,520:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:24:04,530:INFO:Starting cross validation
2024-03-16 17:24:04,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:04,674:INFO:Calculating mean and std
2024-03-16 17:24:04,676:INFO:Creating metrics dataframe
2024-03-16 17:24:04,678:INFO:Uploading results into container
2024-03-16 17:24:04,679:INFO:Uploading model into container now
2024-03-16 17:24:04,679:INFO:_master_model_container: 7
2024-03-16 17:24:04,680:INFO:_display_container: 2
2024-03-16 17:24:04,680:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:24:04,680:INFO:create_model() successfully completed......................................
2024-03-16 17:24:04,929:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:04,929:INFO:Creating metrics dataframe
2024-03-16 17:24:04,941:INFO:Initializing Bayesian Ridge
2024-03-16 17:24:04,941:INFO:Total runtime is 0.7348929524421692 minutes
2024-03-16 17:24:04,946:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:04,946:INFO:Initializing create_model()
2024-03-16 17:24:04,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:04,947:INFO:Checking exceptions
2024-03-16 17:24:04,947:INFO:Importing libraries
2024-03-16 17:24:04,947:INFO:Copying training dataset
2024-03-16 17:24:04,959:INFO:Defining folds
2024-03-16 17:24:04,959:INFO:Declaring metric variables
2024-03-16 17:24:04,966:INFO:Importing untrained model
2024-03-16 17:24:04,971:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:24:04,980:INFO:Starting cross validation
2024-03-16 17:24:04,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:05,118:INFO:Calculating mean and std
2024-03-16 17:24:05,118:INFO:Creating metrics dataframe
2024-03-16 17:24:05,118:INFO:Uploading results into container
2024-03-16 17:24:05,118:INFO:Uploading model into container now
2024-03-16 17:24:05,118:INFO:_master_model_container: 8
2024-03-16 17:24:05,118:INFO:_display_container: 2
2024-03-16 17:24:05,118:INFO:BayesianRidge()
2024-03-16 17:24:05,118:INFO:create_model() successfully completed......................................
2024-03-16 17:24:05,366:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:05,369:INFO:Creating metrics dataframe
2024-03-16 17:24:05,370:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:24:05,370:INFO:Total runtime is 0.7420405944188436 minutes
2024-03-16 17:24:05,381:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:05,381:INFO:Initializing create_model()
2024-03-16 17:24:05,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:05,381:INFO:Checking exceptions
2024-03-16 17:24:05,381:INFO:Importing libraries
2024-03-16 17:24:05,381:INFO:Copying training dataset
2024-03-16 17:24:05,381:INFO:Defining folds
2024-03-16 17:24:05,381:INFO:Declaring metric variables
2024-03-16 17:24:05,397:INFO:Importing untrained model
2024-03-16 17:24:05,397:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:24:05,412:INFO:Starting cross validation
2024-03-16 17:24:05,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:05,535:INFO:Calculating mean and std
2024-03-16 17:24:05,535:INFO:Creating metrics dataframe
2024-03-16 17:24:05,535:INFO:Uploading results into container
2024-03-16 17:24:05,535:INFO:Uploading model into container now
2024-03-16 17:24:05,546:INFO:_master_model_container: 9
2024-03-16 17:24:05,546:INFO:_display_container: 2
2024-03-16 17:24:05,547:INFO:PassiveAggressiveRegressor(random_state=8663)
2024-03-16 17:24:05,547:INFO:create_model() successfully completed......................................
2024-03-16 17:24:05,765:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:05,765:INFO:Creating metrics dataframe
2024-03-16 17:24:05,773:INFO:Initializing Huber Regressor
2024-03-16 17:24:05,773:INFO:Total runtime is 0.7487635294596354 minutes
2024-03-16 17:24:05,780:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:05,780:INFO:Initializing create_model()
2024-03-16 17:24:05,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:05,780:INFO:Checking exceptions
2024-03-16 17:24:05,780:INFO:Importing libraries
2024-03-16 17:24:05,780:INFO:Copying training dataset
2024-03-16 17:24:05,780:INFO:Defining folds
2024-03-16 17:24:05,780:INFO:Declaring metric variables
2024-03-16 17:24:05,797:INFO:Importing untrained model
2024-03-16 17:24:05,797:INFO:Huber Regressor Imported successfully
2024-03-16 17:24:05,797:INFO:Starting cross validation
2024-03-16 17:24:05,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:05,990:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,013:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,013:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,044:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,044:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,065:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,079:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,105:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,121:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,121:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:24:06,136:INFO:Calculating mean and std
2024-03-16 17:24:06,136:INFO:Creating metrics dataframe
2024-03-16 17:24:06,136:INFO:Uploading results into container
2024-03-16 17:24:06,136:INFO:Uploading model into container now
2024-03-16 17:24:06,152:INFO:_master_model_container: 10
2024-03-16 17:24:06,152:INFO:_display_container: 2
2024-03-16 17:24:06,152:INFO:HuberRegressor()
2024-03-16 17:24:06,152:INFO:create_model() successfully completed......................................
2024-03-16 17:24:06,402:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:06,402:INFO:Creating metrics dataframe
2024-03-16 17:24:06,418:INFO:Initializing K Neighbors Regressor
2024-03-16 17:24:06,418:INFO:Total runtime is 0.7595038771629333 minutes
2024-03-16 17:24:06,418:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:06,418:INFO:Initializing create_model()
2024-03-16 17:24:06,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:06,418:INFO:Checking exceptions
2024-03-16 17:24:06,418:INFO:Importing libraries
2024-03-16 17:24:06,423:INFO:Copying training dataset
2024-03-16 17:24:06,438:INFO:Defining folds
2024-03-16 17:24:06,438:INFO:Declaring metric variables
2024-03-16 17:24:06,443:INFO:Importing untrained model
2024-03-16 17:24:06,450:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:24:06,464:INFO:Starting cross validation
2024-03-16 17:24:06,466:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:06,997:INFO:Calculating mean and std
2024-03-16 17:24:06,999:INFO:Creating metrics dataframe
2024-03-16 17:24:07,002:INFO:Uploading results into container
2024-03-16 17:24:07,002:INFO:Uploading model into container now
2024-03-16 17:24:07,002:INFO:_master_model_container: 11
2024-03-16 17:24:07,002:INFO:_display_container: 2
2024-03-16 17:24:07,002:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:24:07,002:INFO:create_model() successfully completed......................................
2024-03-16 17:24:07,251:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:07,251:INFO:Creating metrics dataframe
2024-03-16 17:24:07,266:INFO:Initializing Decision Tree Regressor
2024-03-16 17:24:07,266:INFO:Total runtime is 0.7736476937929789 minutes
2024-03-16 17:24:07,266:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:07,266:INFO:Initializing create_model()
2024-03-16 17:24:07,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:07,266:INFO:Checking exceptions
2024-03-16 17:24:07,266:INFO:Importing libraries
2024-03-16 17:24:07,266:INFO:Copying training dataset
2024-03-16 17:24:07,279:INFO:Defining folds
2024-03-16 17:24:07,279:INFO:Declaring metric variables
2024-03-16 17:24:07,279:INFO:Importing untrained model
2024-03-16 17:24:07,296:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:24:07,296:INFO:Starting cross validation
2024-03-16 17:24:07,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:07,468:INFO:Calculating mean and std
2024-03-16 17:24:07,484:INFO:Creating metrics dataframe
2024-03-16 17:24:07,484:INFO:Uploading results into container
2024-03-16 17:24:07,484:INFO:Uploading model into container now
2024-03-16 17:24:07,484:INFO:_master_model_container: 12
2024-03-16 17:24:07,484:INFO:_display_container: 2
2024-03-16 17:24:07,484:INFO:DecisionTreeRegressor(random_state=8663)
2024-03-16 17:24:07,484:INFO:create_model() successfully completed......................................
2024-03-16 17:24:07,715:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:07,715:INFO:Creating metrics dataframe
2024-03-16 17:24:07,730:INFO:Initializing Random Forest Regressor
2024-03-16 17:24:07,730:INFO:Total runtime is 0.7813705166180929 minutes
2024-03-16 17:24:07,746:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:07,746:INFO:Initializing create_model()
2024-03-16 17:24:07,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:07,746:INFO:Checking exceptions
2024-03-16 17:24:07,746:INFO:Importing libraries
2024-03-16 17:24:07,746:INFO:Copying training dataset
2024-03-16 17:24:07,746:INFO:Defining folds
2024-03-16 17:24:07,746:INFO:Declaring metric variables
2024-03-16 17:24:07,761:INFO:Importing untrained model
2024-03-16 17:24:07,768:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:24:07,769:INFO:Starting cross validation
2024-03-16 17:24:07,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:12,407:INFO:Calculating mean and std
2024-03-16 17:24:12,410:INFO:Creating metrics dataframe
2024-03-16 17:24:12,418:INFO:Uploading results into container
2024-03-16 17:24:12,421:INFO:Uploading model into container now
2024-03-16 17:24:12,422:INFO:_master_model_container: 13
2024-03-16 17:24:12,422:INFO:_display_container: 2
2024-03-16 17:24:12,422:INFO:RandomForestRegressor(n_jobs=-1, random_state=8663)
2024-03-16 17:24:12,423:INFO:create_model() successfully completed......................................
2024-03-16 17:24:12,849:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:12,849:INFO:Creating metrics dataframe
2024-03-16 17:24:12,880:INFO:Initializing Extra Trees Regressor
2024-03-16 17:24:12,881:INFO:Total runtime is 0.8672308166821798 minutes
2024-03-16 17:24:12,892:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:12,893:INFO:Initializing create_model()
2024-03-16 17:24:12,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:12,893:INFO:Checking exceptions
2024-03-16 17:24:12,893:INFO:Importing libraries
2024-03-16 17:24:12,894:INFO:Copying training dataset
2024-03-16 17:24:12,927:INFO:Defining folds
2024-03-16 17:24:12,927:INFO:Declaring metric variables
2024-03-16 17:24:12,938:INFO:Importing untrained model
2024-03-16 17:24:12,952:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:24:12,972:INFO:Starting cross validation
2024-03-16 17:24:12,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:16,113:INFO:Calculating mean and std
2024-03-16 17:24:16,118:INFO:Creating metrics dataframe
2024-03-16 17:24:16,124:INFO:Uploading results into container
2024-03-16 17:24:16,126:INFO:Uploading model into container now
2024-03-16 17:24:16,127:INFO:_master_model_container: 14
2024-03-16 17:24:16,129:INFO:_display_container: 2
2024-03-16 17:24:16,131:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8663)
2024-03-16 17:24:16,131:INFO:create_model() successfully completed......................................
2024-03-16 17:24:16,618:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:16,618:INFO:Creating metrics dataframe
2024-03-16 17:24:16,667:INFO:Initializing AdaBoost Regressor
2024-03-16 17:24:16,668:INFO:Total runtime is 0.930328933397929 minutes
2024-03-16 17:24:16,680:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:16,681:INFO:Initializing create_model()
2024-03-16 17:24:16,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:16,681:INFO:Checking exceptions
2024-03-16 17:24:16,682:INFO:Importing libraries
2024-03-16 17:24:16,682:INFO:Copying training dataset
2024-03-16 17:24:16,697:INFO:Defining folds
2024-03-16 17:24:16,697:INFO:Declaring metric variables
2024-03-16 17:24:16,721:INFO:Importing untrained model
2024-03-16 17:24:16,731:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:24:16,750:INFO:Starting cross validation
2024-03-16 17:24:16,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:17,840:INFO:Calculating mean and std
2024-03-16 17:24:17,843:INFO:Creating metrics dataframe
2024-03-16 17:24:17,851:INFO:Uploading results into container
2024-03-16 17:24:17,853:INFO:Uploading model into container now
2024-03-16 17:24:17,855:INFO:_master_model_container: 15
2024-03-16 17:24:17,856:INFO:_display_container: 2
2024-03-16 17:24:17,857:INFO:AdaBoostRegressor(random_state=8663)
2024-03-16 17:24:17,858:INFO:create_model() successfully completed......................................
2024-03-16 17:24:18,329:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:18,329:INFO:Creating metrics dataframe
2024-03-16 17:24:18,371:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:24:18,371:INFO:Total runtime is 0.9587172468503318 minutes
2024-03-16 17:24:18,386:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:18,386:INFO:Initializing create_model()
2024-03-16 17:24:18,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:18,386:INFO:Checking exceptions
2024-03-16 17:24:18,386:INFO:Importing libraries
2024-03-16 17:24:18,386:INFO:Copying training dataset
2024-03-16 17:24:18,433:INFO:Defining folds
2024-03-16 17:24:18,434:INFO:Declaring metric variables
2024-03-16 17:24:18,448:INFO:Importing untrained model
2024-03-16 17:24:18,463:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:24:18,482:INFO:Starting cross validation
2024-03-16 17:24:18,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:20,288:INFO:Calculating mean and std
2024-03-16 17:24:20,291:INFO:Creating metrics dataframe
2024-03-16 17:24:20,298:INFO:Uploading results into container
2024-03-16 17:24:20,299:INFO:Uploading model into container now
2024-03-16 17:24:20,300:INFO:_master_model_container: 16
2024-03-16 17:24:20,300:INFO:_display_container: 2
2024-03-16 17:24:20,301:INFO:GradientBoostingRegressor(random_state=8663)
2024-03-16 17:24:20,301:INFO:create_model() successfully completed......................................
2024-03-16 17:24:20,740:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:20,740:INFO:Creating metrics dataframe
2024-03-16 17:24:20,765:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:24:20,765:INFO:Total runtime is 0.9986300706863405 minutes
2024-03-16 17:24:20,784:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:20,784:INFO:Initializing create_model()
2024-03-16 17:24:20,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:20,784:INFO:Checking exceptions
2024-03-16 17:24:20,784:INFO:Importing libraries
2024-03-16 17:24:20,784:INFO:Copying training dataset
2024-03-16 17:24:20,816:INFO:Defining folds
2024-03-16 17:24:20,817:INFO:Declaring metric variables
2024-03-16 17:24:20,825:INFO:Importing untrained model
2024-03-16 17:24:20,837:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:24:20,852:INFO:Starting cross validation
2024-03-16 17:24:20,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:23,824:INFO:Calculating mean and std
2024-03-16 17:24:23,824:INFO:Creating metrics dataframe
2024-03-16 17:24:23,824:INFO:Uploading results into container
2024-03-16 17:24:23,824:INFO:Uploading model into container now
2024-03-16 17:24:23,824:INFO:_master_model_container: 17
2024-03-16 17:24:23,824:INFO:_display_container: 2
2024-03-16 17:24:23,839:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8663, ...)
2024-03-16 17:24:23,839:INFO:create_model() successfully completed......................................
2024-03-16 17:24:24,183:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:24,183:INFO:Creating metrics dataframe
2024-03-16 17:24:24,199:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:24:24,199:INFO:Total runtime is 1.055859371026357 minutes
2024-03-16 17:24:24,199:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:24,199:INFO:Initializing create_model()
2024-03-16 17:24:24,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:24,199:INFO:Checking exceptions
2024-03-16 17:24:24,199:INFO:Importing libraries
2024-03-16 17:24:24,199:INFO:Copying training dataset
2024-03-16 17:24:24,220:INFO:Defining folds
2024-03-16 17:24:24,220:INFO:Declaring metric variables
2024-03-16 17:24:24,229:INFO:Importing untrained model
2024-03-16 17:24:24,254:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:24:24,289:INFO:Starting cross validation
2024-03-16 17:24:24,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:27,965:INFO:Calculating mean and std
2024-03-16 17:24:27,980:INFO:Creating metrics dataframe
2024-03-16 17:24:27,988:INFO:Uploading results into container
2024-03-16 17:24:27,988:INFO:Uploading model into container now
2024-03-16 17:24:27,988:INFO:_master_model_container: 18
2024-03-16 17:24:27,988:INFO:_display_container: 2
2024-03-16 17:24:27,988:INFO:LGBMRegressor(n_jobs=-1, random_state=8663)
2024-03-16 17:24:27,988:INFO:create_model() successfully completed......................................
2024-03-16 17:24:28,329:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:28,329:INFO:Creating metrics dataframe
2024-03-16 17:24:28,363:INFO:Initializing Dummy Regressor
2024-03-16 17:24:28,363:INFO:Total runtime is 1.1252509713172913 minutes
2024-03-16 17:24:28,363:INFO:SubProcess create_model() called ==================================
2024-03-16 17:24:28,363:INFO:Initializing create_model()
2024-03-16 17:24:28,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B85A62FFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:28,363:INFO:Checking exceptions
2024-03-16 17:24:28,363:INFO:Importing libraries
2024-03-16 17:24:28,363:INFO:Copying training dataset
2024-03-16 17:24:28,379:INFO:Defining folds
2024-03-16 17:24:28,379:INFO:Declaring metric variables
2024-03-16 17:24:28,388:INFO:Importing untrained model
2024-03-16 17:24:28,395:INFO:Dummy Regressor Imported successfully
2024-03-16 17:24:28,403:INFO:Starting cross validation
2024-03-16 17:24:28,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:24:28,559:INFO:Calculating mean and std
2024-03-16 17:24:28,560:INFO:Creating metrics dataframe
2024-03-16 17:24:28,563:INFO:Uploading results into container
2024-03-16 17:24:28,563:INFO:Uploading model into container now
2024-03-16 17:24:28,563:INFO:_master_model_container: 19
2024-03-16 17:24:28,563:INFO:_display_container: 2
2024-03-16 17:24:28,563:INFO:DummyRegressor()
2024-03-16 17:24:28,563:INFO:create_model() successfully completed......................................
2024-03-16 17:24:28,796:INFO:SubProcess create_model() end ==================================
2024-03-16 17:24:28,796:INFO:Creating metrics dataframe
2024-03-16 17:24:28,812:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:24:28,829:INFO:Initializing create_model()
2024-03-16 17:24:28,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=ElasticNet(random_state=8663), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:24:28,829:INFO:Checking exceptions
2024-03-16 17:24:28,829:INFO:Importing libraries
2024-03-16 17:24:28,829:INFO:Copying training dataset
2024-03-16 17:24:28,851:INFO:Defining folds
2024-03-16 17:24:28,851:INFO:Declaring metric variables
2024-03-16 17:24:28,851:INFO:Importing untrained model
2024-03-16 17:24:28,851:INFO:Declaring custom model
2024-03-16 17:24:28,851:INFO:Elastic Net Imported successfully
2024-03-16 17:24:28,851:INFO:Cross validation set to False
2024-03-16 17:24:28,851:INFO:Fitting Model
2024-03-16 17:24:28,883:INFO:ElasticNet(random_state=8663)
2024-03-16 17:24:28,883:INFO:create_model() successfully completed......................................
2024-03-16 17:24:29,198:INFO:Creating Dashboard logs
2024-03-16 17:24:29,213:INFO:Model: Elastic Net
2024-03-16 17:24:29,283:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8663, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:24:29,411:INFO:Initializing predict_model()
2024-03-16 17:24:29,412:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B83D9E01D0>, estimator=ElasticNet(random_state=8663), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B854208680>)
2024-03-16 17:24:29,412:INFO:Checking exceptions
2024-03-16 17:24:29,412:INFO:Preloading libraries
2024-03-16 17:24:29,517:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:24:30,058:INFO:Creating Dashboard logs
2024-03-16 17:24:30,063:INFO:Model: Ridge Regression
2024-03-16 17:24:30,121:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 8663, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:24:30,515:INFO:Creating Dashboard logs
2024-03-16 17:24:30,515:INFO:Model: Linear Regression
2024-03-16 17:24:30,568:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:24:30,959:INFO:Creating Dashboard logs
2024-03-16 17:24:30,979:INFO:Model: Lasso Regression
2024-03-16 17:24:31,031:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8663, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:24:31,534:INFO:Creating Dashboard logs
2024-03-16 17:24:31,534:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:24:31,631:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 8663, 'verbose': False}
2024-03-16 17:24:32,075:INFO:Creating Dashboard logs
2024-03-16 17:24:32,079:INFO:Model: Bayesian Ridge
2024-03-16 17:24:32,128:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:24:32,482:INFO:Creating Dashboard logs
2024-03-16 17:24:32,486:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:24:32,533:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:24:32,891:INFO:Creating Dashboard logs
2024-03-16 17:24:32,898:INFO:Model: Least Angle Regression
2024-03-16 17:24:32,945:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 8663, 'verbose': False}
2024-03-16 17:24:33,297:INFO:Creating Dashboard logs
2024-03-16 17:24:33,297:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:24:33,345:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 8663, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:24:33,725:INFO:Creating Dashboard logs
2024-03-16 17:24:33,741:INFO:Model: Huber Regressor
2024-03-16 17:24:33,791:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:24:34,130:INFO:Creating Dashboard logs
2024-03-16 17:24:34,130:INFO:Model: Extra Trees Regressor
2024-03-16 17:24:34,183:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8663, 'verbose': 0, 'warm_start': False}
2024-03-16 17:24:34,529:INFO:Creating Dashboard logs
2024-03-16 17:24:34,545:INFO:Model: Random Forest Regressor
2024-03-16 17:24:34,596:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8663, 'verbose': 0, 'warm_start': False}
2024-03-16 17:24:34,947:INFO:Creating Dashboard logs
2024-03-16 17:24:34,947:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:24:34,995:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 8663, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:24:35,399:INFO:Creating Dashboard logs
2024-03-16 17:24:35,413:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:24:35,451:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 8663, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:24:35,825:INFO:Creating Dashboard logs
2024-03-16 17:24:35,830:INFO:Model: K Neighbors Regressor
2024-03-16 17:24:35,885:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:24:36,287:INFO:Creating Dashboard logs
2024-03-16 17:24:36,294:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:24:36,349:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 8663, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:24:36,699:INFO:Creating Dashboard logs
2024-03-16 17:24:36,699:INFO:Model: AdaBoost Regressor
2024-03-16 17:24:36,748:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 8663}
2024-03-16 17:24:37,096:INFO:Creating Dashboard logs
2024-03-16 17:24:37,096:INFO:Model: Decision Tree Regressor
2024-03-16 17:24:37,149:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 8663, 'splitter': 'best'}
2024-03-16 17:24:37,477:INFO:Creating Dashboard logs
2024-03-16 17:24:37,477:INFO:Model: Dummy Regressor
2024-03-16 17:24:37,525:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:24:37,845:INFO:_master_model_container: 19
2024-03-16 17:24:37,845:INFO:_display_container: 2
2024-03-16 17:24:37,845:INFO:ElasticNet(random_state=8663)
2024-03-16 17:24:37,845:INFO:compare_models() successfully completed......................................
2024-03-16 17:51:48,511:INFO:PyCaret RegressionExperiment
2024-03-16 17:51:48,513:INFO:Logging name: reg-default-name
2024-03-16 17:51:48,513:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:51:48,513:INFO:version 3.3.0
2024-03-16 17:51:48,514:INFO:Initializing setup()
2024-03-16 17:51:48,514:INFO:self.USI: e83f
2024-03-16 17:51:48,514:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:51:48,514:INFO:Checking environment
2024-03-16 17:51:48,515:INFO:python_version: 3.11.5
2024-03-16 17:51:48,515:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:51:48,515:INFO:machine: AMD64
2024-03-16 17:51:48,515:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:51:48,515:INFO:Memory: svmem(total=34129678336, available=13110435840, percent=61.6, used=21019242496, free=13110435840)
2024-03-16 17:51:48,516:INFO:Physical Core: 6
2024-03-16 17:51:48,516:INFO:Logical Core: 12
2024-03-16 17:51:48,516:INFO:Checking libraries
2024-03-16 17:51:48,516:INFO:System:
2024-03-16 17:51:48,517:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:51:48,517:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:51:48,517:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:51:48,517:INFO:PyCaret required dependencies:
2024-03-16 17:51:48,517:INFO:                 pip: 24.0
2024-03-16 17:51:48,517:INFO:          setuptools: 68.0.0
2024-03-16 17:51:48,518:INFO:             pycaret: 3.3.0
2024-03-16 17:51:48,518:INFO:             IPython: 8.15.0
2024-03-16 17:51:48,518:INFO:          ipywidgets: 8.0.4
2024-03-16 17:51:48,518:INFO:                tqdm: 4.65.0
2024-03-16 17:51:48,518:INFO:               numpy: 1.24.3
2024-03-16 17:51:48,519:INFO:              pandas: 2.0.3
2024-03-16 17:51:48,519:INFO:              jinja2: 3.1.2
2024-03-16 17:51:48,519:INFO:               scipy: 1.11.1
2024-03-16 17:51:48,519:INFO:              joblib: 1.2.0
2024-03-16 17:51:48,519:INFO:             sklearn: 1.3.0
2024-03-16 17:51:48,519:INFO:                pyod: 1.1.3
2024-03-16 17:51:48,520:INFO:            imblearn: 0.10.1
2024-03-16 17:51:48,520:INFO:   category_encoders: 2.6.3
2024-03-16 17:51:48,520:INFO:            lightgbm: 4.3.0
2024-03-16 17:51:48,520:INFO:               numba: 0.57.1
2024-03-16 17:51:48,520:INFO:            requests: 2.31.0
2024-03-16 17:51:48,521:INFO:          matplotlib: 3.7.2
2024-03-16 17:51:48,521:INFO:          scikitplot: 0.3.7
2024-03-16 17:51:48,521:INFO:         yellowbrick: 1.5
2024-03-16 17:51:48,521:INFO:              plotly: 5.9.0
2024-03-16 17:51:48,521:INFO:    plotly-resampler: Not installed
2024-03-16 17:51:48,521:INFO:             kaleido: 0.2.1
2024-03-16 17:51:48,522:INFO:           schemdraw: 0.15
2024-03-16 17:51:48,522:INFO:         statsmodels: 0.14.0
2024-03-16 17:51:48,522:INFO:              sktime: 0.27.0
2024-03-16 17:51:48,522:INFO:               tbats: 1.1.3
2024-03-16 17:51:48,522:INFO:            pmdarima: 2.0.4
2024-03-16 17:51:48,523:INFO:              psutil: 5.9.0
2024-03-16 17:51:48,523:INFO:          markupsafe: 2.1.1
2024-03-16 17:51:48,523:INFO:             pickle5: Not installed
2024-03-16 17:51:48,523:INFO:         cloudpickle: 2.2.1
2024-03-16 17:51:48,523:INFO:         deprecation: 2.1.0
2024-03-16 17:51:48,523:INFO:              xxhash: 2.0.2
2024-03-16 17:51:48,523:INFO:           wurlitzer: Not installed
2024-03-16 17:51:48,524:INFO:PyCaret optional dependencies:
2024-03-16 17:51:48,524:INFO:                shap: Not installed
2024-03-16 17:51:48,524:INFO:           interpret: Not installed
2024-03-16 17:51:48,524:INFO:                umap: Not installed
2024-03-16 17:51:48,524:INFO:     ydata_profiling: Not installed
2024-03-16 17:51:48,524:INFO:  explainerdashboard: Not installed
2024-03-16 17:51:48,525:INFO:             autoviz: Not installed
2024-03-16 17:51:48,525:INFO:           fairlearn: Not installed
2024-03-16 17:51:48,525:INFO:          deepchecks: Not installed
2024-03-16 17:51:48,525:INFO:             xgboost: 2.0.3
2024-03-16 17:51:48,525:INFO:            catboost: Not installed
2024-03-16 17:51:48,525:INFO:              kmodes: Not installed
2024-03-16 17:51:48,525:INFO:             mlxtend: Not installed
2024-03-16 17:51:48,526:INFO:       statsforecast: Not installed
2024-03-16 17:51:48,526:INFO:        tune_sklearn: Not installed
2024-03-16 17:51:48,526:INFO:                 ray: Not installed
2024-03-16 17:51:48,526:INFO:            hyperopt: Not installed
2024-03-16 17:51:48,526:INFO:              optuna: Not installed
2024-03-16 17:51:48,527:INFO:               skopt: Not installed
2024-03-16 17:51:48,527:INFO:              mlflow: 2.11.1
2024-03-16 17:51:48,527:INFO:              gradio: Not installed
2024-03-16 17:51:48,528:INFO:             fastapi: Not installed
2024-03-16 17:51:48,528:INFO:             uvicorn: Not installed
2024-03-16 17:51:48,530:INFO:              m2cgen: Not installed
2024-03-16 17:51:48,530:INFO:           evidently: Not installed
2024-03-16 17:51:48,530:INFO:               fugue: Not installed
2024-03-16 17:51:48,530:INFO:           streamlit: Not installed
2024-03-16 17:51:48,531:INFO:             prophet: Not installed
2024-03-16 17:51:48,531:INFO:None
2024-03-16 17:51:48,531:INFO:Set up data.
2024-03-16 17:51:48,561:INFO:Set up folding strategy.
2024-03-16 17:51:48,561:INFO:Set up train/test split.
2024-03-16 17:51:48,587:INFO:Set up index.
2024-03-16 17:51:48,588:INFO:Assigning column types.
2024-03-16 17:51:48,611:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:51:48,611:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,630:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,644:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,812:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,905:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:48,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:48,911:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,911:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:51:48,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,054:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,160:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:49,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:49,161:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:51:49,161:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,178:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,320:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,405:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:49,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:49,419:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,429:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,566:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,654:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:49,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:49,658:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:51:49,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,778:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,866:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:49,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:49,877:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:51:49,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:50,046:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:51:50,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,214:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:50,313:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,378:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:50,382:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:51:50,519:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,591:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:50,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:51:50,761:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:50,761:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:51:50,943:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:50,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:51,103:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:51,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:51,108:INFO:Preparing preprocessing pipeline...
2024-03-16 17:51:51,108:INFO:Set up simple imputation.
2024-03-16 17:51:51,110:INFO:Set up column name cleaning.
2024-03-16 17:51:51,160:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:51:51,160:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:51:51,160:INFO:Creating final display dataframe.
2024-03-16 17:51:51,330:INFO:Setup _display_container:                     Description             Value
0                    Session id              4129
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 28)
4        Transformed data shape        (1859, 28)
5   Transformed train set shape        (1301, 28)
6    Transformed test set shape         (558, 28)
7              Numeric features                27
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              e83f
2024-03-16 17:51:51,476:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:51,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:51,662:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:51:51,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:51:51,666:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:51:51,667:INFO:Logging experiment in loggers
2024-03-16 17:53:07,162:INFO:PyCaret RegressionExperiment
2024-03-16 17:53:07,162:INFO:Logging name: reg-default-name
2024-03-16 17:53:07,162:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:53:07,162:INFO:version 3.3.0
2024-03-16 17:53:07,162:INFO:Initializing setup()
2024-03-16 17:53:07,162:INFO:self.USI: 4be8
2024-03-16 17:53:07,162:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:53:07,162:INFO:Checking environment
2024-03-16 17:53:07,162:INFO:python_version: 3.11.5
2024-03-16 17:53:07,162:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:53:07,162:INFO:machine: AMD64
2024-03-16 17:53:07,162:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:53:07,162:INFO:Memory: svmem(total=34129678336, available=13493063680, percent=60.5, used=20636614656, free=13493063680)
2024-03-16 17:53:07,177:INFO:Physical Core: 6
2024-03-16 17:53:07,177:INFO:Logical Core: 12
2024-03-16 17:53:07,177:INFO:Checking libraries
2024-03-16 17:53:07,177:INFO:System:
2024-03-16 17:53:07,177:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:53:07,177:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:53:07,177:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:53:07,177:INFO:PyCaret required dependencies:
2024-03-16 17:53:07,177:INFO:                 pip: 24.0
2024-03-16 17:53:07,177:INFO:          setuptools: 68.0.0
2024-03-16 17:53:07,177:INFO:             pycaret: 3.3.0
2024-03-16 17:53:07,177:INFO:             IPython: 8.15.0
2024-03-16 17:53:07,177:INFO:          ipywidgets: 8.0.4
2024-03-16 17:53:07,177:INFO:                tqdm: 4.65.0
2024-03-16 17:53:07,177:INFO:               numpy: 1.24.3
2024-03-16 17:53:07,177:INFO:              pandas: 2.0.3
2024-03-16 17:53:07,177:INFO:              jinja2: 3.1.2
2024-03-16 17:53:07,177:INFO:               scipy: 1.11.1
2024-03-16 17:53:07,177:INFO:              joblib: 1.2.0
2024-03-16 17:53:07,177:INFO:             sklearn: 1.3.0
2024-03-16 17:53:07,177:INFO:                pyod: 1.1.3
2024-03-16 17:53:07,177:INFO:            imblearn: 0.10.1
2024-03-16 17:53:07,177:INFO:   category_encoders: 2.6.3
2024-03-16 17:53:07,177:INFO:            lightgbm: 4.3.0
2024-03-16 17:53:07,177:INFO:               numba: 0.57.1
2024-03-16 17:53:07,177:INFO:            requests: 2.31.0
2024-03-16 17:53:07,177:INFO:          matplotlib: 3.7.2
2024-03-16 17:53:07,177:INFO:          scikitplot: 0.3.7
2024-03-16 17:53:07,177:INFO:         yellowbrick: 1.5
2024-03-16 17:53:07,177:INFO:              plotly: 5.9.0
2024-03-16 17:53:07,177:INFO:    plotly-resampler: Not installed
2024-03-16 17:53:07,177:INFO:             kaleido: 0.2.1
2024-03-16 17:53:07,177:INFO:           schemdraw: 0.15
2024-03-16 17:53:07,177:INFO:         statsmodels: 0.14.0
2024-03-16 17:53:07,177:INFO:              sktime: 0.27.0
2024-03-16 17:53:07,177:INFO:               tbats: 1.1.3
2024-03-16 17:53:07,177:INFO:            pmdarima: 2.0.4
2024-03-16 17:53:07,177:INFO:              psutil: 5.9.0
2024-03-16 17:53:07,177:INFO:          markupsafe: 2.1.1
2024-03-16 17:53:07,177:INFO:             pickle5: Not installed
2024-03-16 17:53:07,177:INFO:         cloudpickle: 2.2.1
2024-03-16 17:53:07,177:INFO:         deprecation: 2.1.0
2024-03-16 17:53:07,177:INFO:              xxhash: 2.0.2
2024-03-16 17:53:07,177:INFO:           wurlitzer: Not installed
2024-03-16 17:53:07,177:INFO:PyCaret optional dependencies:
2024-03-16 17:53:07,177:INFO:                shap: Not installed
2024-03-16 17:53:07,177:INFO:           interpret: Not installed
2024-03-16 17:53:07,177:INFO:                umap: Not installed
2024-03-16 17:53:07,177:INFO:     ydata_profiling: Not installed
2024-03-16 17:53:07,177:INFO:  explainerdashboard: Not installed
2024-03-16 17:53:07,177:INFO:             autoviz: Not installed
2024-03-16 17:53:07,177:INFO:           fairlearn: Not installed
2024-03-16 17:53:07,177:INFO:          deepchecks: Not installed
2024-03-16 17:53:07,177:INFO:             xgboost: 2.0.3
2024-03-16 17:53:07,177:INFO:            catboost: Not installed
2024-03-16 17:53:07,177:INFO:              kmodes: Not installed
2024-03-16 17:53:07,177:INFO:             mlxtend: Not installed
2024-03-16 17:53:07,177:INFO:       statsforecast: Not installed
2024-03-16 17:53:07,177:INFO:        tune_sklearn: Not installed
2024-03-16 17:53:07,177:INFO:                 ray: Not installed
2024-03-16 17:53:07,177:INFO:            hyperopt: Not installed
2024-03-16 17:53:07,177:INFO:              optuna: Not installed
2024-03-16 17:53:07,177:INFO:               skopt: Not installed
2024-03-16 17:53:07,177:INFO:              mlflow: 2.11.1
2024-03-16 17:53:07,177:INFO:              gradio: Not installed
2024-03-16 17:53:07,177:INFO:             fastapi: Not installed
2024-03-16 17:53:07,177:INFO:             uvicorn: Not installed
2024-03-16 17:53:07,177:INFO:              m2cgen: Not installed
2024-03-16 17:53:07,177:INFO:           evidently: Not installed
2024-03-16 17:53:07,177:INFO:               fugue: Not installed
2024-03-16 17:53:07,177:INFO:           streamlit: Not installed
2024-03-16 17:53:07,177:INFO:             prophet: Not installed
2024-03-16 17:53:07,177:INFO:None
2024-03-16 17:53:07,177:INFO:Set up data.
2024-03-16 17:53:07,177:INFO:Set up folding strategy.
2024-03-16 17:53:07,177:INFO:Set up train/test split.
2024-03-16 17:53:07,193:INFO:Set up index.
2024-03-16 17:53:07,193:INFO:Assigning column types.
2024-03-16 17:53:07,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:53:07,193:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,209:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,216:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,322:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,322:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,322:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,322:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,322:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,444:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,444:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:53:07,444:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,459:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,558:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,558:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,578:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,678:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,678:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:53:07,693:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,794:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,810:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:07,917:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:07,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:07,917:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:53:08,005:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,065:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,065:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,189:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,189:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:53:08,274:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,329:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,417:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:53:08,460:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,460:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:53:08,590:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,711:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:08,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:08,718:INFO:Preparing preprocessing pipeline...
2024-03-16 17:53:08,718:INFO:Set up simple imputation.
2024-03-16 17:53:08,718:INFO:Set up column name cleaning.
2024-03-16 17:53:08,761:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:53:08,761:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:53:08,761:INFO:Creating final display dataframe.
2024-03-16 17:53:08,893:INFO:Setup _display_container:                     Description             Value
0                    Session id              3299
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 28)
4        Transformed data shape        (1859, 28)
5   Transformed train set shape        (1301, 28)
6    Transformed test set shape         (558, 28)
7              Numeric features                27
8      Rows with missing values            100.0%
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator             KFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment      MlflowLogger
18              Experiment Name  reg-default-name
19                          USI              4be8
2024-03-16 17:53:09,046:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:09,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:09,178:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:53:09,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:53:09,178:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:53:09,178:INFO:Logging experiment in loggers
2024-03-16 17:53:09,261:INFO:SubProcess save_model() called ==================================
2024-03-16 17:53:09,274:INFO:Initializing save_model()
2024-03-16 17:53:09,274:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmpp2gc4tj6\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:53:09,274:INFO:Adding model into prep_pipe
2024-03-16 17:53:09,274:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:53:09,277:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmpp2gc4tj6\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:53:09,279:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay', 'WKFLDKG_stay',
                                             'WKFLDKG_scheduled_stay',
                                             'BNSLY_stay',
                                             'BNSLY_scheduled_stay',
                                             'MEADWHL_stay',
                                             'MEADWHL_sc...
                                             'Leeds.trains', 'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:53:09,279:INFO:save_model() successfully completed......................................
2024-03-16 17:53:09,543:INFO:SubProcess save_model() end ==================================
2024-03-16 17:53:09,562:INFO:setup() successfully completed in 2.02s...............
2024-03-16 17:53:09,562:INFO:Initializing compare_models()
2024-03-16 17:53:09,562:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:53:09,562:INFO:Checking exceptions
2024-03-16 17:53:09,562:INFO:Preparing display monitor
2024-03-16 17:53:09,596:INFO:Initializing Linear Regression
2024-03-16 17:53:09,596:INFO:Total runtime is 0.0 minutes
2024-03-16 17:53:09,596:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:09,596:INFO:Initializing create_model()
2024-03-16 17:53:09,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:09,596:INFO:Checking exceptions
2024-03-16 17:53:09,596:INFO:Importing libraries
2024-03-16 17:53:09,596:INFO:Copying training dataset
2024-03-16 17:53:09,613:INFO:Defining folds
2024-03-16 17:53:09,613:INFO:Declaring metric variables
2024-03-16 17:53:09,613:INFO:Importing untrained model
2024-03-16 17:53:09,619:INFO:Linear Regression Imported successfully
2024-03-16 17:53:09,631:INFO:Starting cross validation
2024-03-16 17:53:09,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:26,307:INFO:Calculating mean and std
2024-03-16 17:53:26,323:INFO:Creating metrics dataframe
2024-03-16 17:53:26,327:INFO:Uploading results into container
2024-03-16 17:53:26,328:INFO:Uploading model into container now
2024-03-16 17:53:26,329:INFO:_master_model_container: 1
2024-03-16 17:53:26,329:INFO:_display_container: 2
2024-03-16 17:53:26,329:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:53:26,329:INFO:create_model() successfully completed......................................
2024-03-16 17:53:26,612:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:26,612:INFO:Creating metrics dataframe
2024-03-16 17:53:26,628:INFO:Initializing Lasso Regression
2024-03-16 17:53:26,629:INFO:Total runtime is 0.2838877280553182 minutes
2024-03-16 17:53:26,633:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:26,633:INFO:Initializing create_model()
2024-03-16 17:53:26,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:26,634:INFO:Checking exceptions
2024-03-16 17:53:26,634:INFO:Importing libraries
2024-03-16 17:53:26,634:INFO:Copying training dataset
2024-03-16 17:53:26,640:INFO:Defining folds
2024-03-16 17:53:26,640:INFO:Declaring metric variables
2024-03-16 17:53:26,640:INFO:Importing untrained model
2024-03-16 17:53:26,640:INFO:Lasso Regression Imported successfully
2024-03-16 17:53:26,661:INFO:Starting cross validation
2024-03-16 17:53:26,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:30,973:INFO:Calculating mean and std
2024-03-16 17:53:30,973:INFO:Creating metrics dataframe
2024-03-16 17:53:30,990:INFO:Uploading results into container
2024-03-16 17:53:30,990:INFO:Uploading model into container now
2024-03-16 17:53:30,990:INFO:_master_model_container: 2
2024-03-16 17:53:30,990:INFO:_display_container: 2
2024-03-16 17:53:30,990:INFO:Lasso(random_state=3299)
2024-03-16 17:53:30,990:INFO:create_model() successfully completed......................................
2024-03-16 17:53:31,261:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:31,261:INFO:Creating metrics dataframe
2024-03-16 17:53:31,278:INFO:Initializing Ridge Regression
2024-03-16 17:53:31,278:INFO:Total runtime is 0.3613563537597656 minutes
2024-03-16 17:53:31,278:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:31,278:INFO:Initializing create_model()
2024-03-16 17:53:31,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:31,278:INFO:Checking exceptions
2024-03-16 17:53:31,278:INFO:Importing libraries
2024-03-16 17:53:31,278:INFO:Copying training dataset
2024-03-16 17:53:31,290:INFO:Defining folds
2024-03-16 17:53:31,290:INFO:Declaring metric variables
2024-03-16 17:53:31,290:INFO:Importing untrained model
2024-03-16 17:53:31,290:INFO:Ridge Regression Imported successfully
2024-03-16 17:53:31,306:INFO:Starting cross validation
2024-03-16 17:53:31,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:31,347:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.80387e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,348:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.37393e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,360:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.10355e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,373:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.50942e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,378:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.66569e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,379:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.376e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,393:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.04241e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,393:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.99804e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,412:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.32802e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:53:31,428:INFO:Calculating mean and std
2024-03-16 17:53:31,428:INFO:Creating metrics dataframe
2024-03-16 17:53:31,428:INFO:Uploading results into container
2024-03-16 17:53:31,428:INFO:Uploading model into container now
2024-03-16 17:53:31,428:INFO:_master_model_container: 3
2024-03-16 17:53:31,428:INFO:_display_container: 2
2024-03-16 17:53:31,428:INFO:Ridge(random_state=3299)
2024-03-16 17:53:31,428:INFO:create_model() successfully completed......................................
2024-03-16 17:53:31,707:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:31,707:INFO:Creating metrics dataframe
2024-03-16 17:53:31,711:INFO:Initializing Elastic Net
2024-03-16 17:53:31,711:INFO:Total runtime is 0.36858277320861815 minutes
2024-03-16 17:53:31,711:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:31,711:INFO:Initializing create_model()
2024-03-16 17:53:31,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:31,711:INFO:Checking exceptions
2024-03-16 17:53:31,711:INFO:Importing libraries
2024-03-16 17:53:31,711:INFO:Copying training dataset
2024-03-16 17:53:31,728:INFO:Defining folds
2024-03-16 17:53:31,728:INFO:Declaring metric variables
2024-03-16 17:53:31,728:INFO:Importing untrained model
2024-03-16 17:53:31,737:INFO:Elastic Net Imported successfully
2024-03-16 17:53:31,748:INFO:Starting cross validation
2024-03-16 17:53:31,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:31,873:INFO:Calculating mean and std
2024-03-16 17:53:31,875:INFO:Creating metrics dataframe
2024-03-16 17:53:31,877:INFO:Uploading results into container
2024-03-16 17:53:31,878:INFO:Uploading model into container now
2024-03-16 17:53:31,878:INFO:_master_model_container: 4
2024-03-16 17:53:31,878:INFO:_display_container: 2
2024-03-16 17:53:31,879:INFO:ElasticNet(random_state=3299)
2024-03-16 17:53:31,879:INFO:create_model() successfully completed......................................
2024-03-16 17:53:32,178:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:32,178:INFO:Creating metrics dataframe
2024-03-16 17:53:32,192:INFO:Initializing Least Angle Regression
2024-03-16 17:53:32,192:INFO:Total runtime is 0.37659788529078164 minutes
2024-03-16 17:53:32,192:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:32,192:INFO:Initializing create_model()
2024-03-16 17:53:32,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:32,192:INFO:Checking exceptions
2024-03-16 17:53:32,192:INFO:Importing libraries
2024-03-16 17:53:32,192:INFO:Copying training dataset
2024-03-16 17:53:32,206:INFO:Defining folds
2024-03-16 17:53:32,207:INFO:Declaring metric variables
2024-03-16 17:53:32,212:INFO:Importing untrained model
2024-03-16 17:53:32,212:INFO:Least Angle Regression Imported successfully
2024-03-16 17:53:32,223:INFO:Starting cross validation
2024-03-16 17:53:32,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:32,345:INFO:Calculating mean and std
2024-03-16 17:53:32,345:INFO:Creating metrics dataframe
2024-03-16 17:53:32,358:INFO:Uploading results into container
2024-03-16 17:53:32,358:INFO:Uploading model into container now
2024-03-16 17:53:32,359:INFO:_master_model_container: 5
2024-03-16 17:53:32,359:INFO:_display_container: 2
2024-03-16 17:53:32,359:INFO:Lars(random_state=3299)
2024-03-16 17:53:32,360:INFO:create_model() successfully completed......................................
2024-03-16 17:53:32,643:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:32,643:INFO:Creating metrics dataframe
2024-03-16 17:53:32,652:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:53:32,653:INFO:Total runtime is 0.3842802087465922 minutes
2024-03-16 17:53:32,657:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:32,658:INFO:Initializing create_model()
2024-03-16 17:53:32,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:32,658:INFO:Checking exceptions
2024-03-16 17:53:32,658:INFO:Importing libraries
2024-03-16 17:53:32,659:INFO:Copying training dataset
2024-03-16 17:53:32,672:INFO:Defining folds
2024-03-16 17:53:32,673:INFO:Declaring metric variables
2024-03-16 17:53:32,678:INFO:Importing untrained model
2024-03-16 17:53:32,684:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:53:32,696:INFO:Starting cross validation
2024-03-16 17:53:32,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:32,828:INFO:Calculating mean and std
2024-03-16 17:53:32,828:INFO:Creating metrics dataframe
2024-03-16 17:53:32,839:INFO:Uploading results into container
2024-03-16 17:53:32,839:INFO:Uploading model into container now
2024-03-16 17:53:32,840:INFO:_master_model_container: 6
2024-03-16 17:53:32,840:INFO:_display_container: 2
2024-03-16 17:53:32,840:INFO:LassoLars(random_state=3299)
2024-03-16 17:53:32,840:INFO:create_model() successfully completed......................................
2024-03-16 17:53:33,111:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:33,111:INFO:Creating metrics dataframe
2024-03-16 17:53:33,112:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:53:33,112:INFO:Total runtime is 0.3919371445973714 minutes
2024-03-16 17:53:33,124:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:33,125:INFO:Initializing create_model()
2024-03-16 17:53:33,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:33,125:INFO:Checking exceptions
2024-03-16 17:53:33,125:INFO:Importing libraries
2024-03-16 17:53:33,125:INFO:Copying training dataset
2024-03-16 17:53:33,127:INFO:Defining folds
2024-03-16 17:53:33,127:INFO:Declaring metric variables
2024-03-16 17:53:33,140:INFO:Importing untrained model
2024-03-16 17:53:33,145:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:53:33,161:INFO:Starting cross validation
2024-03-16 17:53:33,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:33,290:INFO:Calculating mean and std
2024-03-16 17:53:33,290:INFO:Creating metrics dataframe
2024-03-16 17:53:33,307:INFO:Uploading results into container
2024-03-16 17:53:33,308:INFO:Uploading model into container now
2024-03-16 17:53:33,308:INFO:_master_model_container: 7
2024-03-16 17:53:33,309:INFO:_display_container: 2
2024-03-16 17:53:33,309:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:53:33,309:INFO:create_model() successfully completed......................................
2024-03-16 17:53:33,580:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:33,580:INFO:Creating metrics dataframe
2024-03-16 17:53:33,595:INFO:Initializing Bayesian Ridge
2024-03-16 17:53:33,595:INFO:Total runtime is 0.3999755978584289 minutes
2024-03-16 17:53:33,595:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:33,595:INFO:Initializing create_model()
2024-03-16 17:53:33,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:33,595:INFO:Checking exceptions
2024-03-16 17:53:33,595:INFO:Importing libraries
2024-03-16 17:53:33,595:INFO:Copying training dataset
2024-03-16 17:53:33,616:INFO:Defining folds
2024-03-16 17:53:33,616:INFO:Declaring metric variables
2024-03-16 17:53:33,616:INFO:Importing untrained model
2024-03-16 17:53:33,625:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:53:33,629:INFO:Starting cross validation
2024-03-16 17:53:33,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:33,757:INFO:Calculating mean and std
2024-03-16 17:53:33,757:INFO:Creating metrics dataframe
2024-03-16 17:53:33,757:INFO:Uploading results into container
2024-03-16 17:53:33,757:INFO:Uploading model into container now
2024-03-16 17:53:33,757:INFO:_master_model_container: 8
2024-03-16 17:53:33,757:INFO:_display_container: 2
2024-03-16 17:53:33,757:INFO:BayesianRidge()
2024-03-16 17:53:33,757:INFO:create_model() successfully completed......................................
2024-03-16 17:53:34,028:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:34,028:INFO:Creating metrics dataframe
2024-03-16 17:53:34,028:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:53:34,039:INFO:Total runtime is 0.4073848923047383 minutes
2024-03-16 17:53:34,040:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:34,040:INFO:Initializing create_model()
2024-03-16 17:53:34,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:34,040:INFO:Checking exceptions
2024-03-16 17:53:34,040:INFO:Importing libraries
2024-03-16 17:53:34,040:INFO:Copying training dataset
2024-03-16 17:53:34,040:INFO:Defining folds
2024-03-16 17:53:34,040:INFO:Declaring metric variables
2024-03-16 17:53:34,058:INFO:Importing untrained model
2024-03-16 17:53:34,064:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:53:34,065:INFO:Starting cross validation
2024-03-16 17:53:34,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:34,192:INFO:Calculating mean and std
2024-03-16 17:53:34,194:INFO:Creating metrics dataframe
2024-03-16 17:53:34,195:INFO:Uploading results into container
2024-03-16 17:53:34,196:INFO:Uploading model into container now
2024-03-16 17:53:34,196:INFO:_master_model_container: 9
2024-03-16 17:53:34,196:INFO:_display_container: 2
2024-03-16 17:53:34,197:INFO:PassiveAggressiveRegressor(random_state=3299)
2024-03-16 17:53:34,197:INFO:create_model() successfully completed......................................
2024-03-16 17:53:34,464:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:34,464:INFO:Creating metrics dataframe
2024-03-16 17:53:34,479:INFO:Initializing Huber Regressor
2024-03-16 17:53:34,480:INFO:Total runtime is 0.41472601493199657 minutes
2024-03-16 17:53:34,481:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:34,481:INFO:Initializing create_model()
2024-03-16 17:53:34,481:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:34,481:INFO:Checking exceptions
2024-03-16 17:53:34,481:INFO:Importing libraries
2024-03-16 17:53:34,481:INFO:Copying training dataset
2024-03-16 17:53:34,497:INFO:Defining folds
2024-03-16 17:53:34,497:INFO:Declaring metric variables
2024-03-16 17:53:34,498:INFO:Importing untrained model
2024-03-16 17:53:34,506:INFO:Huber Regressor Imported successfully
2024-03-16 17:53:34,517:INFO:Starting cross validation
2024-03-16 17:53:34,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:34,629:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,648:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,648:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,664:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,674:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,694:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,694:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,709:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,709:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,725:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:53:34,741:INFO:Calculating mean and std
2024-03-16 17:53:34,741:INFO:Creating metrics dataframe
2024-03-16 17:53:34,741:INFO:Uploading results into container
2024-03-16 17:53:34,741:INFO:Uploading model into container now
2024-03-16 17:53:34,741:INFO:_master_model_container: 10
2024-03-16 17:53:34,741:INFO:_display_container: 2
2024-03-16 17:53:34,741:INFO:HuberRegressor()
2024-03-16 17:53:34,741:INFO:create_model() successfully completed......................................
2024-03-16 17:53:35,109:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:35,109:INFO:Creating metrics dataframe
2024-03-16 17:53:35,113:INFO:Initializing K Neighbors Regressor
2024-03-16 17:53:35,113:INFO:Total runtime is 0.42528438568115223 minutes
2024-03-16 17:53:35,128:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:35,128:INFO:Initializing create_model()
2024-03-16 17:53:35,129:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:35,129:INFO:Checking exceptions
2024-03-16 17:53:35,129:INFO:Importing libraries
2024-03-16 17:53:35,129:INFO:Copying training dataset
2024-03-16 17:53:35,140:INFO:Defining folds
2024-03-16 17:53:35,141:INFO:Declaring metric variables
2024-03-16 17:53:35,145:INFO:Importing untrained model
2024-03-16 17:53:35,145:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:53:35,161:INFO:Starting cross validation
2024-03-16 17:53:35,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:35,741:INFO:Calculating mean and std
2024-03-16 17:53:35,741:INFO:Creating metrics dataframe
2024-03-16 17:53:35,741:INFO:Uploading results into container
2024-03-16 17:53:35,741:INFO:Uploading model into container now
2024-03-16 17:53:35,741:INFO:_master_model_container: 11
2024-03-16 17:53:35,741:INFO:_display_container: 2
2024-03-16 17:53:35,741:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:53:35,741:INFO:create_model() successfully completed......................................
2024-03-16 17:53:36,138:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:36,138:INFO:Creating metrics dataframe
2024-03-16 17:53:36,155:INFO:Initializing Decision Tree Regressor
2024-03-16 17:53:36,155:INFO:Total runtime is 0.44264525969823193 minutes
2024-03-16 17:53:36,163:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:36,163:INFO:Initializing create_model()
2024-03-16 17:53:36,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:36,164:INFO:Checking exceptions
2024-03-16 17:53:36,164:INFO:Importing libraries
2024-03-16 17:53:36,164:INFO:Copying training dataset
2024-03-16 17:53:36,179:INFO:Defining folds
2024-03-16 17:53:36,179:INFO:Declaring metric variables
2024-03-16 17:53:36,184:INFO:Importing untrained model
2024-03-16 17:53:36,192:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:53:36,208:INFO:Starting cross validation
2024-03-16 17:53:36,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:36,484:INFO:Calculating mean and std
2024-03-16 17:53:36,486:INFO:Creating metrics dataframe
2024-03-16 17:53:36,489:INFO:Uploading results into container
2024-03-16 17:53:36,490:INFO:Uploading model into container now
2024-03-16 17:53:36,490:INFO:_master_model_container: 12
2024-03-16 17:53:36,490:INFO:_display_container: 2
2024-03-16 17:53:36,491:INFO:DecisionTreeRegressor(random_state=3299)
2024-03-16 17:53:36,491:INFO:create_model() successfully completed......................................
2024-03-16 17:53:36,800:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:36,800:INFO:Creating metrics dataframe
2024-03-16 17:53:36,808:INFO:Initializing Random Forest Regressor
2024-03-16 17:53:36,808:INFO:Total runtime is 0.45353217124938955 minutes
2024-03-16 17:53:36,808:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:36,808:INFO:Initializing create_model()
2024-03-16 17:53:36,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:36,808:INFO:Checking exceptions
2024-03-16 17:53:36,808:INFO:Importing libraries
2024-03-16 17:53:36,808:INFO:Copying training dataset
2024-03-16 17:53:36,828:INFO:Defining folds
2024-03-16 17:53:36,828:INFO:Declaring metric variables
2024-03-16 17:53:36,832:INFO:Importing untrained model
2024-03-16 17:53:36,836:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:53:36,847:INFO:Starting cross validation
2024-03-16 17:53:36,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:41,115:INFO:Calculating mean and std
2024-03-16 17:53:41,118:INFO:Creating metrics dataframe
2024-03-16 17:53:41,122:INFO:Uploading results into container
2024-03-16 17:53:41,123:INFO:Uploading model into container now
2024-03-16 17:53:41,125:INFO:_master_model_container: 13
2024-03-16 17:53:41,125:INFO:_display_container: 2
2024-03-16 17:53:41,126:INFO:RandomForestRegressor(n_jobs=-1, random_state=3299)
2024-03-16 17:53:41,127:INFO:create_model() successfully completed......................................
2024-03-16 17:53:41,446:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:41,446:INFO:Creating metrics dataframe
2024-03-16 17:53:41,457:INFO:Initializing Extra Trees Regressor
2024-03-16 17:53:41,457:INFO:Total runtime is 0.5310193300247191 minutes
2024-03-16 17:53:41,462:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:41,462:INFO:Initializing create_model()
2024-03-16 17:53:41,462:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:41,462:INFO:Checking exceptions
2024-03-16 17:53:41,462:INFO:Importing libraries
2024-03-16 17:53:41,462:INFO:Copying training dataset
2024-03-16 17:53:41,474:INFO:Defining folds
2024-03-16 17:53:41,474:INFO:Declaring metric variables
2024-03-16 17:53:41,478:INFO:Importing untrained model
2024-03-16 17:53:41,482:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:53:41,491:INFO:Starting cross validation
2024-03-16 17:53:41,493:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:43,933:INFO:Calculating mean and std
2024-03-16 17:53:43,933:INFO:Creating metrics dataframe
2024-03-16 17:53:43,933:INFO:Uploading results into container
2024-03-16 17:53:43,933:INFO:Uploading model into container now
2024-03-16 17:53:43,933:INFO:_master_model_container: 14
2024-03-16 17:53:43,933:INFO:_display_container: 2
2024-03-16 17:53:43,949:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3299)
2024-03-16 17:53:43,951:INFO:create_model() successfully completed......................................
2024-03-16 17:53:44,330:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:44,330:INFO:Creating metrics dataframe
2024-03-16 17:53:44,350:INFO:Initializing AdaBoost Regressor
2024-03-16 17:53:44,350:INFO:Total runtime is 0.5792227586110432 minutes
2024-03-16 17:53:44,350:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:44,350:INFO:Initializing create_model()
2024-03-16 17:53:44,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:44,350:INFO:Checking exceptions
2024-03-16 17:53:44,350:INFO:Importing libraries
2024-03-16 17:53:44,362:INFO:Copying training dataset
2024-03-16 17:53:44,362:INFO:Defining folds
2024-03-16 17:53:44,362:INFO:Declaring metric variables
2024-03-16 17:53:44,378:INFO:Importing untrained model
2024-03-16 17:53:44,383:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:53:44,394:INFO:Starting cross validation
2024-03-16 17:53:44,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:45,112:INFO:Calculating mean and std
2024-03-16 17:53:45,112:INFO:Creating metrics dataframe
2024-03-16 17:53:45,112:INFO:Uploading results into container
2024-03-16 17:53:45,112:INFO:Uploading model into container now
2024-03-16 17:53:45,112:INFO:_master_model_container: 15
2024-03-16 17:53:45,112:INFO:_display_container: 2
2024-03-16 17:53:45,112:INFO:AdaBoostRegressor(random_state=3299)
2024-03-16 17:53:45,112:INFO:create_model() successfully completed......................................
2024-03-16 17:53:45,394:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:45,394:INFO:Creating metrics dataframe
2024-03-16 17:53:45,410:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:53:45,410:INFO:Total runtime is 0.5968919118245442 minutes
2024-03-16 17:53:45,423:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:45,424:INFO:Initializing create_model()
2024-03-16 17:53:45,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:45,424:INFO:Checking exceptions
2024-03-16 17:53:45,424:INFO:Importing libraries
2024-03-16 17:53:45,424:INFO:Copying training dataset
2024-03-16 17:53:45,424:INFO:Defining folds
2024-03-16 17:53:45,424:INFO:Declaring metric variables
2024-03-16 17:53:45,443:INFO:Importing untrained model
2024-03-16 17:53:45,443:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:53:45,452:INFO:Starting cross validation
2024-03-16 17:53:45,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:46,630:INFO:Calculating mean and std
2024-03-16 17:53:46,633:INFO:Creating metrics dataframe
2024-03-16 17:53:46,636:INFO:Uploading results into container
2024-03-16 17:53:46,637:INFO:Uploading model into container now
2024-03-16 17:53:46,638:INFO:_master_model_container: 16
2024-03-16 17:53:46,638:INFO:_display_container: 2
2024-03-16 17:53:46,640:INFO:GradientBoostingRegressor(random_state=3299)
2024-03-16 17:53:46,640:INFO:create_model() successfully completed......................................
2024-03-16 17:53:47,009:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:47,009:INFO:Creating metrics dataframe
2024-03-16 17:53:47,030:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:53:47,030:INFO:Total runtime is 0.6239028374354043 minutes
2024-03-16 17:53:47,034:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:47,035:INFO:Initializing create_model()
2024-03-16 17:53:47,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:47,035:INFO:Checking exceptions
2024-03-16 17:53:47,035:INFO:Importing libraries
2024-03-16 17:53:47,035:INFO:Copying training dataset
2024-03-16 17:53:47,047:INFO:Defining folds
2024-03-16 17:53:47,048:INFO:Declaring metric variables
2024-03-16 17:53:47,056:INFO:Importing untrained model
2024-03-16 17:53:47,061:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:53:47,075:INFO:Starting cross validation
2024-03-16 17:53:47,077:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:49,530:INFO:Calculating mean and std
2024-03-16 17:53:49,532:INFO:Creating metrics dataframe
2024-03-16 17:53:49,536:INFO:Uploading results into container
2024-03-16 17:53:49,537:INFO:Uploading model into container now
2024-03-16 17:53:49,538:INFO:_master_model_container: 17
2024-03-16 17:53:49,539:INFO:_display_container: 2
2024-03-16 17:53:49,543:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3299, ...)
2024-03-16 17:53:49,544:INFO:create_model() successfully completed......................................
2024-03-16 17:53:49,888:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:49,888:INFO:Creating metrics dataframe
2024-03-16 17:53:49,912:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:53:49,912:INFO:Total runtime is 0.6719249367713926 minutes
2024-03-16 17:53:49,927:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:49,927:INFO:Initializing create_model()
2024-03-16 17:53:49,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:49,927:INFO:Checking exceptions
2024-03-16 17:53:49,927:INFO:Importing libraries
2024-03-16 17:53:49,927:INFO:Copying training dataset
2024-03-16 17:53:49,927:INFO:Defining folds
2024-03-16 17:53:49,927:INFO:Declaring metric variables
2024-03-16 17:53:49,945:INFO:Importing untrained model
2024-03-16 17:53:49,950:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:53:49,963:INFO:Starting cross validation
2024-03-16 17:53:49,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:52,937:INFO:Calculating mean and std
2024-03-16 17:53:52,953:INFO:Creating metrics dataframe
2024-03-16 17:53:52,959:INFO:Uploading results into container
2024-03-16 17:53:52,959:INFO:Uploading model into container now
2024-03-16 17:53:52,959:INFO:_master_model_container: 18
2024-03-16 17:53:52,959:INFO:_display_container: 2
2024-03-16 17:53:52,959:INFO:LGBMRegressor(n_jobs=-1, random_state=3299)
2024-03-16 17:53:52,959:INFO:create_model() successfully completed......................................
2024-03-16 17:53:53,333:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:53,339:INFO:Creating metrics dataframe
2024-03-16 17:53:53,339:INFO:Initializing Dummy Regressor
2024-03-16 17:53:53,339:INFO:Total runtime is 0.729043392340342 minutes
2024-03-16 17:53:53,354:INFO:SubProcess create_model() called ==================================
2024-03-16 17:53:53,360:INFO:Initializing create_model()
2024-03-16 17:53:53,360:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8307D9D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:53,360:INFO:Checking exceptions
2024-03-16 17:53:53,360:INFO:Importing libraries
2024-03-16 17:53:53,360:INFO:Copying training dataset
2024-03-16 17:53:53,371:INFO:Defining folds
2024-03-16 17:53:53,371:INFO:Declaring metric variables
2024-03-16 17:53:53,376:INFO:Importing untrained model
2024-03-16 17:53:53,381:INFO:Dummy Regressor Imported successfully
2024-03-16 17:53:53,392:INFO:Starting cross validation
2024-03-16 17:53:53,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:53:53,519:INFO:Calculating mean and std
2024-03-16 17:53:53,521:INFO:Creating metrics dataframe
2024-03-16 17:53:53,524:INFO:Uploading results into container
2024-03-16 17:53:53,525:INFO:Uploading model into container now
2024-03-16 17:53:53,525:INFO:_master_model_container: 19
2024-03-16 17:53:53,525:INFO:_display_container: 2
2024-03-16 17:53:53,526:INFO:DummyRegressor()
2024-03-16 17:53:53,526:INFO:create_model() successfully completed......................................
2024-03-16 17:53:53,860:INFO:SubProcess create_model() end ==================================
2024-03-16 17:53:53,860:INFO:Creating metrics dataframe
2024-03-16 17:53:53,876:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:53:53,891:INFO:Initializing create_model()
2024-03-16 17:53:53,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=Lasso(random_state=3299), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:53:53,891:INFO:Checking exceptions
2024-03-16 17:53:53,891:INFO:Importing libraries
2024-03-16 17:53:53,891:INFO:Copying training dataset
2024-03-16 17:53:53,912:INFO:Defining folds
2024-03-16 17:53:53,912:INFO:Declaring metric variables
2024-03-16 17:53:53,913:INFO:Importing untrained model
2024-03-16 17:53:53,913:INFO:Declaring custom model
2024-03-16 17:53:53,913:INFO:Lasso Regression Imported successfully
2024-03-16 17:53:53,913:INFO:Cross validation set to False
2024-03-16 17:53:53,913:INFO:Fitting Model
2024-03-16 17:53:53,934:INFO:Lasso(random_state=3299)
2024-03-16 17:53:53,934:INFO:create_model() successfully completed......................................
2024-03-16 17:53:54,321:INFO:Creating Dashboard logs
2024-03-16 17:53:54,327:INFO:Model: Lasso Regression
2024-03-16 17:53:54,384:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3299, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:53:54,562:INFO:Initializing predict_model()
2024-03-16 17:53:54,562:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A5AF10>, estimator=Lasso(random_state=3299), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B82D249580>)
2024-03-16 17:53:54,562:INFO:Checking exceptions
2024-03-16 17:53:54,562:INFO:Preloading libraries
2024-03-16 17:53:54,670:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:53:55,295:INFO:Creating Dashboard logs
2024-03-16 17:53:55,295:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:53:55,337:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3299, 'verbose': False}
2024-03-16 17:53:55,757:INFO:Creating Dashboard logs
2024-03-16 17:53:55,763:INFO:Model: Elastic Net
2024-03-16 17:53:55,818:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3299, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:53:56,225:INFO:Creating Dashboard logs
2024-03-16 17:53:56,225:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:53:56,274:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:53:56,724:INFO:Creating Dashboard logs
2024-03-16 17:53:56,728:INFO:Model: Bayesian Ridge
2024-03-16 17:53:56,775:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:53:57,200:INFO:Creating Dashboard logs
2024-03-16 17:53:57,204:INFO:Model: Ridge Regression
2024-03-16 17:53:57,254:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3299, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:53:57,662:INFO:Creating Dashboard logs
2024-03-16 17:53:57,666:INFO:Model: Linear Regression
2024-03-16 17:53:57,715:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:53:58,111:INFO:Creating Dashboard logs
2024-03-16 17:53:58,127:INFO:Model: Least Angle Regression
2024-03-16 17:53:58,164:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3299, 'verbose': False}
2024-03-16 17:53:58,584:INFO:Creating Dashboard logs
2024-03-16 17:53:58,588:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:53:58,649:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3299, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:53:59,107:INFO:Creating Dashboard logs
2024-03-16 17:53:59,124:INFO:Model: Extra Trees Regressor
2024-03-16 17:53:59,164:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3299, 'verbose': 0, 'warm_start': False}
2024-03-16 17:53:59,576:INFO:Creating Dashboard logs
2024-03-16 17:53:59,592:INFO:Model: Huber Regressor
2024-03-16 17:53:59,640:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:54:00,026:INFO:Creating Dashboard logs
2024-03-16 17:54:00,026:INFO:Model: Random Forest Regressor
2024-03-16 17:54:00,076:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3299, 'verbose': 0, 'warm_start': False}
2024-03-16 17:54:00,528:INFO:Creating Dashboard logs
2024-03-16 17:54:00,528:INFO:Model: K Neighbors Regressor
2024-03-16 17:54:00,591:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:54:01,024:INFO:Creating Dashboard logs
2024-03-16 17:54:01,040:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:54:01,091:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 3299, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:54:01,539:INFO:Creating Dashboard logs
2024-03-16 17:54:01,539:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:54:01,593:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3299, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:54:01,975:INFO:Creating Dashboard logs
2024-03-16 17:54:01,975:INFO:Model: AdaBoost Regressor
2024-03-16 17:54:02,026:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3299}
2024-03-16 17:54:02,389:INFO:Creating Dashboard logs
2024-03-16 17:54:02,405:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:54:02,458:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3299, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:54:02,837:INFO:Creating Dashboard logs
2024-03-16 17:54:02,837:INFO:Model: Decision Tree Regressor
2024-03-16 17:54:02,895:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3299, 'splitter': 'best'}
2024-03-16 17:54:03,293:INFO:Creating Dashboard logs
2024-03-16 17:54:03,293:INFO:Model: Dummy Regressor
2024-03-16 17:54:03,355:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:54:03,741:INFO:_master_model_container: 19
2024-03-16 17:54:03,741:INFO:_display_container: 2
2024-03-16 17:54:03,741:INFO:Lasso(random_state=3299)
2024-03-16 17:54:03,741:INFO:compare_models() successfully completed......................................
2024-03-16 17:55:04,237:INFO:PyCaret RegressionExperiment
2024-03-16 17:55:04,237:INFO:Logging name: reg-default-name
2024-03-16 17:55:04,237:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-16 17:55:04,237:INFO:version 3.3.0
2024-03-16 17:55:04,237:INFO:Initializing setup()
2024-03-16 17:55:04,237:INFO:self.USI: 56bd
2024-03-16 17:55:04,237:INFO:self._variable_keys: {'X_train', 'seed', 'fold_generator', 'log_plots_param', 'X_test', 'gpu_n_jobs_param', 'transform_target_param', '_ml_usecase', 'n_jobs_param', 'idx', 'exp_name_log', 'y', 'target_param', 'html_param', 'y_train', 'gpu_param', 'X', 'y_test', 'data', 'USI', 'logging_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', '_available_plots', 'fold_groups_param'}
2024-03-16 17:55:04,237:INFO:Checking environment
2024-03-16 17:55:04,237:INFO:python_version: 3.11.5
2024-03-16 17:55:04,237:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-03-16 17:55:04,237:INFO:machine: AMD64
2024-03-16 17:55:04,237:INFO:platform: Windows-10-10.0.22631-SP0
2024-03-16 17:55:04,237:INFO:Memory: svmem(total=34129678336, available=11547529216, percent=66.2, used=22582149120, free=11547529216)
2024-03-16 17:55:04,237:INFO:Physical Core: 6
2024-03-16 17:55:04,237:INFO:Logical Core: 12
2024-03-16 17:55:04,237:INFO:Checking libraries
2024-03-16 17:55:04,237:INFO:System:
2024-03-16 17:55:04,237:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-03-16 17:55:04,237:INFO:executable: d:\Code\Anaconda\python.exe
2024-03-16 17:55:04,237:INFO:   machine: Windows-10-10.0.22631-SP0
2024-03-16 17:55:04,237:INFO:PyCaret required dependencies:
2024-03-16 17:55:04,237:INFO:                 pip: 24.0
2024-03-16 17:55:04,237:INFO:          setuptools: 68.0.0
2024-03-16 17:55:04,237:INFO:             pycaret: 3.3.0
2024-03-16 17:55:04,237:INFO:             IPython: 8.15.0
2024-03-16 17:55:04,237:INFO:          ipywidgets: 8.0.4
2024-03-16 17:55:04,237:INFO:                tqdm: 4.65.0
2024-03-16 17:55:04,237:INFO:               numpy: 1.24.3
2024-03-16 17:55:04,237:INFO:              pandas: 2.0.3
2024-03-16 17:55:04,237:INFO:              jinja2: 3.1.2
2024-03-16 17:55:04,237:INFO:               scipy: 1.11.1
2024-03-16 17:55:04,237:INFO:              joblib: 1.2.0
2024-03-16 17:55:04,252:INFO:             sklearn: 1.3.0
2024-03-16 17:55:04,252:INFO:                pyod: 1.1.3
2024-03-16 17:55:04,252:INFO:            imblearn: 0.10.1
2024-03-16 17:55:04,252:INFO:   category_encoders: 2.6.3
2024-03-16 17:55:04,252:INFO:            lightgbm: 4.3.0
2024-03-16 17:55:04,252:INFO:               numba: 0.57.1
2024-03-16 17:55:04,252:INFO:            requests: 2.31.0
2024-03-16 17:55:04,252:INFO:          matplotlib: 3.7.2
2024-03-16 17:55:04,252:INFO:          scikitplot: 0.3.7
2024-03-16 17:55:04,252:INFO:         yellowbrick: 1.5
2024-03-16 17:55:04,252:INFO:              plotly: 5.9.0
2024-03-16 17:55:04,253:INFO:    plotly-resampler: Not installed
2024-03-16 17:55:04,253:INFO:             kaleido: 0.2.1
2024-03-16 17:55:04,253:INFO:           schemdraw: 0.15
2024-03-16 17:55:04,253:INFO:         statsmodels: 0.14.0
2024-03-16 17:55:04,253:INFO:              sktime: 0.27.0
2024-03-16 17:55:04,253:INFO:               tbats: 1.1.3
2024-03-16 17:55:04,253:INFO:            pmdarima: 2.0.4
2024-03-16 17:55:04,253:INFO:              psutil: 5.9.0
2024-03-16 17:55:04,253:INFO:          markupsafe: 2.1.1
2024-03-16 17:55:04,253:INFO:             pickle5: Not installed
2024-03-16 17:55:04,253:INFO:         cloudpickle: 2.2.1
2024-03-16 17:55:04,253:INFO:         deprecation: 2.1.0
2024-03-16 17:55:04,253:INFO:              xxhash: 2.0.2
2024-03-16 17:55:04,253:INFO:           wurlitzer: Not installed
2024-03-16 17:55:04,253:INFO:PyCaret optional dependencies:
2024-03-16 17:55:04,253:INFO:                shap: Not installed
2024-03-16 17:55:04,253:INFO:           interpret: Not installed
2024-03-16 17:55:04,253:INFO:                umap: Not installed
2024-03-16 17:55:04,253:INFO:     ydata_profiling: Not installed
2024-03-16 17:55:04,253:INFO:  explainerdashboard: Not installed
2024-03-16 17:55:04,254:INFO:             autoviz: Not installed
2024-03-16 17:55:04,254:INFO:           fairlearn: Not installed
2024-03-16 17:55:04,254:INFO:          deepchecks: Not installed
2024-03-16 17:55:04,254:INFO:             xgboost: 2.0.3
2024-03-16 17:55:04,254:INFO:            catboost: Not installed
2024-03-16 17:55:04,254:INFO:              kmodes: Not installed
2024-03-16 17:55:04,254:INFO:             mlxtend: Not installed
2024-03-16 17:55:04,254:INFO:       statsforecast: Not installed
2024-03-16 17:55:04,254:INFO:        tune_sklearn: Not installed
2024-03-16 17:55:04,254:INFO:                 ray: Not installed
2024-03-16 17:55:04,254:INFO:            hyperopt: Not installed
2024-03-16 17:55:04,254:INFO:              optuna: Not installed
2024-03-16 17:55:04,254:INFO:               skopt: Not installed
2024-03-16 17:55:04,254:INFO:              mlflow: 2.11.1
2024-03-16 17:55:04,254:INFO:              gradio: Not installed
2024-03-16 17:55:04,254:INFO:             fastapi: Not installed
2024-03-16 17:55:04,254:INFO:             uvicorn: Not installed
2024-03-16 17:55:04,254:INFO:              m2cgen: Not installed
2024-03-16 17:55:04,255:INFO:           evidently: Not installed
2024-03-16 17:55:04,255:INFO:               fugue: Not installed
2024-03-16 17:55:04,255:INFO:           streamlit: Not installed
2024-03-16 17:55:04,255:INFO:             prophet: Not installed
2024-03-16 17:55:04,255:INFO:None
2024-03-16 17:55:04,255:INFO:Set up data.
2024-03-16 17:55:04,261:INFO:Set up folding strategy.
2024-03-16 17:55:04,261:INFO:Set up train/test split.
2024-03-16 17:55:04,266:INFO:Set up index.
2024-03-16 17:55:04,266:INFO:Assigning column types.
2024-03-16 17:55:04,271:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-16 17:55:04,271:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,271:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,271:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,391:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:04,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:04,404:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,407:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,407:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,470:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,541:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:04,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:04,547:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-16 17:55:04,552:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,565:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,687:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,687:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:04,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:04,709:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,837:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:04,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:04,853:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-16 17:55:04,866:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:04,987:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:04,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,007:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,120:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,120:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,120:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-16 17:55:05,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,273:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,420:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,420:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-16 17:55:05,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,556:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-16 17:55:05,687:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,687:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-16 17:55:05,820:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,937:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:05,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:05,953:INFO:Preparing preprocessing pipeline...
2024-03-16 17:55:05,953:INFO:Set up simple imputation.
2024-03-16 17:55:05,954:INFO:Set up column name cleaning.
2024-03-16 17:55:05,986:INFO:Finished creating preprocessing pipeline.
2024-03-16 17:55:05,994:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:55:05,994:INFO:Creating final display dataframe.
2024-03-16 17:55:06,109:INFO:Setup _display_container:                     Description             Value
0                    Session id              4568
1                        Target        delay.secs
2                   Target type        Regression
3           Original data shape        (1859, 18)
4        Transformed data shape        (1859, 18)
5   Transformed train set shape        (1301, 18)
6    Transformed test set shape         (558, 18)
7              Numeric features                17
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment      MlflowLogger
17              Experiment Name  reg-default-name
18                          USI              56bd
2024-03-16 17:55:06,270:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:06,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:06,408:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-16 17:55:06,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-16 17:55:06,420:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-16 17:55:06,420:INFO:Logging experiment in loggers
2024-03-16 17:55:06,487:INFO:SubProcess save_model() called ==================================
2024-03-16 17:55:06,511:INFO:Initializing save_model()
2024-03-16 17:55:06,511:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\SunWeiyi\AppData\Local\Temp\tmp4qlyqa56\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-03-16 17:55:06,511:INFO:Adding model into prep_pipe
2024-03-16 17:55:06,511:WARNING:Only Model saved as it was a pipeline.
2024-03-16 17:55:06,520:INFO:C:\Users\SunWeiyi\AppData\Local\Temp\tmp4qlyqa56\Transformation Pipeline.pkl saved in current working directory
2024-03-16 17:55:06,520:INFO:Pipeline(memory=FastMemory(location=C:\Users\SunWeiyi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NORMNTN_presence',
                                             'WKFLDKG_presence',
                                             'WKFLDWG_presence',
                                             'BNSLY_presence',
                                             'MEADWHL_presence',
                                             'LEEDS_dep_delay',
                                             'SHEFFLD_arr_delay', 'station_ave',
                                             'Hour', 'Leeds.trains',
                                             'Leeds.av.delay',
                                             'Sheffield.trains',
                                             'Sheffield.av.delay',
                                             'Nottingham.trains',
                                             'Nottingham.av.delay',
                                             'train_code.code', 'Day.code'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-16 17:55:06,520:INFO:save_model() successfully completed......................................
2024-03-16 17:55:06,806:INFO:SubProcess save_model() end ==================================
2024-03-16 17:55:06,826:INFO:setup() successfully completed in 2.18s...............
2024-03-16 17:55:06,826:INFO:Initializing compare_models()
2024-03-16 17:55:06,826:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=MSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-03-16 17:55:06,826:INFO:Checking exceptions
2024-03-16 17:55:06,829:INFO:Preparing display monitor
2024-03-16 17:55:06,861:INFO:Initializing Linear Regression
2024-03-16 17:55:06,861:INFO:Total runtime is 0.0 minutes
2024-03-16 17:55:06,864:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:06,864:INFO:Initializing create_model()
2024-03-16 17:55:06,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:06,864:INFO:Checking exceptions
2024-03-16 17:55:06,864:INFO:Importing libraries
2024-03-16 17:55:06,864:INFO:Copying training dataset
2024-03-16 17:55:06,878:INFO:Defining folds
2024-03-16 17:55:06,878:INFO:Declaring metric variables
2024-03-16 17:55:06,883:INFO:Importing untrained model
2024-03-16 17:55:06,890:INFO:Linear Regression Imported successfully
2024-03-16 17:55:06,898:INFO:Starting cross validation
2024-03-16 17:55:06,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:07,044:INFO:Calculating mean and std
2024-03-16 17:55:07,044:INFO:Creating metrics dataframe
2024-03-16 17:55:07,044:INFO:Uploading results into container
2024-03-16 17:55:07,044:INFO:Uploading model into container now
2024-03-16 17:55:07,044:INFO:_master_model_container: 1
2024-03-16 17:55:07,044:INFO:_display_container: 2
2024-03-16 17:55:07,044:INFO:LinearRegression(n_jobs=-1)
2024-03-16 17:55:07,044:INFO:create_model() successfully completed......................................
2024-03-16 17:55:07,337:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:07,337:INFO:Creating metrics dataframe
2024-03-16 17:55:07,337:INFO:Initializing Lasso Regression
2024-03-16 17:55:07,337:INFO:Total runtime is 0.00792843500773112 minutes
2024-03-16 17:55:07,353:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:07,353:INFO:Initializing create_model()
2024-03-16 17:55:07,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:07,354:INFO:Checking exceptions
2024-03-16 17:55:07,354:INFO:Importing libraries
2024-03-16 17:55:07,354:INFO:Copying training dataset
2024-03-16 17:55:07,359:INFO:Defining folds
2024-03-16 17:55:07,359:INFO:Declaring metric variables
2024-03-16 17:55:07,359:INFO:Importing untrained model
2024-03-16 17:55:07,371:INFO:Lasso Regression Imported successfully
2024-03-16 17:55:07,374:INFO:Starting cross validation
2024-03-16 17:55:07,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:07,487:INFO:Calculating mean and std
2024-03-16 17:55:07,487:INFO:Creating metrics dataframe
2024-03-16 17:55:07,487:INFO:Uploading results into container
2024-03-16 17:55:07,487:INFO:Uploading model into container now
2024-03-16 17:55:07,487:INFO:_master_model_container: 2
2024-03-16 17:55:07,487:INFO:_display_container: 2
2024-03-16 17:55:07,487:INFO:Lasso(random_state=4568)
2024-03-16 17:55:07,487:INFO:create_model() successfully completed......................................
2024-03-16 17:55:07,787:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:07,787:INFO:Creating metrics dataframe
2024-03-16 17:55:07,791:INFO:Initializing Ridge Regression
2024-03-16 17:55:07,791:INFO:Total runtime is 0.015500752131144206 minutes
2024-03-16 17:55:07,791:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:07,791:INFO:Initializing create_model()
2024-03-16 17:55:07,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:07,791:INFO:Checking exceptions
2024-03-16 17:55:07,791:INFO:Importing libraries
2024-03-16 17:55:07,791:INFO:Copying training dataset
2024-03-16 17:55:07,804:INFO:Defining folds
2024-03-16 17:55:07,804:INFO:Declaring metric variables
2024-03-16 17:55:07,809:INFO:Importing untrained model
2024-03-16 17:55:07,815:INFO:Ridge Regression Imported successfully
2024-03-16 17:55:07,823:INFO:Starting cross validation
2024-03-16 17:55:07,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:07,858:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.06184e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,858:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.93043e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,858:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.61149e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,877:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.10635e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,882:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.08954e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,887:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.48113e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,887:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.28643e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,912:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.46296e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,920:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.83582e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,920:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.35143e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-16 17:55:07,937:INFO:Calculating mean and std
2024-03-16 17:55:07,937:INFO:Creating metrics dataframe
2024-03-16 17:55:07,937:INFO:Uploading results into container
2024-03-16 17:55:07,937:INFO:Uploading model into container now
2024-03-16 17:55:07,937:INFO:_master_model_container: 3
2024-03-16 17:55:07,937:INFO:_display_container: 2
2024-03-16 17:55:07,937:INFO:Ridge(random_state=4568)
2024-03-16 17:55:07,937:INFO:create_model() successfully completed......................................
2024-03-16 17:55:08,237:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:08,237:INFO:Creating metrics dataframe
2024-03-16 17:55:08,255:INFO:Initializing Elastic Net
2024-03-16 17:55:08,255:INFO:Total runtime is 0.023231875896453858 minutes
2024-03-16 17:55:08,259:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:08,259:INFO:Initializing create_model()
2024-03-16 17:55:08,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:08,260:INFO:Checking exceptions
2024-03-16 17:55:08,260:INFO:Importing libraries
2024-03-16 17:55:08,260:INFO:Copying training dataset
2024-03-16 17:55:08,267:INFO:Defining folds
2024-03-16 17:55:08,267:INFO:Declaring metric variables
2024-03-16 17:55:08,273:INFO:Importing untrained model
2024-03-16 17:55:08,279:INFO:Elastic Net Imported successfully
2024-03-16 17:55:08,300:INFO:Starting cross validation
2024-03-16 17:55:08,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:08,466:INFO:Calculating mean and std
2024-03-16 17:55:08,468:INFO:Creating metrics dataframe
2024-03-16 17:55:08,470:INFO:Uploading results into container
2024-03-16 17:55:08,470:INFO:Uploading model into container now
2024-03-16 17:55:08,470:INFO:_master_model_container: 4
2024-03-16 17:55:08,470:INFO:_display_container: 2
2024-03-16 17:55:08,475:INFO:ElasticNet(random_state=4568)
2024-03-16 17:55:08,475:INFO:create_model() successfully completed......................................
2024-03-16 17:55:08,803:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:08,804:INFO:Creating metrics dataframe
2024-03-16 17:55:08,809:INFO:Initializing Least Angle Regression
2024-03-16 17:55:08,809:INFO:Total runtime is 0.032454061508178714 minutes
2024-03-16 17:55:08,809:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:08,809:INFO:Initializing create_model()
2024-03-16 17:55:08,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:08,819:INFO:Checking exceptions
2024-03-16 17:55:08,819:INFO:Importing libraries
2024-03-16 17:55:08,819:INFO:Copying training dataset
2024-03-16 17:55:08,820:INFO:Defining folds
2024-03-16 17:55:08,820:INFO:Declaring metric variables
2024-03-16 17:55:08,833:INFO:Importing untrained model
2024-03-16 17:55:08,837:INFO:Least Angle Regression Imported successfully
2024-03-16 17:55:08,837:INFO:Starting cross validation
2024-03-16 17:55:08,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:08,970:INFO:Calculating mean and std
2024-03-16 17:55:08,970:INFO:Creating metrics dataframe
2024-03-16 17:55:08,970:INFO:Uploading results into container
2024-03-16 17:55:08,970:INFO:Uploading model into container now
2024-03-16 17:55:08,970:INFO:_master_model_container: 5
2024-03-16 17:55:08,970:INFO:_display_container: 2
2024-03-16 17:55:08,970:INFO:Lars(random_state=4568)
2024-03-16 17:55:08,970:INFO:create_model() successfully completed......................................
2024-03-16 17:55:09,295:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:09,295:INFO:Creating metrics dataframe
2024-03-16 17:55:09,309:INFO:Initializing Lasso Least Angle Regression
2024-03-16 17:55:09,309:INFO:Total runtime is 0.04078812201817831 minutes
2024-03-16 17:55:09,309:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:09,309:INFO:Initializing create_model()
2024-03-16 17:55:09,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:09,309:INFO:Checking exceptions
2024-03-16 17:55:09,309:INFO:Importing libraries
2024-03-16 17:55:09,309:INFO:Copying training dataset
2024-03-16 17:55:09,328:INFO:Defining folds
2024-03-16 17:55:09,328:INFO:Declaring metric variables
2024-03-16 17:55:09,331:INFO:Importing untrained model
2024-03-16 17:55:09,340:INFO:Lasso Least Angle Regression Imported successfully
2024-03-16 17:55:09,343:INFO:Starting cross validation
2024-03-16 17:55:09,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:09,471:INFO:Calculating mean and std
2024-03-16 17:55:09,486:INFO:Creating metrics dataframe
2024-03-16 17:55:09,489:INFO:Uploading results into container
2024-03-16 17:55:09,489:INFO:Uploading model into container now
2024-03-16 17:55:09,490:INFO:_master_model_container: 6
2024-03-16 17:55:09,490:INFO:_display_container: 2
2024-03-16 17:55:09,491:INFO:LassoLars(random_state=4568)
2024-03-16 17:55:09,491:INFO:create_model() successfully completed......................................
2024-03-16 17:55:09,770:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:09,770:INFO:Creating metrics dataframe
2024-03-16 17:55:09,787:INFO:Initializing Orthogonal Matching Pursuit
2024-03-16 17:55:09,787:INFO:Total runtime is 0.04875706434249878 minutes
2024-03-16 17:55:09,787:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:09,787:INFO:Initializing create_model()
2024-03-16 17:55:09,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:09,787:INFO:Checking exceptions
2024-03-16 17:55:09,787:INFO:Importing libraries
2024-03-16 17:55:09,787:INFO:Copying training dataset
2024-03-16 17:55:09,809:INFO:Defining folds
2024-03-16 17:55:09,809:INFO:Declaring metric variables
2024-03-16 17:55:09,809:INFO:Importing untrained model
2024-03-16 17:55:09,818:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:55:09,821:INFO:Starting cross validation
2024-03-16 17:55:09,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:09,937:INFO:Calculating mean and std
2024-03-16 17:55:09,937:INFO:Creating metrics dataframe
2024-03-16 17:55:09,937:INFO:Uploading results into container
2024-03-16 17:55:09,952:INFO:Uploading model into container now
2024-03-16 17:55:09,952:INFO:_master_model_container: 7
2024-03-16 17:55:09,953:INFO:_display_container: 2
2024-03-16 17:55:09,954:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:55:09,954:INFO:create_model() successfully completed......................................
2024-03-16 17:55:10,225:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:10,225:INFO:Creating metrics dataframe
2024-03-16 17:55:10,237:INFO:Initializing Bayesian Ridge
2024-03-16 17:55:10,237:INFO:Total runtime is 0.056256643931070965 minutes
2024-03-16 17:55:10,237:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:10,237:INFO:Initializing create_model()
2024-03-16 17:55:10,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:10,237:INFO:Checking exceptions
2024-03-16 17:55:10,237:INFO:Importing libraries
2024-03-16 17:55:10,237:INFO:Copying training dataset
2024-03-16 17:55:10,256:INFO:Defining folds
2024-03-16 17:55:10,256:INFO:Declaring metric variables
2024-03-16 17:55:10,260:INFO:Importing untrained model
2024-03-16 17:55:10,264:INFO:Bayesian Ridge Imported successfully
2024-03-16 17:55:10,273:INFO:Starting cross validation
2024-03-16 17:55:10,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:10,370:INFO:Calculating mean and std
2024-03-16 17:55:10,370:INFO:Creating metrics dataframe
2024-03-16 17:55:10,370:INFO:Uploading results into container
2024-03-16 17:55:10,385:INFO:Uploading model into container now
2024-03-16 17:55:10,386:INFO:_master_model_container: 8
2024-03-16 17:55:10,387:INFO:_display_container: 2
2024-03-16 17:55:10,388:INFO:BayesianRidge()
2024-03-16 17:55:10,388:INFO:create_model() successfully completed......................................
2024-03-16 17:55:10,658:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:10,658:INFO:Creating metrics dataframe
2024-03-16 17:55:10,658:INFO:Initializing Passive Aggressive Regressor
2024-03-16 17:55:10,658:INFO:Total runtime is 0.06327864329020183 minutes
2024-03-16 17:55:10,670:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:10,670:INFO:Initializing create_model()
2024-03-16 17:55:10,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:10,670:INFO:Checking exceptions
2024-03-16 17:55:10,670:INFO:Importing libraries
2024-03-16 17:55:10,670:INFO:Copying training dataset
2024-03-16 17:55:10,670:INFO:Defining folds
2024-03-16 17:55:10,670:INFO:Declaring metric variables
2024-03-16 17:55:10,687:INFO:Importing untrained model
2024-03-16 17:55:10,691:INFO:Passive Aggressive Regressor Imported successfully
2024-03-16 17:55:10,691:INFO:Starting cross validation
2024-03-16 17:55:10,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:10,804:INFO:Calculating mean and std
2024-03-16 17:55:10,804:INFO:Creating metrics dataframe
2024-03-16 17:55:10,809:INFO:Uploading results into container
2024-03-16 17:55:10,809:INFO:Uploading model into container now
2024-03-16 17:55:10,809:INFO:_master_model_container: 9
2024-03-16 17:55:10,809:INFO:_display_container: 2
2024-03-16 17:55:10,809:INFO:PassiveAggressiveRegressor(random_state=4568)
2024-03-16 17:55:10,811:INFO:create_model() successfully completed......................................
2024-03-16 17:55:11,070:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:11,070:INFO:Creating metrics dataframe
2024-03-16 17:55:11,091:INFO:Initializing Huber Regressor
2024-03-16 17:55:11,091:INFO:Total runtime is 0.07049982150395712 minutes
2024-03-16 17:55:11,091:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:11,091:INFO:Initializing create_model()
2024-03-16 17:55:11,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:11,091:INFO:Checking exceptions
2024-03-16 17:55:11,091:INFO:Importing libraries
2024-03-16 17:55:11,091:INFO:Copying training dataset
2024-03-16 17:55:11,103:INFO:Defining folds
2024-03-16 17:55:11,103:INFO:Declaring metric variables
2024-03-16 17:55:11,110:INFO:Importing untrained model
2024-03-16 17:55:11,114:INFO:Huber Regressor Imported successfully
2024-03-16 17:55:11,124:INFO:Starting cross validation
2024-03-16 17:55:11,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:11,236:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,237:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,264:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,269:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,286:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,287:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,287:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,311:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,329:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,332:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-03-16 17:55:11,349:INFO:Calculating mean and std
2024-03-16 17:55:11,350:INFO:Creating metrics dataframe
2024-03-16 17:55:11,354:INFO:Uploading results into container
2024-03-16 17:55:11,355:INFO:Uploading model into container now
2024-03-16 17:55:11,356:INFO:_master_model_container: 10
2024-03-16 17:55:11,357:INFO:_display_container: 2
2024-03-16 17:55:11,357:INFO:HuberRegressor()
2024-03-16 17:55:11,357:INFO:create_model() successfully completed......................................
2024-03-16 17:55:11,670:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:11,670:INFO:Creating metrics dataframe
2024-03-16 17:55:11,670:INFO:Initializing K Neighbors Regressor
2024-03-16 17:55:11,685:INFO:Total runtime is 0.08039748668670654 minutes
2024-03-16 17:55:11,687:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:11,687:INFO:Initializing create_model()
2024-03-16 17:55:11,687:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:11,687:INFO:Checking exceptions
2024-03-16 17:55:11,687:INFO:Importing libraries
2024-03-16 17:55:11,687:INFO:Copying training dataset
2024-03-16 17:55:11,687:INFO:Defining folds
2024-03-16 17:55:11,687:INFO:Declaring metric variables
2024-03-16 17:55:11,706:INFO:Importing untrained model
2024-03-16 17:55:11,711:INFO:K Neighbors Regressor Imported successfully
2024-03-16 17:55:11,720:INFO:Starting cross validation
2024-03-16 17:55:11,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:12,070:INFO:Calculating mean and std
2024-03-16 17:55:12,070:INFO:Creating metrics dataframe
2024-03-16 17:55:12,070:INFO:Uploading results into container
2024-03-16 17:55:12,070:INFO:Uploading model into container now
2024-03-16 17:55:12,070:INFO:_master_model_container: 11
2024-03-16 17:55:12,070:INFO:_display_container: 2
2024-03-16 17:55:12,070:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-16 17:55:12,070:INFO:create_model() successfully completed......................................
2024-03-16 17:55:12,385:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:12,385:INFO:Creating metrics dataframe
2024-03-16 17:55:12,387:INFO:Initializing Decision Tree Regressor
2024-03-16 17:55:12,387:INFO:Total runtime is 0.09208993117014568 minutes
2024-03-16 17:55:12,403:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:12,403:INFO:Initializing create_model()
2024-03-16 17:55:12,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:12,403:INFO:Checking exceptions
2024-03-16 17:55:12,403:INFO:Importing libraries
2024-03-16 17:55:12,403:INFO:Copying training dataset
2024-03-16 17:55:12,410:INFO:Defining folds
2024-03-16 17:55:12,410:INFO:Declaring metric variables
2024-03-16 17:55:12,418:INFO:Importing untrained model
2024-03-16 17:55:12,423:INFO:Decision Tree Regressor Imported successfully
2024-03-16 17:55:12,424:INFO:Starting cross validation
2024-03-16 17:55:12,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:12,637:INFO:Calculating mean and std
2024-03-16 17:55:12,637:INFO:Creating metrics dataframe
2024-03-16 17:55:12,637:INFO:Uploading results into container
2024-03-16 17:55:12,637:INFO:Uploading model into container now
2024-03-16 17:55:12,637:INFO:_master_model_container: 12
2024-03-16 17:55:12,637:INFO:_display_container: 2
2024-03-16 17:55:12,652:INFO:DecisionTreeRegressor(random_state=4568)
2024-03-16 17:55:12,653:INFO:create_model() successfully completed......................................
2024-03-16 17:55:13,004:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:13,004:INFO:Creating metrics dataframe
2024-03-16 17:55:13,022:INFO:Initializing Random Forest Regressor
2024-03-16 17:55:13,022:INFO:Total runtime is 0.10266803900400798 minutes
2024-03-16 17:55:13,026:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:13,026:INFO:Initializing create_model()
2024-03-16 17:55:13,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:13,026:INFO:Checking exceptions
2024-03-16 17:55:13,026:INFO:Importing libraries
2024-03-16 17:55:13,026:INFO:Copying training dataset
2024-03-16 17:55:13,037:INFO:Defining folds
2024-03-16 17:55:13,040:INFO:Declaring metric variables
2024-03-16 17:55:13,045:INFO:Importing untrained model
2024-03-16 17:55:13,049:INFO:Random Forest Regressor Imported successfully
2024-03-16 17:55:13,060:INFO:Starting cross validation
2024-03-16 17:55:13,060:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:16,845:INFO:Calculating mean and std
2024-03-16 17:55:16,845:INFO:Creating metrics dataframe
2024-03-16 17:55:16,854:INFO:Uploading results into container
2024-03-16 17:55:16,856:INFO:Uploading model into container now
2024-03-16 17:55:16,856:INFO:_master_model_container: 13
2024-03-16 17:55:16,857:INFO:_display_container: 2
2024-03-16 17:55:16,858:INFO:RandomForestRegressor(n_jobs=-1, random_state=4568)
2024-03-16 17:55:16,858:INFO:create_model() successfully completed......................................
2024-03-16 17:55:17,321:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:17,321:INFO:Creating metrics dataframe
2024-03-16 17:55:17,337:INFO:Initializing Extra Trees Regressor
2024-03-16 17:55:17,337:INFO:Total runtime is 0.17459395329157512 minutes
2024-03-16 17:55:17,342:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:17,342:INFO:Initializing create_model()
2024-03-16 17:55:17,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:17,343:INFO:Checking exceptions
2024-03-16 17:55:17,343:INFO:Importing libraries
2024-03-16 17:55:17,343:INFO:Copying training dataset
2024-03-16 17:55:17,353:INFO:Defining folds
2024-03-16 17:55:17,353:INFO:Declaring metric variables
2024-03-16 17:55:17,359:INFO:Importing untrained model
2024-03-16 17:55:17,364:INFO:Extra Trees Regressor Imported successfully
2024-03-16 17:55:17,378:INFO:Starting cross validation
2024-03-16 17:55:17,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:19,625:INFO:Calculating mean and std
2024-03-16 17:55:19,630:INFO:Creating metrics dataframe
2024-03-16 17:55:19,636:INFO:Uploading results into container
2024-03-16 17:55:19,637:INFO:Uploading model into container now
2024-03-16 17:55:19,638:INFO:_master_model_container: 14
2024-03-16 17:55:19,638:INFO:_display_container: 2
2024-03-16 17:55:19,639:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4568)
2024-03-16 17:55:19,639:INFO:create_model() successfully completed......................................
2024-03-16 17:55:19,987:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:19,987:INFO:Creating metrics dataframe
2024-03-16 17:55:20,006:INFO:Initializing AdaBoost Regressor
2024-03-16 17:55:20,006:INFO:Total runtime is 0.21906965176264445 minutes
2024-03-16 17:55:20,011:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:20,011:INFO:Initializing create_model()
2024-03-16 17:55:20,011:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:20,012:INFO:Checking exceptions
2024-03-16 17:55:20,012:INFO:Importing libraries
2024-03-16 17:55:20,012:INFO:Copying training dataset
2024-03-16 17:55:20,020:INFO:Defining folds
2024-03-16 17:55:20,020:INFO:Declaring metric variables
2024-03-16 17:55:20,020:INFO:Importing untrained model
2024-03-16 17:55:20,020:INFO:AdaBoost Regressor Imported successfully
2024-03-16 17:55:20,040:INFO:Starting cross validation
2024-03-16 17:55:20,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:20,526:INFO:Calculating mean and std
2024-03-16 17:55:20,537:INFO:Creating metrics dataframe
2024-03-16 17:55:20,540:INFO:Uploading results into container
2024-03-16 17:55:20,541:INFO:Uploading model into container now
2024-03-16 17:55:20,541:INFO:_master_model_container: 15
2024-03-16 17:55:20,541:INFO:_display_container: 2
2024-03-16 17:55:20,541:INFO:AdaBoostRegressor(random_state=4568)
2024-03-16 17:55:20,541:INFO:create_model() successfully completed......................................
2024-03-16 17:55:20,837:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:20,837:INFO:Creating metrics dataframe
2024-03-16 17:55:20,858:INFO:Initializing Gradient Boosting Regressor
2024-03-16 17:55:20,858:INFO:Total runtime is 0.23327478170394897 minutes
2024-03-16 17:55:20,858:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:20,858:INFO:Initializing create_model()
2024-03-16 17:55:20,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:20,858:INFO:Checking exceptions
2024-03-16 17:55:20,858:INFO:Importing libraries
2024-03-16 17:55:20,858:INFO:Copying training dataset
2024-03-16 17:55:20,870:INFO:Defining folds
2024-03-16 17:55:20,870:INFO:Declaring metric variables
2024-03-16 17:55:20,878:INFO:Importing untrained model
2024-03-16 17:55:20,883:INFO:Gradient Boosting Regressor Imported successfully
2024-03-16 17:55:20,892:INFO:Starting cross validation
2024-03-16 17:55:20,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:21,810:INFO:Calculating mean and std
2024-03-16 17:55:21,811:INFO:Creating metrics dataframe
2024-03-16 17:55:21,811:INFO:Uploading results into container
2024-03-16 17:55:21,811:INFO:Uploading model into container now
2024-03-16 17:55:21,811:INFO:_master_model_container: 16
2024-03-16 17:55:21,811:INFO:_display_container: 2
2024-03-16 17:55:21,811:INFO:GradientBoostingRegressor(random_state=4568)
2024-03-16 17:55:21,819:INFO:create_model() successfully completed......................................
2024-03-16 17:55:22,187:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:22,187:INFO:Creating metrics dataframe
2024-03-16 17:55:22,213:INFO:Initializing Extreme Gradient Boosting
2024-03-16 17:55:22,214:INFO:Total runtime is 0.2558688720067342 minutes
2024-03-16 17:55:22,218:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:22,219:INFO:Initializing create_model()
2024-03-16 17:55:22,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:22,219:INFO:Checking exceptions
2024-03-16 17:55:22,220:INFO:Importing libraries
2024-03-16 17:55:22,220:INFO:Copying training dataset
2024-03-16 17:55:22,220:INFO:Defining folds
2024-03-16 17:55:22,220:INFO:Declaring metric variables
2024-03-16 17:55:22,220:INFO:Importing untrained model
2024-03-16 17:55:22,242:INFO:Extreme Gradient Boosting Imported successfully
2024-03-16 17:55:22,274:INFO:Starting cross validation
2024-03-16 17:55:22,274:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:23,120:INFO:Calculating mean and std
2024-03-16 17:55:23,120:INFO:Creating metrics dataframe
2024-03-16 17:55:23,120:INFO:Uploading results into container
2024-03-16 17:55:23,120:INFO:Uploading model into container now
2024-03-16 17:55:23,132:INFO:_master_model_container: 17
2024-03-16 17:55:23,132:INFO:_display_container: 2
2024-03-16 17:55:23,136:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4568, ...)
2024-03-16 17:55:23,136:INFO:create_model() successfully completed......................................
2024-03-16 17:55:23,421:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:23,421:INFO:Creating metrics dataframe
2024-03-16 17:55:23,434:INFO:Initializing Light Gradient Boosting Machine
2024-03-16 17:55:23,434:INFO:Total runtime is 0.2762056469917297 minutes
2024-03-16 17:55:23,449:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:23,449:INFO:Initializing create_model()
2024-03-16 17:55:23,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:23,449:INFO:Checking exceptions
2024-03-16 17:55:23,449:INFO:Importing libraries
2024-03-16 17:55:23,449:INFO:Copying training dataset
2024-03-16 17:55:23,449:INFO:Defining folds
2024-03-16 17:55:23,449:INFO:Declaring metric variables
2024-03-16 17:55:23,465:INFO:Importing untrained model
2024-03-16 17:55:23,465:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-16 17:55:23,465:INFO:Starting cross validation
2024-03-16 17:55:23,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:26,247:INFO:Calculating mean and std
2024-03-16 17:55:26,251:INFO:Creating metrics dataframe
2024-03-16 17:55:26,257:INFO:Uploading results into container
2024-03-16 17:55:26,260:INFO:Uploading model into container now
2024-03-16 17:55:26,261:INFO:_master_model_container: 18
2024-03-16 17:55:26,261:INFO:_display_container: 2
2024-03-16 17:55:26,262:INFO:LGBMRegressor(n_jobs=-1, random_state=4568)
2024-03-16 17:55:26,263:INFO:create_model() successfully completed......................................
2024-03-16 17:55:26,691:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:26,691:INFO:Creating metrics dataframe
2024-03-16 17:55:26,723:INFO:Initializing Dummy Regressor
2024-03-16 17:55:26,723:INFO:Total runtime is 0.33101845979690553 minutes
2024-03-16 17:55:26,730:INFO:SubProcess create_model() called ==================================
2024-03-16 17:55:26,730:INFO:Initializing create_model()
2024-03-16 17:55:26,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B8424321D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:26,730:INFO:Checking exceptions
2024-03-16 17:55:26,731:INFO:Importing libraries
2024-03-16 17:55:26,731:INFO:Copying training dataset
2024-03-16 17:55:26,749:INFO:Defining folds
2024-03-16 17:55:26,749:INFO:Declaring metric variables
2024-03-16 17:55:26,759:INFO:Importing untrained model
2024-03-16 17:55:26,767:INFO:Dummy Regressor Imported successfully
2024-03-16 17:55:26,788:INFO:Starting cross validation
2024-03-16 17:55:26,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-16 17:55:26,968:INFO:Calculating mean and std
2024-03-16 17:55:26,971:INFO:Creating metrics dataframe
2024-03-16 17:55:26,975:INFO:Uploading results into container
2024-03-16 17:55:26,976:INFO:Uploading model into container now
2024-03-16 17:55:26,977:INFO:_master_model_container: 19
2024-03-16 17:55:26,977:INFO:_display_container: 2
2024-03-16 17:55:26,978:INFO:DummyRegressor()
2024-03-16 17:55:26,979:INFO:create_model() successfully completed......................................
2024-03-16 17:55:27,303:INFO:SubProcess create_model() end ==================================
2024-03-16 17:55:27,304:INFO:Creating metrics dataframe
2024-03-16 17:55:27,320:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-03-16 17:55:27,332:INFO:Initializing create_model()
2024-03-16 17:55:27,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-16 17:55:27,332:INFO:Checking exceptions
2024-03-16 17:55:27,335:INFO:Importing libraries
2024-03-16 17:55:27,335:INFO:Copying training dataset
2024-03-16 17:55:27,344:INFO:Defining folds
2024-03-16 17:55:27,344:INFO:Declaring metric variables
2024-03-16 17:55:27,344:INFO:Importing untrained model
2024-03-16 17:55:27,344:INFO:Declaring custom model
2024-03-16 17:55:27,345:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-16 17:55:27,346:INFO:Cross validation set to False
2024-03-16 17:55:27,346:INFO:Fitting Model
2024-03-16 17:55:27,362:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:55:27,362:INFO:create_model() successfully completed......................................
2024-03-16 17:55:27,750:INFO:Creating Dashboard logs
2024-03-16 17:55:27,757:INFO:Model: Orthogonal Matching Pursuit
2024-03-16 17:55:27,834:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-03-16 17:55:27,988:INFO:Initializing predict_model()
2024-03-16 17:55:27,988:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002B839A58710>, estimator=OrthogonalMatchingPursuit(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B830544220>)
2024-03-16 17:55:27,988:INFO:Checking exceptions
2024-03-16 17:55:27,988:INFO:Preloading libraries
2024-03-16 17:55:28,127:WARNING:C:\Users\SunWeiyi\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-03-16 17:55:29,032:INFO:Creating Dashboard logs
2024-03-16 17:55:29,042:INFO:Model: Bayesian Ridge
2024-03-16 17:55:29,159:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-03-16 17:55:30,213:INFO:Creating Dashboard logs
2024-03-16 17:55:30,228:INFO:Model: Elastic Net
2024-03-16 17:55:30,410:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4568, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:55:31,393:INFO:Creating Dashboard logs
2024-03-16 17:55:31,400:INFO:Model: Lasso Regression
2024-03-16 17:55:31,473:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 4568, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-03-16 17:55:31,998:INFO:Creating Dashboard logs
2024-03-16 17:55:32,003:INFO:Model: Lasso Least Angle Regression
2024-03-16 17:55:32,073:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 4568, 'verbose': False}
2024-03-16 17:55:32,556:INFO:Creating Dashboard logs
2024-03-16 17:55:32,560:INFO:Model: Ridge Regression
2024-03-16 17:55:32,609:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 4568, 'solver': 'auto', 'tol': 0.0001}
2024-03-16 17:55:33,017:INFO:Creating Dashboard logs
2024-03-16 17:55:33,020:INFO:Model: Least Angle Regression
2024-03-16 17:55:33,088:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 4568, 'verbose': False}
2024-03-16 17:55:33,701:INFO:Creating Dashboard logs
2024-03-16 17:55:33,706:INFO:Model: Gradient Boosting Regressor
2024-03-16 17:55:33,767:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 4568, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:55:34,211:INFO:Creating Dashboard logs
2024-03-16 17:55:34,215:INFO:Model: Linear Regression
2024-03-16 17:55:34,265:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-03-16 17:55:34,638:INFO:Creating Dashboard logs
2024-03-16 17:55:34,641:INFO:Model: Huber Regressor
2024-03-16 17:55:34,687:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-03-16 17:55:35,014:INFO:Creating Dashboard logs
2024-03-16 17:55:35,018:INFO:Model: Extra Trees Regressor
2024-03-16 17:55:35,064:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4568, 'verbose': 0, 'warm_start': False}
2024-03-16 17:55:35,398:INFO:Creating Dashboard logs
2024-03-16 17:55:35,403:INFO:Model: Random Forest Regressor
2024-03-16 17:55:35,448:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 4568, 'verbose': 0, 'warm_start': False}
2024-03-16 17:55:35,801:INFO:Creating Dashboard logs
2024-03-16 17:55:35,805:INFO:Model: Light Gradient Boosting Machine
2024-03-16 17:55:35,850:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 4568, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-03-16 17:55:36,194:INFO:Creating Dashboard logs
2024-03-16 17:55:36,196:INFO:Model: K Neighbors Regressor
2024-03-16 17:55:36,242:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-03-16 17:55:36,581:INFO:Creating Dashboard logs
2024-03-16 17:55:36,584:INFO:Model: Extreme Gradient Boosting
2024-03-16 17:55:36,633:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 4568, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-03-16 17:55:37,049:INFO:Creating Dashboard logs
2024-03-16 17:55:37,053:INFO:Model: AdaBoost Regressor
2024-03-16 17:55:37,099:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 4568}
2024-03-16 17:55:37,427:INFO:Creating Dashboard logs
2024-03-16 17:55:37,431:INFO:Model: Decision Tree Regressor
2024-03-16 17:55:37,470:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4568, 'splitter': 'best'}
2024-03-16 17:55:37,801:INFO:Creating Dashboard logs
2024-03-16 17:55:37,805:INFO:Model: Dummy Regressor
2024-03-16 17:55:37,850:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-03-16 17:55:38,164:INFO:Creating Dashboard logs
2024-03-16 17:55:38,168:INFO:Model: Passive Aggressive Regressor
2024-03-16 17:55:38,216:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 4568, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-03-16 17:55:38,572:INFO:_master_model_container: 19
2024-03-16 17:55:38,573:INFO:_display_container: 2
2024-03-16 17:55:38,573:INFO:OrthogonalMatchingPursuit()
2024-03-16 17:55:38,573:INFO:compare_models() successfully completed......................................
